structure CacheLibTheory :> CacheLibTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading CacheLibTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open arm_stepTheory cacheTheory
  in end;
  val _ = Theory.link_parents
          ("CacheLib",
          Arbnum.fromString "1521647243",
          Arbnum.fromString "543495")
          [("arm_step",
           Arbnum.fromString "1510753628",
           Arbnum.fromString "501602"),
           ("cache",
           Arbnum.fromString "1521643636",
           Arbnum.fromString "731319")];
  val _ = Theory.incorporate_types "CacheLib" [];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("fcp", "cart"), ID("fcp", "bit0"),
   ID("one", "one"), ID("min", "bool"), ID("fcp", "bit1"),
   ID("pair", "prod"), ID("cache", "cache_state"), ID("cache", "CSET"),
   ID("list", "list"), ID("num", "num"), ID("cache", "actions"),
   ID("cache", "wrTyp"), ID("option", "option"), ID("cache", "SLVAL"),
   ID("bool", "!"), ID("arithmetic", "+"), ID("pair", ","),
   ID("arithmetic", "-"), ID("bool", "/\\"), ID("num", "0"),
   ID("prim_rec", "<"), ID("arithmetic", "<="), ID("min", "="),
   ID("min", "==>"), ID("arithmetic", "BIT1"), ID("arithmetic", "BIT2"),
   ID("cache", "CACHE_CONFIG_ccsidr"), ID("cache", "CCSIDR"),
   ID("cache", "CACHE_CONFIG"), ID("cache", "CACHE_CONFIG_ctr"),
   ID("cache", "CTR"), ID("cache", "CCSIDR_NumSets"),
   ID("cache", "CSET_hist"), ID("cache", "CSET_sl"),
   ID("cache", "CSET_sl_fupd"), ID("cache", "CTR_DminLine"),
   ID("cache", "CacheCleanByAdr"), ID("cache", "CacheInvalidateByAdr"),
   ID("cache", "CacheRead"), ID("cache", "CacheWrite"),
   ID("cache", "CellFill"), ID("cache", "CellRead"), ID("cache", "EP"),
   ID("arithmetic", "EXP"), ID("bool", "F"), ID("pair", "FST"),
   ID("cache", "Fill"), ID("cache", "Hit"), ID("option", "IS_SOME"),
   ID("combin", "K"), ID("list", "LENGTH"), ID("bool", "LET"),
   ID("cache", "LineDirty"), ID("cache", "LineFill"),
   ID("arithmetic", "MOD"), ID("option", "NONE"),
   ID("arithmetic", "NUMERAL"), ID("cache", "SLVAL_dirty"),
   ID("cache", "SLVAL_dirty_fupd"), ID("cache", "SLVAL_value"),
   ID("pair", "SND"), ID("option", "SOME"), ID("option", "THE"),
   ID("pair", "UNCURRY"), ID("combin", "UPDATE"), ID("cache", "WriteBack"),
   ID("cache", "WriteBackLine"), ID("CacheLib", "WriteBackLine_simp"),
   ID("arithmetic", "ZERO"), ID("bool", "\\/"),
   ID("cache", "cache_state_DC"), ID("words", "dimword"),
   ID("bool", "itself"), ID("CacheLib", "invariant_cache"),
   ID("cache", "lineSpec"), ID("CacheLib", "msb_extract"),
   ID("words", "n2w"), ID("cache", "read_mem32"), ID("cache", "si"),
   ID("cache", "tag"), ID("bool", "the_value"), ID("bitstring", "v2w"),
   ID("words", "w2n"), ID("bitstring", "w2v"), ID("cache", "wIdx"),
   ID("words", "word_1comp"), ID("words", "word_add"),
   ID("words", "word_and"), ID("words", "word_extract"),
   ID("words", "word_ge"), ID("words", "word_hi"), ID("words", "word_hs"),
   ID("words", "word_lo"), ID("words", "word_log2"),
   ID("words", "word_lsl"), ID("words", "word_lsr"),
   ID("words", "word_or"), ID("cache", "wrTyp_flag"),
   ID("cache", "wrTyp_value"), ID("CacheLib", "write_mem32"),
   ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYOP [3], TYOP [2, 0], TYOP [2, 1], TYOP [2, 2], TYOP [4],
   TYOP [1, 4, 3], TYOP [5, 0], TYOP [2, 6], TYOP [2, 7], TYOP [2, 8],
   TYOP [2, 9], TYOP [1, 4, 10], TYOP [0, 11, 5], TYOP [2, 3],
   TYOP [2, 13], TYOP [1, 4, 14], TYOP [6, 12, 15], TYOP [6, 11, 16],
   TYOP [0, 17, 12], TYOP [7], TYOP [0, 19, 11], TYOP [0, 11, 20],
   TYOP [2, 14], TYOP [1, 4, 22], TYOP [0, 23, 21], TYV "'b", TYOP [8],
   TYV "'a", TYOP [0, 27, 26], TYOP [6, 28, 25], TYV "'c",
   TYOP [6, 28, 30], TYOP [6, 25, 31], TYOP [6, 11, 32], TYOP [6, 27, 33],
   TYOP [0, 34, 29], TYOP [0, 11, 26], TYOP [9, 4], TYOP [10],
   TYOP [6, 38, 11], TYOP [11], TYOP [6, 40, 39], TYOP [9, 41], TYOP [12],
   TYOP [14], TYOP [13, 44], TYOP [6, 12, 37], TYOP [0, 11, 45],
   TYOP [5, 6], TYOP [5, 48], TYOP [1, 4, 49], TYOP [0, 27, 4],
   TYOP [0, 51, 4], TYOP [0, 25, 4], TYOP [0, 53, 4], TYOP [0, 30, 4],
   TYOP [0, 55, 4], TYOP [0, 44, 4], TYOP [0, 57, 4], TYOP [0, 19, 4],
   TYOP [0, 59, 4], TYOP [0, 23, 4], TYOP [0, 61, 4], TYOP [0, 15, 4],
   TYOP [0, 63, 4], TYOP [0, 11, 4], TYOP [0, 65, 4], TYOP [0, 50, 4],
   TYOP [0, 67, 4], TYOP [0, 28, 4], TYOP [0, 69, 4], TYOP [0, 36, 4],
   TYOP [0, 71, 4], TYOP [0, 12, 4], TYOP [0, 73, 4], TYOP [0, 42, 4],
   TYOP [0, 75, 4], TYOP [0, 38, 4], TYOP [0, 77, 4], TYOP [0, 45, 4],
   TYOP [0, 79, 4], TYOP [0, 43, 4], TYOP [0, 81, 4], TYOP [0, 38, 38],
   TYOP [0, 38, 83], TYOP [0, 33, 34], TYOP [0, 27, 85], TYOP [0, 31, 32],
   TYOP [0, 25, 87], TYOP [6, 23, 11], TYOP [0, 11, 89], TYOP [0, 23, 90],
   TYOP [6, 11, 36], TYOP [6, 23, 92], TYOP [0, 92, 93], TYOP [0, 23, 94],
   TYOP [6, 12, 36], TYOP [6, 11, 96], TYOP [6, 23, 97], TYOP [0, 97, 98],
   TYOP [0, 23, 99], TYOP [6, 43, 96], TYOP [6, 11, 101],
   TYOP [6, 23, 102], TYOP [0, 102, 103], TYOP [0, 23, 104],
   TYOP [0, 36, 92], TYOP [0, 11, 106], TYOP [6, 11, 12],
   TYOP [0, 12, 108], TYOP [0, 11, 109], TYOP [0, 32, 33],
   TYOP [0, 11, 111], TYOP [6, 11, 92], TYOP [0, 92, 113],
   TYOP [0, 11, 114], TYOP [6, 36, 38], TYOP [6, 12, 116],
   TYOP [6, 11, 117], TYOP [6, 11, 118], TYOP [0, 118, 119],
   TYOP [0, 11, 120], TYOP [6, 38, 36], TYOP [6, 11, 122],
   TYOP [6, 11, 123], TYOP [0, 123, 124], TYOP [0, 11, 125],
   TYOP [6, 12, 44], TYOP [6, 38, 127], TYOP [6, 11, 128],
   TYOP [6, 11, 129], TYOP [0, 129, 130], TYOP [0, 11, 131],
   TYOP [0, 16, 17], TYOP [0, 11, 133], TYOP [0, 96, 97],
   TYOP [0, 11, 135], TYOP [0, 117, 118], TYOP [0, 11, 137],
   TYOP [0, 122, 123], TYOP [0, 11, 139], TYOP [0, 128, 129],
   TYOP [0, 11, 141], TYOP [0, 101, 102], TYOP [0, 11, 143],
   TYOP [0, 25, 29], TYOP [0, 28, 145], TYOP [0, 30, 31],
   TYOP [0, 28, 147], TYOP [0, 38, 116], TYOP [0, 36, 149],
   TYOP [0, 44, 127], TYOP [0, 12, 151], TYOP [0, 15, 16],
   TYOP [0, 12, 153], TYOP [0, 36, 96], TYOP [0, 12, 155],
   TYOP [0, 116, 117], TYOP [0, 12, 157], TYOP [6, 42, 92],
   TYOP [0, 92, 159], TYOP [0, 42, 160], TYOP [6, 42, 119],
   TYOP [0, 119, 162], TYOP [0, 42, 163], TYOP [0, 36, 122],
   TYOP [0, 38, 165], TYOP [6, 38, 108], TYOP [0, 108, 167],
   TYOP [0, 38, 168], TYOP [0, 127, 128], TYOP [0, 38, 170],
   TYOP [0, 96, 101], TYOP [0, 43, 172], TYOP [0, 4, 4], TYOP [0, 4, 174],
   TYOP [0, 38, 77], TYOP [0, 15, 63], TYOP [0, 11, 65], TYOP [1, 4, 2],
   TYOP [0, 179, 4], TYOP [0, 179, 180], TYOP [0, 50, 67],
   TYOP [0, 36, 71], TYOP [0, 12, 73], TYOP [0, 37, 4], TYOP [0, 37, 185],
   TYOP [0, 45, 79], TYOP [13, 11], TYOP [0, 188, 4], TYOP [0, 188, 189],
   TYOP [6, 11, 38], TYOP [6, 11, 191], TYOP [0, 192, 4],
   TYOP [0, 192, 193], TYOP [0, 29, 4], TYOP [0, 29, 195],
   TYOP [6, 36, 46], TYOP [0, 197, 4], TYOP [0, 197, 198], TYOP [28],
   TYOP [29], TYOP [0, 201, 200], TYOP [31], TYOP [0, 201, 203],
   TYOP [0, 200, 50], TYOP [0, 26, 42], TYOP [0, 26, 47], TYOP [0, 26, 26],
   TYOP [0, 47, 47], TYOP [0, 209, 208], TYOP [0, 203, 179],
   TYOP [6, 36, 12], TYOP [0, 19, 212], TYOP [0, 98, 213],
   TYOP [0, 19, 197], TYOP [0, 98, 215], TYOP [0, 103, 213],
   TYOP [0, 11, 15], TYOP [0, 167, 218], TYOP [0, 124, 15],
   TYOP [0, 159, 188], TYOP [0, 212, 36], TYOP [6, 47, 42],
   TYOP [0, 223, 47], TYOP [0, 93, 59], TYOP [0, 47, 209],
   TYOP [0, 37, 38], TYOP [0, 63, 63], TYOP [0, 65, 65], TYOP [0, 71, 71],
   TYOP [0, 73, 73], TYOP [0, 12, 12], TYOP [0, 232, 232], TYOP [0, 47, 4],
   TYOP [0, 234, 234], TYOP [0, 47, 29], TYOP [0, 236, 236],
   TYOP [0, 77, 77], TYOP [0, 38, 11], TYOP [0, 239, 239],
   TYOP [0, 193, 193], TYOP [0, 192, 11], TYOP [0, 242, 242],
   TYOP [0, 212, 4], TYOP [0, 244, 244], TYOP [0, 198, 198],
   TYOP [0, 223, 4], TYOP [0, 247, 247], TYOP [0, 113, 4],
   TYOP [0, 19, 223], TYOP [0, 162, 250], TYOP [0, 44, 44],
   TYOP [0, 174, 252], TYOP [0, 44, 218], TYOP [0, 212, 12],
   TYOP [0, 44, 45], TYOP [0, 11, 188], TYOP [0, 45, 44],
   TYOP [0, 188, 11], TYOP [0, 191, 4], TYOP [0, 11, 77],
   TYOP [0, 261, 260], TYOP [0, 191, 11], TYOP [0, 11, 239],
   TYOP [0, 264, 263], TYOP [0, 11, 260], TYOP [0, 266, 193],
   TYOP [0, 11, 263], TYOP [0, 268, 242], TYOP [0, 36, 73],
   TYOP [0, 270, 244], TYOP [0, 46, 4], TYOP [0, 36, 272],
   TYOP [0, 273, 198], TYOP [0, 12, 185], TYOP [0, 275, 272],
   TYOP [0, 47, 75], TYOP [0, 277, 247], TYOP [0, 28, 28],
   TYOP [0, 26, 279], TYOP [0, 27, 280], TYOP [0, 5, 232],
   TYOP [0, 11, 282], TYOP [0, 45, 209], TYOP [0, 11, 284],
   TYOP [0, 19, 12], TYOP [0, 130, 286], TYOP [0, 119, 213],
   TYOP [0, 19, 201], TYOP [73, 49], TYOP [0, 290, 38], TYOP [0, 19, 192],
   TYOP [0, 89, 292], TYOP [0, 38, 179], TYOP [0, 38, 50],
   TYOP [0, 108, 37], TYOP [0, 89, 20], TYOP [0, 37, 15],
   TYOP [0, 179, 38], TYOP [0, 50, 38], TYOP [0, 15, 37], TYOP [0, 11, 37],
   TYOP [0, 11, 11], TYOP [0, 11, 303], TYOP [0, 50, 50],
   TYOP [0, 50, 305], TYOP [0, 15, 5], TYOP [0, 38, 307],
   TYOP [0, 38, 308], TYOP [0, 38, 303], TYOP [0, 38, 310],
   TYOP [0, 43, 15]]
  end
  val _ = Theory.incorporate_consts "CacheLib" tyvector
     [("write_mem32", 18), ("msb_extract", 24), ("invariant_cache", 4),
      ("WriteBackLine_simp", 35)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("LSB", 11), TMV("LSB2", 11), TMV("MSB", 11), TMV("MSB2", 11),
   TMV("_", 36), TMV("_", 12), TMV("_", 37), TMV("_", 42), TMV("a", 11),
   TMV("a", 36), TMV("a", 38), TMV("a'", 11), TMV("add", 11), TMV("b", 11),
   TMV("b", 12), TMV("b", 38), TMV("bi", 38), TMV("bmL", 11),
   TMV("bmM", 11), TMV("c", 11), TMV("c", 38), TMV("d", 11), TMV("d", 38),
   TMV("data", 43), TMV("dc", 28), TMV("dc", 36), TMV("dc'", 36),
   TMV("dc''", 36), TMV("h", 42), TMV("i", 11), TMV("i'", 11),
   TMV("l", 45), TMV("li", 27), TMV("ln", 38), TMV("m", 12), TMV("m", 38),
   TMV("m'", 12), TMV("n", 30), TMV("n", 38), TMV("ni", 38), TMV("nl", 38),
   TMV("ns", 38), TMV("nt", 38), TMV("pa", 11), TMV("pa'", 11),
   TMV("pm", 25), TMV("pm", 12), TMV("pm'", 12), TMV("pm'", 46),
   TMV("ps", 38), TMV("s", 19), TMV("s", 38), TMV("s'", 19),
   TMV("sid", 11), TMV("sl", 47), TMV("sl'", 47), TMV("slval", 44),
   TMV("sn", 38), TMV("st", 38), TMV("state", 19), TMV("sval", 15),
   TMV("t", 11), TMV("t'", 11), TMV("tg", 11), TMV("v", 15), TMV("v", 50),
   TMV("v", 47), TMV("va", 23), TMV("va'", 23), TMV("value", 15),
   TMV("vl", 37), TMV("vlc", 37), TMV("vlc'", 15), TMV("vlc'", 37),
   TMV("vlm", 15), TMV("w1", 11), TMV("w2", 11), TMV("wi", 11),
   TMV("wi", 38), TMV("wi'", 38), TMV("x", 11), TMC(15, 52), TMC(15, 54),
   TMC(15, 56), TMC(15, 58), TMC(15, 60), TMC(15, 62), TMC(15, 64),
   TMC(15, 66), TMC(15, 68), TMC(15, 70), TMC(15, 72), TMC(15, 74),
   TMC(15, 76), TMC(15, 78), TMC(15, 80), TMC(15, 82), TMC(16, 84),
   TMC(17, 86), TMC(17, 88), TMC(17, 91), TMC(17, 95), TMC(17, 100),
   TMC(17, 105), TMC(17, 107), TMC(17, 110), TMC(17, 112), TMC(17, 115),
   TMC(17, 121), TMC(17, 126), TMC(17, 132), TMC(17, 134), TMC(17, 136),
   TMC(17, 138), TMC(17, 140), TMC(17, 142), TMC(17, 144), TMC(17, 146),
   TMC(17, 148), TMC(17, 150), TMC(17, 152), TMC(17, 154), TMC(17, 156),
   TMC(17, 158), TMC(17, 161), TMC(17, 164), TMC(17, 166), TMC(17, 169),
   TMC(17, 171), TMC(17, 173), TMC(18, 84), TMC(19, 175), TMC(20, 38),
   TMC(21, 176), TMC(22, 176), TMC(23, 175), TMC(23, 177), TMC(23, 178),
   TMC(23, 181), TMC(23, 182), TMC(23, 183), TMC(23, 184), TMC(23, 186),
   TMC(23, 176), TMC(23, 187), TMC(23, 190), TMC(23, 194), TMC(23, 196),
   TMC(23, 199), TMC(24, 175), TMC(25, 83), TMC(26, 83), TMC(27, 202),
   TMC(30, 204), TMC(32, 205), TMC(33, 206), TMC(34, 207), TMC(35, 210),
   TMC(36, 211), TMC(37, 214), TMC(38, 214), TMC(39, 216), TMC(40, 217),
   TMC(41, 219), TMC(42, 220), TMC(43, 221), TMC(44, 84), TMC(45, 4),
   TMC(46, 222), TMC(46, 224), TMC(47, 214), TMC(48, 225), TMC(49, 79),
   TMC(50, 175), TMC(50, 226), TMC(51, 227), TMC(52, 228), TMC(52, 229),
   TMC(52, 230), TMC(52, 231), TMC(52, 233), TMC(52, 235), TMC(52, 237),
   TMC(52, 238), TMC(52, 240), TMC(52, 241), TMC(52, 243), TMC(52, 245),
   TMC(52, 246), TMC(52, 248), TMC(53, 249), TMC(54, 251), TMC(55, 84),
   TMC(56, 45), TMC(56, 188), TMC(57, 83), TMC(58, 57), TMC(59, 253),
   TMC(60, 254), TMC(61, 255), TMC(62, 256), TMC(62, 257), TMC(63, 258),
   TMC(63, 259), TMC(64, 262), TMC(64, 265), TMC(64, 267), TMC(64, 269),
   TMC(64, 271), TMC(64, 274), TMC(64, 276), TMC(64, 278), TMC(65, 281),
   TMC(65, 283), TMC(65, 285), TMC(66, 287), TMC(67, 288), TMC(68, 35),
   TMC(69, 38), TMC(70, 175), TMC(71, 289), TMC(72, 291), TMC(74, 4),
   TMC(75, 293), TMC(76, 24), TMC(77, 239), TMC(77, 294), TMC(77, 295),
   TMC(78, 296), TMC(79, 297), TMC(80, 297), TMC(81, 290), TMC(82, 298),
   TMC(83, 299), TMC(83, 300), TMC(84, 301), TMC(84, 302), TMC(85, 21),
   TMC(86, 303), TMC(87, 304), TMC(87, 306), TMC(88, 304), TMC(89, 309),
   TMC(89, 311), TMC(90, 181), TMC(90, 182), TMC(91, 178), TMC(92, 178),
   TMC(93, 178), TMC(94, 305), TMC(95, 264), TMC(96, 264), TMC(97, 304),
   TMC(98, 81), TMC(99, 312), TMC(100, 18), TMC(101, 174)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op dirty_axiom x = x
    val op dirty_axiom =
    DT(((("CacheLib",1),[]),[]),
       [read"%95%31%149%256%172$0@@@%256%196%202$0@@@@|@"])
  fun op eviction_policy_axiom x = x
    val op eviction_policy_axiom =
    DT(((("CacheLib",68),[]),[]),
       [read"%93%28%88%61%91%25%88%29%88%80%149%145%165%124$4@%104$3@$2@@@@%201$0@@@%172%156$2$1@@$0@@@|@|@|@|@|@"])
  fun op invariant_cache_def x = x
    val op invariant_cache_def =
    DT(((("CacheLib",0),[]),[]),
       [read"%135%222@%131%88%43%137%241$0@%225%195%151%150%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%151%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$0@|@@%131%88%29%88%61%94%78%94%39%94%42%85%59%177%2%177%0%177%3%177%1%131%244%158%153%220$4@@@@%226%195%150%218@@@@@%131%245%154%152%220$4@@@@%227%195%150%218@@@@@%131%133$6@%130%195%151%150%150%150%151%218@@@@@@@$5@@@%131%137%241$8@$1@@$8@@%131%137%241$9@$0@@$9@@%131%137%241%252%250$8@$5@@$9@@$3@@%252%250$8@$5@@$9@@@%137%241%250%225$7@@%195%151%218@@@@$2@@%250%225$7@@%195%151%218@@@@@@@@@@|@%251%250%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%130%195%151%150%150%150%151%218@@@@@@@%97$5@$4@@@@%130%195%151%150%150%150%151%218@@@@@@@$4@@@|@%251%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%97$4@$3@@@|@%238%250%251%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$3@@$3@@@|@%251%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$2@@|@|@|@|@|@|@@%131%85%50%85%52%131%138%158%153%220$1@@@@%158%153%220$0@@@@@%139%154%152%220$1@@@@%154%152%220$0@@@@@|@|@@%93%28%88%29%88%61%91%25%88%80%149%145%165%124$4@%104$2@$1@@@@%201$0@@@%172%156$1$3@@$0@@@|@|@|@|@|@@@@@"])
  fun op write_mem32_def x = x
    val op write_mem32_def =
    DT(((("CacheLib",6),[("pair",[16])]),["DISK_THM"]),
       [read"%88%12%92%46%87%69%141%255%111$2@%121$1@$0@@@@%180%46%180%46%180%46%180%46$0|@%213%239$5@%225%195%150%150%218@@@@@@%242%195%150%150%150%150%150%218@@@@@@@%195%151%150%150%151%218@@@@@@$3@@$0@@|@%213%239$4@%225%195%151%218@@@@@%242%195%150%150%150%151%218@@@@@@%195%151%150%150%150%218@@@@@@$2@@$0@@|@%213%239$3@%225%195%150%218@@@@@%242%195%150%150%150%150%218@@@@@@%195%151%150%150%218@@@@@$1@@$0@@|@%213$2@%242%195%150%150%150%218@@@@@%132@$0@@$1@@@|@|@|@"])
  fun op WriteBackLine_simp_def x = x
    val op WriteBackLine_simp_def =
    DT(((("CacheLib",11),[("pair",[16])]),["DISK_THM"]),
       [read"%81%32%88%61%82%45%90%24%83%37%147%217%98$4@%106$3@%99$2@%118$1@$0@@@@@@%182%66%117%212$5@%157%174%214$4@%200%197%173%167@@%202$0$4@@@@@$0@@@$2$5@@@$2@@$3@|@%156$1$4@@@@|@|@|@|@|@"])
  fun op msb_extract_def x = x
    val op msb_extract_def =
    DT(((("CacheLib",41),[]),[]),
       [read"%86%67%88%43%85%59%137%224$2@$1@$0@@%186%207%29%205%61%78%184%41%184%40%250%252%250$3@$1@@$4@@%97$0@%195%151%218@@@@|@%233%158%153%220$4@@@@@|@%234%249%240%154%152%220$3@@@@%227%195%150%218@@@@@@@||@|@@%223%100$2@$1@@$0@@@|@|@|@"])
  fun op lt_mod_thm x = x
    val op lt_mod_thm =
    DT(((("CacheLib",2),
        [("arithmetic",[24,25,27,41,46,59,73,95,178,185,222]),
         ("bool",[25,35,52,53,57,62,95,100,103,104,123]),
         ("numeral",[3,5,8])]),["DISK_THM"]),
       [read"%94%10%94%15%94%20%94%22%149%131%133$3@$2@@%131%134$2@$1@@%133$1@$0@@@@%133%192$3@$0@@%192$2@$0@@@|@|@|@|@"])
  fun op adr_neq3_thm x = x
    val op adr_neq3_thm =
    DT(((("CacheLib",3),
        [("arithmetic",
         [18,19,24,27,28,41,46,71,73,84,95,125,178,181,185,215,220,273,
          317]),("bit",[2,5]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,103,104,123]),
         ("combin",[19]),("fcp",[13,15,38,39,60,61,62,63]),
         ("list",[29,291]),("numeral",[0,3,5,6,7,8,9,12,15,16,17,21,28]),
         ("numeral_bit",[1,2,5,21,22,23,24,25,26,27,28,29]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18,23]),
         ("words",
         [1,2,5,28,32,33,58,90,111,143,159,192,199,200,205,206,237,300,353,
          371,397,398,408,409,411,665,668])]),["DISK_THM"]),
       [read"%88%8%88%13%88%19%94%38%177%18%177%17%149%133$2@%195%151%150%150%150%151%218@@@@@@@@%149%131%137%241$5@$0@@$5@@%131%137%241$4@$1@@$4@@%137%241$3@$1@@$3@@@@%149%256%137%252%250$4@$2@@$5@@%252%250$3@$2@@$5@@@@%256%137$4@$3@@@@@|@%238%250%251%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$1@@$1@@@|@%251%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$0@@|@|@|@|@"])
  fun op adr_neq2_thm x = x
    val op adr_neq2_thm =
    DT(((("CacheLib",4),[]),["cheat"]),
       [read"%88%8%88%13%88%19%94%38%177%18%177%17%149%133$2@%195%151%150%150%150%151%218@@@@@@@@%149%131%137%241$5@$1@@$5@@%131%137%241$4@$0@@$4@@%137%241$3@$0@@$3@@@@%149%256%137$4@$3@@@%256%137%252%250$5@$2@@$4@@%252%250$5@$2@@$3@@@@@@|@%238%250%251%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$1@@$1@@@|@%251%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$0@@|@|@|@|@"])
  fun op adr_neq_thm x = x
    val op adr_neq_thm =
    DT(((("CacheLib",5),
        [("arithmetic",
         [18,19,24,27,41,46,71,73,84,95,125,178,185,215,220,273,317]),
         ("bit",[2,5]),
         ("bool",
         [14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,103,104,123]),
         ("combin",[19]),("fcp",[13,15,38,39,60,61,62,63]),
         ("list",[29,291]),("num",[9]),
         ("numeral",[0,3,5,6,7,8,9,12,15,16,17,21,28]),
         ("numeral_bit",[1,2,5,21,22,23,24,25,26,27,28,29]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18,23]),
         ("words",
         [1,2,5,28,32,33,58,90,111,143,159,192,199,200,205,206,237,300,408,
          409,411,665,668])]),["DISK_THM"]),
       [read"%88%8%88%13%88%19%88%21%94%38%177%18%177%17%149%133$2@%195%151%150%150%150%151%218@@@@@@@@%149%131%137%241$6@$1@@$6@@%137%241$5@$1@@$5@@@%149%131%137%241$4@$0@@$4@@%137%241$3@$0@@$3@@@%149%256%137%250$6@$2@@%250$5@$2@@@@%256%137%252%250$6@$2@@$4@@%252%250$5@$2@@$3@@@@@@@|@%238%250%251%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$1@@$1@@@|@%251%225%195%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$0@@|@|@|@|@|@"])
  fun op write_read_thm x = x
    val op write_read_thm =
    DT(((("CacheLib",7),
        [("CacheLib",[6]),("arithmetic",[19,63,125,134,215,220,222]),
         ("bitstring",[19]),
         ("bool",
         [8,14,25,26,27,29,31,35,47,50,51,52,53,55,57,62,63,70,91,98,104,
          123,128,146]),("cache",[319]),("combin",[7,8,19]),
         ("fcp",[13,15,19,38,39,60,61,62,63]),("list",[48,280,282,298]),
         ("numeral",[0,3,5,6,7,8,12,15,16,17,21,24,28]),
         ("numeral_bit",[5]),("pred_set",[18,88]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18]),
         ("words",
         [5,33,49,51,58,69,90,101,102,114,143,144,156,228,300,321,322,324,
          326,328,339,340,353,377,384,621,641,649,661,665,
          668])]),["DISK_THM"]),
       [read"%88%8%87%64%92%34%179%36%142%228%105$3@$0@@@%235$2@@|@%255%111$2@%121$0@$1@@@@|@|@|@"])
  fun op write_read_unch_thm x = x
    val op write_read_unch_thm =
    DT(((("CacheLib",8),
        [("CacheLib",[6]),("arithmetic",[19,215,220,273]),
         ("blast",[0,1,3,4,9,11]),
         ("bool",
         [8,14,25,26,27,29,50,51,52,53,55,57,62,63,70,91,98,104,123,128,
          146]),("cache",[319]),("combin",[7,8,19]),("fcp",[13,15]),
         ("list",[29,291]),
         ("numeral",[0,3,4,5,6,7,8,9,15,16,17,21,28,32,34,35,39,40]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18,19,20]),
         ("words",
         [5,58,69,143,156,160,300,321,322,324,326,328,340,353,377,384,480,
          481,482,498,665,668])]),["DISK_THM"]),
       [read"%88%8%88%11%87%64%92%34%92%36%149%219%131%248%239$3@%225%195%150%150%218@@@@@@$4@@%131%247%239$3@%225%195%150%150%218@@@@@@%225%195%150%150%218@@@@@@%247%239$4@%225%195%150%150%218@@@@@@%225%195%150%150%218@@@@@@@@%131%246$3@%239$4@%225%195%150%150%218@@@@@@@%131%247%239$3@%225%195%150%150%218@@@@@@%225%195%150%150%218@@@@@@%247%239$4@%225%195%150%150%218@@@@@@%225%195%150%150%218@@@@@@@@@%149%141$0@%255%111$4@%121$1@$2@@@@@%142%228%105$3@$0@@@%228%105$3@$1@@@@@|@|@|@|@|@"])
  fun op wrtBck_dirty_thm x = x
    val op wrtBck_dirty_thm =
    DT(((("CacheLib",9),
        [("arithmetic",[19,22,26,27,46,63,71,73,95,125,178,181,185]),
         ("arm_step",[30]),("bit",[2]),
         ("bool",[14,25,27,31,35,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[183,236,325,332]),("combin",[7,12,19]),
         ("fcp",[60,61,62,63]),("numeral",[0,3,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[16]),
         ("pair",[8,9,16]),("rich_list",[345]),
         ("words",[1,111,143,203,206,409,665,668])]),["DISK_THM"]),
       [read"%88%29%88%61%92%46%91%25%94%38%85%59%187%208%26%47%149%134$3@%221%231@@@%94%78%149%134$0@$4@@%256%190%107$8@%104$7@$2@@@@@|@@||@@%216%108$5@%113$4@%123$3@%119$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op wrtBck_memory_thm x = x
    val op wrtBck_memory_thm =
    DT(((("CacheLib",10),
        [("CacheLib",[0,2,4]),
         ("arithmetic",
         [19,22,24,25,26,27,41,46,59,62,63,71,73,75,77,78,84,95,99,125,130,
          177,178,181,182,185,188,204,205,215,220,222,273]),
         ("arm_step",[30]),("bit",[2]),("bitstring",[71]),
         ("blast",[0,1,3,4,9]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,70,91,95,98,
          100,103,104,123,128,146]),("cache",[183,236,319,325,332,338]),
         ("combin",[7,8,11,12,15,16,19,33,35]),
         ("fcp",[13,15,19,38,39,60,61,62,63]),("list",[23,28,29,291]),
         ("marker",[6,9]),("num",[9]),
         ("numeral",
         [0,3,4,5,6,7,8,9,12,15,16,17,18,21,24,28,32,33,34,35,39,40]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[16]),
         ("pair",[4,8,9,45,46]),("pred_set",[18,88]),
         ("rich_list",[18,19,58,282,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18]),
         ("words",
         [1,5,33,49,51,58,69,90,101,102,111,114,140,143,144,150,156,192,
          200,203,205,206,228,247,300,321,322,324,326,328,339,340,353,377,
          384,394,407,409,426,456,608,621,641,644,649,661,665,
          668])]),["DISK_THM", "cheat"]),
       [read"%88%29%88%61%92%46%91%25%85%59%94%38%187%208%26%47%183%57%183%33%149%134$4@%221%231@@@%94%78%149%134$0@$5@@%177%43%149%222@%149%190%107$11@%104$10@$8@@@@%136%164%109$11@%114$10@%126$1@$5@@@@@%232%228%105$0@$4@@@@@@|@%252%250$9@%97%97$2@$1@@%195%151%218@@@@@%252%250$10@%97$1@%195%151%218@@@@@%250%225$0@@%195%151%218@@@@@@@|@@|@%233%158%153%220$4@@@@@|@%234%249%240%154%152%220$3@@@@%227%195%150%218@@@@@@@||@@%216%108$5@%113$4@%123$3@%119$2@$0@@@@@$1@@|@|@|@|@|@|@"])
  fun op wrtBckLine_dcEQpm'_thm x = x
    val op wrtBckLine_dcEQpm'_thm =
    DT(((("CacheLib",12),
        [("CacheLib",[10,11]),
         ("arithmetic",
         [19,22,25,26,27,46,63,71,73,95,125,178,181,182,185]),
         ("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),("cache",[183,236,325,338]),
         ("combin",[7,8,11,12,15,16,19,33,35]),("fcp",[60,61,62,63]),
         ("list",[23,28]),("marker",[6,9]),("num",[9]),
         ("numeral",[0,3,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[10,16]),
         ("pair",[4,7,8,9,16,45,46]),("rich_list",[18,19,58,288,345]),
         ("words",[1,111,203,206])]),["DISK_THM", "cheat"]),
       [read"%88%29%88%61%92%46%91%25%94%38%85%59%187%208%26%47%183%57%183%33%149%134$5@%221%231@@@%94%78%149%134$0@$6@@%177%43%149%222@%149%190%107$11@%104$10@$8@@@@%136%164%109$11@%114$10@%126$1@$8@@@@@%232%228%105$0@$4@@@@@@|@%252%250$9@%97%97$2@$1@@%195%151%218@@@@@%252%250$10@%97$1@%195%151%218@@@@@%250%225$0@@%195%151%218@@@@@@@|@@|@%233%158%153%220$3@@@@@|@%234%249%240%154%152%220$2@@@@%227%195%150%218@@@@@@@||@@%216%108$5@%113$4@%123$3@%119$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op wrtBckLine_pmEQpm'IfNotDirty_thm x = x
    val op wrtBckLine_pmEQpm'IfNotDirty_thm =
    DT(((("CacheLib",13),
        [("CacheLib",[11]),("arithmetic",[26,27]),
         ("bool",[8,25,26,27,31,52,53,55,57,104,123,128,146]),
         ("cache",[325,332]),("combin",[7,8,11,15,16,19,33,35]),
         ("marker",[6,9]),("pair",[4,7,8,9,16,45,46]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%88%29%88%61%92%46%91%25%94%38%85%59%187%208%4%47%149%256%190%107$7@%104$6@$4@@@@@%88%44%136%232%228%105$0@$6@@@@%232%228%105$0@$1@@@@|@@||@@%216%108$5@%113$4@%123$3@%119$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op cellFill_memeq_thm x = x
    val op cellFill_memeq_thm =
    DT(((("CacheLib",14),
        [("bool",[25,31,35,55,57,104,128,146]),("cache",[329]),
         ("combin",[7,19]),("words",[144])]),["DISK_THM"]),
       [read"%94%78%88%43%92%46%176%60%136$0@%232%228%105%252$2@%250%225$3@@%195%151%218@@@@@$1@@@@|@%163%127$2@%105$1@$0@@@%225$2@@@|@|@|@"])
  fun op linefill_memeq_t x = x
    val op linefill_memeq_t =
    DT(((("CacheLib",15),
        [("arithmetic",
         [19,22,24,25,26,27,41,46,59,62,63,71,73,81,93,95,99,125,177,178,
          181,182,185,222]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),("cache",[183,186,189,329,330]),
         ("combin",[7,8,11,12,15,16,19,33,35]),("fcp",[60,61,62,63]),
         ("list",[20,23,28,48,56,105]),("marker",[6,9]),("num",[9]),
         ("numeral",[0,3,5,6,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[16]),
         ("pair",[4,8,9,45,46]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,144,192,200,203,206,407,668])]),["DISK_THM"]),
       [read"%93%28%88%29%88%61%92%46%91%25%94%38%85%59%189%211%54%7%183%57%183%33%149%134$5@%221%231@@@%94%78%149%134$0@$6@@%177%43%136%198%202$5$10@@@%225$1@@@%232%228%105$0@$9@@@@|@%252%250$9@%97%97$2@$1@@%195%151%218@@@@@%252%250$10@%97$1@%195%151%218@@@@@%250%225$0@@%195%151%218@@@@@@@|@@|@%233%158%153%220$3@@@@@|@%234%249%240%154%152%220$2@@@@%227%195%150%218@@@@@@@||@@%191%125$6@%108$5@%113$4@%123$3@%119$2@$1@@@@@@$0@@|@|@|@|@|@|@|@"])
  fun op wIdx_extract_thm x = x
    val op wIdx_extract_thm =
    DT(((("CacheLib",16),
        [("arithmetic",[273]),("bitstring",[20,39,53,71,101,102]),
         ("bool",[14,25,26,31,35,50,52,53,55,57,62,63,104,123]),
         ("cache",[322]),("combin",[19]),("fcp",[13,15]),("list",[29,291]),
         ("numeral",[3,7,15,16,17]),("rich_list",[18,282,345]),
         ("words",[228,665])]),["DISK_THM"]),
       [read"%88%43%85%59%177%77%137$0@%243%97%233%158%153%220$1@@@@@%195%150%218@@@@%195%151%218@@@$2@@|@%237$1@$0@@|@|@"])
  fun op wi_lt_line_size_thm x = x
    val op wi_lt_line_size_thm =
    DT(((("CacheLib",17),
        [("CacheLib",[16]),
         ("arithmetic",[24,25,27,41,46,62,73,95,132,178,181,182,185,202]),
         ("bool",[8,25,31,35,51,53,55,57,62,95,100,103,104]),
         ("cache",[323]),("combin",[19]),("numeral",[3,5,8]),("pair",[16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),("words",[268])]),["DISK_THM"]),
       [read"%86%67%88%43%85%59%185%206%29%204%61%78%183%40%134$1@%130%166%195%151%218@@@$0@@%195%150%218@@@@|@%233%158%153%220$3@@@@@||@|@@%223%100$2@$1@@$0@@|@|@|@"])
  fun op wIdx_lt_dimword48_thm x = x
    val op wIdx_lt_dimword48_thm =
    DT(((("CacheLib",18),
        [("CacheLib",[16]),
         ("arithmetic",
         [18,24,25,27,41,46,59,73,95,132,177,178,181,182,185,186,252,254,
          274,282]),
         ("bool",[8,25,31,35,42,51,52,53,55,57,62,95,100,103,104,123]),
         ("cache",[323]),("combin",[19]),("numeral",[0,3,5,7,8,9,32,33]),
         ("pair",[16]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[150,268,608])]),["DISK_THM"]),
       [read"%86%67%88%43%85%59%185%206%29%204%61%78%143$0@%192$0@%195%151%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%150%218@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@||@|@@%223%100$2@$1@@$0@@|@|@|@"])
  fun op si_extract_thm x = x
    val op si_extract_thm =
    DT(((("CacheLib",19),
        [("arithmetic",[19,26,215,273]),
         ("bitstring",[20,39,53,71,101,102]),("blast",[9]),
         ("bool",[14,25,26,27,31,35,50,51,52,53,55,57,62,63,104,123]),
         ("cache",[320]),("combin",[8,11,15,16,19,33,35]),("fcp",[13,15]),
         ("list",[29,291]),("marker",[6]),
         ("numeral",[3,6,7,15,16,17,21,28]),("pred_set",[18,88]),
         ("rich_list",[18,282,345]),
         ("words",[5,58,228,300,665])]),["DISK_THM"]),
       [read"%86%67%88%43%85%59%177%53%183%15%183%51%137$2@%243%97$0@$1@@%97$1@%195%150%218@@@@$4@@|@%234%249%240%154%152%220$2@@@@%227%195%150%218@@@@@@@|@%97%233%158%153%220$1@@@@@%195%150%218@@@@|@%229%100$2@$1@@$0@@|@|@|@"])
  fun op word_log2_lt_adrSize x = x
    val op word_log2_lt_adrSize =
    DT(((("CacheLib",20),
        [("arithmetic",[19,41,46,59,71,73,95,125,178,185,222]),("bit",[2]),
         ("bool",[14,25,35,53,57,62,63,95,100,103,104]),
         ("fcp",[60,61,62,63]),("numeral",[0,3,4,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),
         ("words",[1,67,111,140,313])]),["DISK_THM"]),
       [read"%89%65%149%256%139$0@%227%132@@@@%133%234%249$0@@@%195%151%150%150%150%151%218@@@@@@@@|@"])
  fun op tag_extract_thm x = x
    val op tag_extract_thm =
    DT(((("CacheLib",21),
        [("arithmetic",[19,27,215,273]),
         ("bitstring",[20,39,53,71,101,102]),("blast",[9]),
         ("bool",[14,25,26,27,35,50,51,52,53,55,57,62,63,104,123]),
         ("cache",[321]),("combin",[8,11,15,16,19,33,35]),("fcp",[13,15]),
         ("list",[29,291]),("marker",[6]),
         ("numeral",[3,6,7,15,16,17,21,28]),("pred_set",[18,88]),
         ("rich_list",[18,282,345]),
         ("words",[5,58,228,300,665])]),["DISK_THM"]),
       [read"%86%67%88%43%85%59%177%63%183%49%183%16%183%58%137$3@%243%130$2@%195%150%218@@@@%97%97$1@$0@@%195%150%218@@@@$5@@|@%234%249%240%154%152%220$3@@@@%227%195%150%218@@@@@@@|@%97%233%158%153%220$2@@@@@%195%150%218@@@@|@%175%236$2@@@|@%230%100$2@$1@@$0@@|@|@|@"])
  fun op lineSpec_thm x = x
    val op lineSpec_thm =
    DT(((("CacheLib",22),
        [("CacheLib",[0,16,19,21]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,93,95,125,132,148,177,178,181,182,
          185,204,215,222,273,274,280,300,309,317]),
         ("bit",[0,2,5,7,21,42,55,123]),("bitstring",[53]),
         ("blast",[0,1,3,4,9]),
         ("bool",
         [14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,
          104,123,128,146]),("cache",[323]),("combin",[8,19]),
         ("fcp",[13,15,60,61,62,63]),("list",[29,291]),("marker",[6]),
         ("numeral",[0,3,4,5,6,7,8,12,15,16,17,21,24,28]),
         ("numeral_bit",[5,21,22,23,24,25,26,27,28,29,32,33]),
         ("pair",[7,8,9,16]),("pred_set",[18,88]),("prim_rec",[4]),
         ("rich_list",[18,282,345]),("sat",[1,3,5,6,7,11,12,13,15,17,18]),
         ("words",
         [1,5,32,33,47,49,51,58,67,90,111,114,140,141,144,150,152,164,165,
          203,205,206,228,300,313,435,455,542,605,608,
          665])]),["DISK_THM"]),
       [read"%86%67%88%43%85%59%185%206%29%204%61%78%183%41%183%40%149%222@%137$6@%252%252%250$3@%97%97$1@$0@@%195%151%218@@@@@%250$4@%97$0@%195%151%218@@@@@@%250%225$2@@%195%151%218@@@@@@|@%233%158%153%220$4@@@@@|@%234%249%240%154%152%220$3@@@@%227%195%150%218@@@@@@@||@|@@%223%100$2@$1@@$0@@|@|@|@"])
  fun op fill_dcEQpm_thm x = x
    val op fill_dcEQpm_thm =
    DT(((("CacheLib",23),
        [("CacheLib",[0,15,22]),("arithmetic",[19,26,27,71,125,203]),
         ("bit",[2]),
         ("bool",[8,14,25,26,27,31,52,55,57,62,63,104,123,128,146,168]),
         ("cache",[236,237,239,242,337,338]),("combin",[7,12,19,21]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7]),
         ("pair",[7,8,9,16]),("words",[1,111,203,205,206])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%85%59%187%208%26%47%185%206%29%204%61%78%149%134%130%166%195%151%218@@@%233%158%153%220$5@@@@@@%195%150%218@@@@%221%231@@@%149%222@%149%134$0@%130%166%195%151%218@@@%233%158%153%220$5@@@@@@%195%150%218@@@@@%136%164%109$2@%114$1@%126$0@$4@@@@@%232%228%105$8@$3@@@@@@@||@|@@%223%100$6@$5@@$2@@||@@%170%102$4@%112$3@%122$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op shift_add_thm x = x
    val op shift_add_thm =
    DT(((("CacheLib",24),
        [("arithmetic",[26]),("bool",[25,35,55,57]),
         ("words",[206,394,426])]),["DISK_THM"]),
       [read"%88%75%88%76%94%38%94%35%137%252%250$3@%97$1@$0@@@%250$2@$0@@@%250%252%250$3@$1@@$2@@$0@@|@|@|@|@"])
  fun op writeback_mem_eq_thm x = x
    val op writeback_mem_eq_thm =
    DT(((("CacheLib",25),
        [("CacheLib",[0,5,22]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,73,95,177,178,182,185,204,215,220,273,
          274]),("bitstring",[71]),("blast",[0,1,3,4,9]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,
          104,123,128,146]),("cache",[319,324]),("combin",[7,19]),
         ("fcp",[13,15]),("list",[29,291]),("marker",[6]),
         ("numeral",[0,3,5,6,7,8,15,16,17,21,28]),("pair",[7,16]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18,23]),
         ("words",
         [5,32,58,69,143,203,205,206,228,300,321,322,324,326,340,353,384,
          394,426,665,668])]),["DISK_THM"]),
       [read"%88%43%86%67%92%46%84%56%85%59%88%30%88%62%94%79%185%206%29%204%61%78%179%47%183%41%183%40%149%256%137%250%252%250$7@$1@@$8@@%97$0@%195%151%218@@@@@%250%252%250$4@$1@@$5@@%97$0@%195%151%218@@@@@@@%149%222@%136%232%228%105$13@$11@@@@%232%228%105$13@$2@@@@@@|@%233%158%153%220$8@@@@@|@%234%249%240%154%152%220$7@@@@%227%195%150%218@@@@@@@|@%215%110$5@%115$4@%128$3@%120$8@$7@@@@@$6@@||@|@@%223%100$6@$7@@$3@@|@|@|@|@|@|@|@|@"])
  fun op lineSpec_eq_thm x = x
    val op lineSpec_eq_thm =
    DT(((("CacheLib",26),
        [("CacheLib",[0]),("arithmetic",[26,27]),("bitstring",[53]),
         ("bool",[14,25,31,50,53,55,57,63]),("cache",[320,321,322,323]),
         ("combin",[19]),("numeral",[3,5,7,15,16]),("pair",[4]),
         ("words",[149,205,206,665])]),["DISK_THM"]),
       [read"%85%50%85%52%88%43%86%67%149%222@%146%223%100$0@$1@@$3@@%223%100$0@$1@@$2@@@|@|@|@|@"])
  fun op writebackline_mem_eq_thm x = x
    val op writebackline_mem_eq_thm =
    DT(((("CacheLib",27),
        [("CacheLib",[0,25,26]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185]),
         ("arm_step",[30]),("bit",[2]),
         ("bool",
         [2,8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,98,99,100,
          103,104,123,128,146]),("cache",[324,325]),
         ("combin",[1,3,5,7,19,20]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),("numeral",[0,3,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",[1,111,192,200,203,205,206,394,407,426])]),["DISK_THM"]),
       [read"%88%30%88%62%92%46%91%25%94%38%86%67%88%43%85%59%185%206%29%204%61%78%187%208%26%47%183%41%183%40%149%256%137%250%252%250$13@$1@@$14@@%97$0@%195%151%218@@@@@%250%252%250$5@$1@@$6@@%97$0@%195%151%218@@@@@@@%149%134$10@%221%231@@@%149%222@%136%232%228%105$8@$12@@@@%232%228%105$8@$2@@@@@@@|@%233%158%153%220$6@@@@@|@%234%249%240%154%152%220$5@@@@%227%195%150%218@@@@@@@||@@%216%108$10@%113$9@%123$8@%119$7@$6@@@@@$3@@||@|@@%223%100$2@$1@@$0@@|@|@|@|@|@|@|@|@"])
  fun op fill_pm'EQpm_diffIn_thm x = x
    val op fill_pm'EQpm_diffIn_thm =
    DT(((("CacheLib",28),
        [("CacheLib",[0,27]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,204,
          254,274,282]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,
          104,123]),("cache",[331,337]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10]),
         ("pair",[7,8,9,16]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",
         [1,111,150,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%187%208%26%47%149%222@%149%256%171%101$4@%104$3@$5@@@$2@@@%136%232%228%105$3@$0@@@@%232%228%105$3@$6@@@@@@||@@%170%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_dcEQpm'_thm x = x
    val op CacheClean_dcEQpm'_thm =
    DT(((("CacheLib",29),
        [("CacheLib",[0,12,17,22]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,204,
          254,274,282]),("bit",[2]),
         ("bool",
         [8,14,25,31,35,42,50,51,52,53,54,55,57,62,63,92,95,99,100,103,104,
          123,128,146]),("cache",[336]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [1,111,150,203,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%30%204%62%79%185%206%29%204%61%78%183%41%183%40%149%171%101$16@%104$15@$13@@@$10@@%149%222@%149%190%107$7@%104$6@$13@@@@%149%137%250%252%250$6@$1@@$7@@%97$0@%195%151%218@@@@@%250%252%250$3@$1@@$4@@%97$0@%195%151%218@@@@@@%136%164%109$7@%114$6@%126$5@$13@@@@@%232%228%105$11@$8@@@@@@@@|@%233%158%153%220$9@@@@@|@%234%249%240%154%152%220$8@@@@%227%195%150%218@@@@@@@||@|@@%223%100$11@$10@@$5@@||@|@@%223%100$4@$3@@$2@@||@@%159%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_dcEQdc'_thm x = x
    val op CacheClean_dcEQdc'_thm =
    DT(((("CacheLib",30),
        [("CacheLib",[0,11,17]),
         ("arithmetic",
         [19,22,24,25,26,27,41,46,59,63,71,73,95,125,177,178,181,182,185,
          203,204,254,274,282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,54,55,57,62,63,92,95,99,
          100,103,104,123,128,146]),("cache",[183,236,325,336,338]),
         ("combin",[7,8,11,12,15,16,19,33,35]),("fcp",[60,61,62,63]),
         ("list",[23,28]),("marker",[6,9]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[10,16]),
         ("pair",[4,7,8,9,16,45,46]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [1,111,150,203,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%30%204%62%79%185%206%29%204%61%78%183%41%183%40%149%222@%149%137%250%252%250$6@$1@@$7@@%97$0@%195%151%218@@@@@%250%252%250$3@$1@@$4@@%97$0@%195%151%218@@@@@@%136%164%109$7@%114$6@%126$5@$13@@@@@%164%109$7@%114$6@%126$5@$9@@@@@@@|@%233%158%153%220$9@@@@@|@%234%249%240%154%152%220$8@@@@%227%195%150%218@@@@@@@||@|@@%223%100$11@$10@@$5@@||@|@@%223%100$4@$3@@$2@@||@@%159%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_dcEQdc'_diffMsb_thm x = x
    val op CacheClean_dcEQdc'_diffMsb_thm =
    DT(((("CacheLib",31),
        [("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,
          123,128,146]),("cache",[236,325,331,336,338]),
         ("combin",[7,12,19]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,203,206,394,426,608])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%30%204%62%79%185%206%29%204%61%78%183%41%183%40%149%222@%149%256%137%250%252%250$6@$1@@$7@@%97$0@%195%151%218@@@@@%250%252%250$3@$1@@$4@@%97$0@%195%151%218@@@@@@@%136%164%109$7@%114$6@%126$5@$13@@@@@%164%109$7@%114$6@%126$5@$9@@@@@@@|@%233%158%153%220$9@@@@@|@%234%249%240%154%152%220$8@@@@%227%195%150%218@@@@@@@||@|@@%223%100$11@$10@@$5@@||@|@@%223%100$4@$3@@$2@@||@@%159%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_hitDc'_diffAddr_thm x = x
    val op CacheClean_hitDc'_diffAddr_thm =
    DT(((("CacheLib",32),
        [("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,
          123,128,146]),("cache",[236,325,331,336]),("combin",[7,12,19]),
         ("fcp",[60,61,62,63]),("list",[23,28]),("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,203,206,394,426,608])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%183%41%183%40%187%208%26%47%149%256%137%250%252%250$5@$3@@$6@@%97$2@%195%151%218@@@@@%250%252%250$8@$3@@$9@@%97$2@%195%151%218@@@@@@@%149%171%101$16@%104$15@$13@@@$10@@%149%171%101$12@%104$11@$13@@@$10@@%171%101$12@%104$11@$1@@@$10@@@@||@@%159%102$14@%112$13@%122$12@$11@@@@$8@@|@%233%158%153%220$7@@@@@|@%234%249%240%154%152%220$6@@@@%227%195%150%218@@@@@@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_keepMiss_diffMsb_thm x = x
    val op CacheClean_keepMiss_diffMsb_thm =
    DT(((("CacheLib",33),
        [("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,
          123,128,146]),("cache",[236,325,331,336]),("combin",[7,12,19]),
         ("fcp",[60,61,62,63]),("list",[23,28]),("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[14,22]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,203,206,394,426,608])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%183%41%183%40%187%208%26%47%149%256%137%250%252%250$5@$3@@$6@@%97$2@%195%151%218@@@@@%250%252%250$8@$3@@$9@@%97$2@%195%151%218@@@@@@@%149%171%101$16@%104$15@$13@@@$10@@%149%256%171%101$12@%104$11@$13@@@$10@@@%256%171%101$12@%104$11@$1@@@$10@@@@@||@@%159%102$14@%112$13@%122$12@$11@@@@$8@@|@%233%158%153%220$7@@@@@|@%234%249%240%154%152%220$6@@@@%227%195%150%218@@@@@@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_pmEqpm'_diffMsb_thm x = x
    val op CacheClean_pmEqpm'_diffMsb_thm =
    DT(((("CacheLib",34),
        [("CacheLib",[27]),
         ("arithmetic",
         [19,26,27,41,46,59,71,73,95,125,178,181,185,203,254,282]),
         ("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128]),("cache",[331,336]),("combin",[19]),("fcp",[60,61,62,63]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,206,394,426,608])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%183%41%183%40%187%208%26%47%149%256%137%250%252%250$5@$3@@$6@@%97$2@%195%151%218@@@@@%250%252%250$8@$3@@$9@@%97$2@%195%151%218@@@@@@@%149%222@%136%232%228%105$11@$14@@@@%232%228%105$11@$0@@@@@@||@@%159%102$14@%112$13@%122$12@$11@@@@$8@@|@%233%158%153%220$7@@@@@|@%234%249%240%154%152%220$6@@@@%227%195%150%218@@@@@@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_dcEQpm'_thm x = x
    val op CacheInvalidate_dcEQpm'_thm =
    DT(((("CacheLib",35),
        [("CacheLib",[0,12,17,22]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,204,
          254,274,282]),("bit",[2]),
         ("bool",
         [8,14,25,31,35,42,50,51,52,53,54,55,57,62,63,92,95,99,100,103,104,
          123,128,146]),("cache",[335]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [1,111,150,203,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%183%41%183%40%149%171%101$16@%104$15@$13@@@$10@@%149%222@%149%190%107$4@%104$3@$13@@@@%149%137%250%252%250$3@$1@@$4@@%97$0@%195%151%218@@@@@%250%252%250$6@$1@@$7@@%97$0@%195%151%218@@@@@@%136%164%109$4@%114$3@%126$2@$13@@@@@%232%228%105$11@$8@@@@@@@@|@%233%158%153%220$9@@@@@|@%234%249%240%154%152%220$8@@@@%227%195%150%218@@@@@@@||@|@@%223%100$7@$6@@$5@@||@|@@%223%100$8@$7@@$2@@||@@%160%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_missDc'_thm x = x
    val op CacheInvalidate_missDc'_thm =
    DT(((("CacheLib",36),
        [("bool",[25,26,27,31,52,55,57,62,104,123,128,146]),
         ("cache",[236,242,328,331,335]),("combin",[7,12,19]),
         ("option",[22]),("pair",[7,8,16])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%85%59%187%208%26%47%149%171%101$6@%104$5@$3@@@$2@@%256%171%101$6@%104$5@$1@@@$2@@@||@@%160%102$4@%112$3@%122$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op CacheInvalidate_hitDc'_diffAddr_thm x = x
    val op CacheInvalidate_hitDc'_diffAddr_thm =
    DT(((("CacheLib",37),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[236,242,325,328,331,335]),("combin",[7,12,19]),
         ("list",[23,28]),("marker",[6]),("num",[9]),
         ("numeral",[3,5,7,8,16]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),("state_transformer",[9]),
         ("words",[203,206,394,426])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%183%41%183%40%187%208%26%47%149%256%137%250%252%250$5@$3@@$6@@%97$2@%195%151%218@@@@@%250%252%250$8@$3@@$9@@%97$2@%195%151%218@@@@@@@%149%171%101$16@%104$15@$13@@@$10@@%149%171%101$12@%104$11@$13@@@$10@@%171%101$12@%104$11@$1@@@$10@@@@||@@%160%102$14@%112$13@%122$12@$11@@@@$8@@|@%233%158%153%220$7@@@@@|@%234%249%240%154%152%220$6@@@@%227%195%150%218@@@@@@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_dcEQdc'_diffAddr_thm x = x
    val op CacheInvalidate_dcEQdc'_diffAddr_thm =
    DT(((("CacheLib",38),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[236,242,325,328,331,335,338]),("combin",[7,12,19]),
         ("list",[23,28]),("marker",[6]),("num",[9]),
         ("numeral",[3,5,7,8,16]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),("state_transformer",[9]),
         ("words",[203,206,394,426])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%183%41%183%40%187%208%26%47%149%256%137%250%252%250$5@$3@@$6@@%97$2@%195%151%218@@@@@%250%252%250$8@$3@@$9@@%97$2@%195%151%218@@@@@@@%149%171%101$16@%104$15@$13@@@$10@@%149%171%101$12@%104$11@$13@@@$10@@%136%164%109$6@%114$5@%126$4@$13@@@@@%164%109$6@%114$5@%126$4@$1@@@@@@@@||@@%160%102$14@%112$13@%122$12@$11@@@@$8@@|@%233%158%153%220$7@@@@@|@%234%249%240%154%152%220$6@@@@%227%195%150%218@@@@@@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_keepMiss_diffMsb_thm x = x
    val op CacheInvalidate_keepMiss_diffMsb_thm =
    DT(((("CacheLib",39),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[236,242,325,328,331,335]),("combin",[7,12,19]),
         ("list",[23,28]),("marker",[6]),("num",[9]),
         ("numeral",[3,5,7,8,16]),("option",[22,28]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),("state_transformer",[9]),
         ("words",[203,206,394,426])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%183%41%183%40%187%208%26%47%149%256%137%250%252%250$5@$3@@$6@@%97$2@%195%151%218@@@@@%250%252%250$8@$3@@$9@@%97$2@%195%151%218@@@@@@@%149%171%101$16@%104$15@$13@@@$10@@%149%256%171%101$12@%104$11@$13@@@$10@@@%256%171%101$12@%104$11@$1@@@$10@@@@@||@@%160%102$14@%112$13@%122$12@$11@@@@$8@@|@%233%158%153%220$7@@@@@|@%234%249%240%154%152%220$6@@@@%227%195%150%218@@@@@@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_pmEqpm'_diffMsb_thm x = x
    val op CacheInvalidate_pmEqpm'_diffMsb_thm =
    DT(((("CacheLib",40),
        [("CacheLib",[27]),
         ("arithmetic",
         [19,26,27,41,46,59,71,73,95,125,178,181,185,203,254,282]),
         ("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),("cache",[242,328,331,335]),("combin",[7,19]),
         ("fcp",[60,61,62,63]),("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,206,394,426,608])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%183%41%183%40%187%208%26%47%149%256%137%250%252%250$5@$3@@$6@@%97$2@%195%151%218@@@@@%250%252%250$8@$3@@$9@@%97$2@%195%151%218@@@@@@@%149%222@%136%232%228%105$11@$14@@@@%232%228%105$11@$0@@@@@@||@@%160%102$14@%112$13@%122$12@$11@@@@$8@@|@%233%158%153%220$7@@@@@|@%234%249%240%154%152%220$6@@@@%227%195%150%218@@@@@@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op msbEqAdrs_Hit_dc_thm x = x
    val op msbEqAdrs_Hit_dc_thm =
    DT(((("CacheLib",42),
        [("CacheLib",[0,41]),
         ("arithmetic",
         [24,25,26,27,41,46,59,73,95,177,178,182,185,204,274]),
         ("bool",
         [8,25,31,35,42,50,51,52,53,55,57,62,92,95,100,103,104,123]),
         ("cache",[331]),("combin",[19]),("marker",[6]),
         ("numeral",[0,3,5,8]),("pair",[7,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[205,206,394,426])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%91%25%86%68%88%44%85%59%149%222@%149%171%101$5@%104$4@$3@@@$0@@%149%137%224$5@$4@$0@@%224$2@$1@$0@@@%171%101$2@%104$1@$3@@@$0@@@@|@|@|@|@|@|@"])
  fun op cacheRead_miss_thm x = x
    val op cacheRead_miss_thm =
    DT(((("CacheLib",43),
        [("CacheLib",[0,17,23,28]),
         ("arithmetic",
         [19,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,254,
          274,282]),("bit",[2]),("bitstring",[71]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,
          104,123]),("cache",[338,339]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,205,206,608])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%92%46%91%25%85%59%188%209%26%210%47%71%185%206%29%204%61%78%176%74%149%222@%149%256%171%101$11@%104$10@$8@@@$7@@@%136$0@%232$4@@@@|@%232%228%105$9@$8@@@@||@|@@%223%100$7@$6@@$3@@||@|@@%161%102$4@%112$3@%122$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op cacheRead_hit_thm x = x
    val op cacheRead_hit_thm =
    DT(((("CacheLib",44),
        [("bitstring",[71]),
         ("bool",[25,26,27,29,31,52,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,327,338,339]),("combin",[7,19]),("option",[14]),
         ("pair",[7,8,9,16])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%85%59%188%209%26%210%47%71%185%206%29%204%61%78%176%72%149%171%101$11@%104$10@$8@@@$7@@%136$0@%232$4@@@|@%164%109$2@%114$1@%126$0@$7@@@@@||@|@@%223%100$7@$6@@$3@@||@|@@%161%102$4@%112$3@%122$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op cacheWrite_setCell_thm x = x
    val op cacheWrite_setCell_thm =
    DT(((("CacheLib",45),
        [("bool",[25,26,27,29,31,55,57,62,63,104,128,146]),
         ("cache",[183,186,189,236,242,327,340]),("combin",[7,12,19]),
         ("option",[14,16]),("pair",[7,8,9,16]),
         ("words",[144])]),["DISK_THM"]),
       [read"%86%67%88%43%96%23%92%46%91%25%85%59%187%208%26%47%185%206%29%204%61%78%131%135%196%202%156$4$2@@$1@@@@%253$8@@@%136%198%202%156$4$2@@$1@@@%225$0@@@%254$8@@@||@|@@%223%100$7@$6@@$2@@||@@%162%103$5@%116$4@%129$3@%122$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op linefill_hit_t x = x
    val op linefill_hit_t =
    DT(((("CacheLib",46),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,185]),
         ("arm_step",[30]),
         ("bool",[14,25,27,31,35,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[186,189,330]),("combin",[7,8,11,15,16,19,33,35]),
         ("list",[28]),("marker",[6,9]),("num",[9]),("numeral",[3,7,8,16]),
         ("option",[14]),("pair",[4,8,9,45,46]),("rich_list",[18,19,345]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%93%28%88%29%88%61%92%46%91%25%85%59%94%38%189%211%54%7%183%57%183%33%94%78%177%43%172$5$10@@|@%252%250$9@%97%97$2@$1@@%195%151%218@@@@@%252%250$10@%97$1@%195%151%218@@@@@%250%225$0@@%195%151%218@@@@@@|@|@%233%158%153%220$4@@@@@|@%234%249%240%154%152%220$3@@@@%227%195%150%218@@@@@@@||@@%191%125$6@%108$5@%113$4@%123$3@%119$2@$0@@@@@@$1@@|@|@|@|@|@|@|@"])
  fun op fill_hit_thm x = x
    val op fill_hit_thm =
    DT(((("CacheLib",47),
        [("CacheLib",[46]),
         ("bool",[8,25,26,27,31,35,55,57,104,128,146,168]),
         ("cache",[236,237,239,242,331,337]),("combin",[7,12,19,21]),
         ("marker",[6]),("option",[6,7]),("pair",[7,8,16]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%85%59%187%208%26%47%185%206%29%204%61%78%171%101$9@%104$8@$4@@@$5@||@|@@%223%100$6@$5@@$2@@||@@%170%102$4@%112$3@%122$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op cacheRead_paHitdc'_thm x = x
    val op cacheRead_paHitdc'_thm =
    DT(((("CacheLib",48),
        [("CacheLib",[47]),
         ("bool",[8,25,26,27,29,31,52,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,236,327,331,339]),("combin",[7,19]),
         ("marker",[6]),("option",[14,22]),
         ("pair",[7,8,9,16])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%85%59%188%209%26%210%47%6%171%101$7@%104$6@$2@@@$3@||@|@@%161%102$4@%112$3@%122$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op cacheWrite_paHitdc'_thm x = x
    val op cacheWrite_paHitdc'_thm =
    DT(((("CacheLib",49),
        [("bool",[25,26,27,29,31,50,55,57,62,63,104,128,146]),
         ("cache",[186,189,236,242,327,331,340]),("combin",[7,12,19]),
         ("option",[14,16]),("pair",[4,5,7,8,9,16])]),["DISK_THM"]),
       [read"%86%67%88%43%96%23%92%46%91%25%85%59%187%208%26%47%171%101$7@%104$6@$1@@@$2@||@@%162%103$5@%116$4@%129$3@%122$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op cacheWrite_paNOTCHGpm_thm x = x
    val op cacheWrite_paNOTCHGpm_thm =
    DT(((("CacheLib",50),
        [("CacheLib",[28]),
         ("bool",[8,25,26,27,29,31,52,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,242,327,340]),("combin",[7,19]),
         ("option",[14,16]),("pair",[7,8,9,16])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%96%23%92%46%91%25%85%59%187%208%26%47%149%222@%136%232%228%105$6@$4@@@@%232%228%105$6@$0@@@@@||@@%162%103$5@%116$4@%129$3@%122$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op cacheWrite_read_thm x = x
    val op cacheWrite_read_thm =
    DT(((("CacheLib",51),
        [("CacheLib",[45,49]),("bitstring",[71]),
         ("bool",[8,25,26,27,29,31,53,55,57,62,63,104,128,146]),
         ("cache",[186,189,327,339]),("combin",[7,19]),("option",[14]),
         ("pair",[7,8,9,16])]),["DISK_THM"]),
       [read"%86%67%88%43%96%23%92%46%91%25%85%59%187%208%26%47%188%209%9%210%14%70%136%232$0@@%254$8@@||@|@@%161%102$7@%112$6@%122$0@$1@@@@$2@@||@@%162%103$5@%116$4@%129$3@%122$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op CacheRead_vaEQva'_thm x = x
    val op CacheRead_vaEQva'_thm =
    DT(((("CacheLib",52),
        [("arithmetic",[26,27]),("bitstring",[53]),
         ("bool",[14,25,26,27,29,31,35,50,53,55,57,62,63,104,128,146]),
         ("cache",
         [186,189,236,237,239,242,320,321,322,323,327,331,337,339]),
         ("combin",[7,12,19,21]),("numeral",[3,5,7,15,16]),
         ("option",[14,22]),("pair",[4,7,16]),
         ("words",[149,665])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%85%59%148%161%102$5@%112$4@%122$3@$2@@@@$0@@%161%102$1@%112$4@%122$3@$2@@@@$0@@|@|@|@|@|@|@"])
  fun op CacheRead_lfoldEQval_SameAddress_thm x = x
    val op CacheRead_lfoldEQval_SameAddress_thm =
    DT(((("CacheLib",53),
        [("CacheLib",[48]),
         ("bool",[8,25,26,27,29,31,53,55,57,62,63,104,128,146]),
         ("cache",[186,189,236,327,339]),("combin",[7,19]),("list",[20]),
         ("option",[14]),("pair",[7,8,9,16])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%85%59%188%209%26%210%47%71%188%209%4%210%5%73%142$3@$0@||@|@@%161%102$7@%112$6@%122$1@$2@@@@$3@@||@|@@%161%102$4@%112$3@%122$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op CacheRead_KeepHit_if_PaHitDc_thm x = x
    val op CacheRead_KeepHit_if_PaHitDc_thm =
    DT(((("CacheLib",54),
        [("bool",[25,26,27,29,31,52,53,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,236,327,331,339]),("combin",[7,19]),
         ("option",[14]),("pair",[7,8,16])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%188%209%26%48%185%206%29%204%61%78%185%206%30%204%62%79%149%171%101$14@%104$13@$11@@@$8@@%149%171%101$10@%104$9@$11@@@$8@@%171%101$10@%104$9@$7@@@$8@@@||@|@@%223%100$7@$6@@$5@@||@|@@%223%100$8@$7@@$2@@||@@%161%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_KeepHit_if_iNOTEQi'_thm x = x
    val op Fill_KeepHit_if_iNOTEQi'_thm =
    DT(((("CacheLib",55),
        [("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),("cache",[236,237,239,242,325,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,22]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,203,206,608])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%149%256%137$5@$2@@@%149%256%171%101$14@%104$13@$11@@@$8@@@%149%171%101$10@%104$9@$11@@@$8@@%171%101$10@%104$9@$7@@@$8@@@@||@|@@%223%100$7@$6@@$5@@||@|@@%223%100$8@$7@@$2@@||@@%170%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op EPNotEqNONE_impEvict_thm x = x
    val op EPNotEqNONE_impEvict_thm =
    DT(((("CacheLib",56),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[186,189,236,237,239,242,329,330,331,337]),
         ("combin",[7,12,19,21]),("list",[23,28]),("marker",[6]),
         ("num",[9]),("numeral",[3,5,7,8,16]),("option",[7,11,14,22]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%149%137$5@$2@@%149%256%171%101$14@%104$13@$11@@@$8@@@%149%171%101$10@%104$9@$11@@@$8@@%149%256%171%101$10@%104$9@$7@@@$8@@@%256%145%165%124%155$11$5@@@%104$4@$11@@@@%194@@@@@@||@|@@%223%100$7@$6@@$5@@||@|@@%223%100$8@$7@@$2@@||@@%170%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_NotchgTag'_thm x = x
    val op Fill_NotchgTag'_thm =
    DT(((("CacheLib",57),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[186,189,329,330]),("combin",[7,19]),("list",[23,28]),
         ("marker",[6]),("num",[9]),("numeral",[3,5,7,8,16]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%94%38%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%189%211%54%7%149%137$7@$4@@%149%256%137$6@$3@@@%149%222@%149%172$1$3@@@%149%172%156$12$4@@$3@@@%136%198%202$1$3@@@%225$2@@@%198%202%156$12$4@@$3@@@%225$2@@@@@@@@||@@%191%125%155$10$5@@@%108$5@%113$4@%123$11@%119$10@$9@@@@@@$6@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$7@$6@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_NotchgHitDC'Tag_thm x = x
    val op Fill_NotchgHitDC'Tag_thm =
    DT(((("CacheLib",58),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,103,104,123,128,
          146]),("cache",[186,189,236,237,239,242,328,330,331,337]),
         ("combin",[7,12,19,21]),("list",[23,28]),("marker",[6]),
         ("num",[9]),("numeral",[3,5,7,8,16]),("option",[6,7,10,11,14,22]),
         ("pair",[4,5,7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("words",[206])]),["DISK_THM"]),
       [read"%86%67%88%43%86%68%88%44%92%46%91%25%88%80%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%149%137$5@$2@@%149%256%171%101$15@%104$14@$10@@@$8@@@%149%172%156$10$5@@$1@@@%149%172%156$7$5@@$1@@@%149%145%165%124%155$10$5@@@%104$4@$10@@@@%201$9@@@%256%137$1@$9@@@@@@@||@|@@%223%100$10@$9@@$5@@||@|@@%223%100$9@$8@@$2@@||@@%170%102$7@%112$6@%122$3@$2@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op thm1 x = x
    val op thm1 =
    DT(((("CacheLib",59),
        [("CacheLib",[57,58]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,94,95,100,103,104,
          123,128,144,146]),
         ("cache",[186,189,236,237,239,242,325,328,330,331,337,338]),
         ("combin",[7,8,11,12,15,16,19,21,33,35]),("fcp",[60,61,62,63]),
         ("list",[23,28]),("marker",[6,9]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10,22]),
         ("pair",[4,5,7,8,9,16,45,46]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),("state_transformer",[9]),
         ("words",[1,111,150,203,206,394,426,608])]),["DISK_THM"]),
       [read"%86%67%88%43%86%68%88%44%92%46%91%25%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%183%41%183%40%149%222@%149%256%171%101$16@%104$15@$11@@@$10@@@%149%171%101$14@%104$13@$11@@@$10@@%149%171%101$14@%104$13@$9@@@$10@@%149%256%137%250%252%250$3@$1@@$4@@%97$0@%195%151%218@@@@@%250%252%250$6@$1@@$7@@%97$0@%195%151%218@@@@@@@%136%164%109$4@%114$3@%126$2@$11@@@@@%164%109$4@%114$3@%126$2@$9@@@@@@@@@@|@%233%158%153%220$9@@@@@|@%234%249%240%154%152%220$8@@@@%227%195%150%218@@@@@@@||@|@@%223%100$9@$8@@$5@@||@|@@%223%100$8@$7@@$2@@||@@%170%102$6@%112$5@%122$2@$1@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_someEPevict_dcEQpm'_thm x = x
    val op Fill_someEPevict_dcEQpm'_thm =
    DT(((("CacheLib",60),
        [("CacheLib",[0,12,17,22]),
         ("arithmetic",
         [19,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,254,
          274,282]),("bit",[2]),("bitstring",[71]),
         ("bool",
         [8,14,25,26,27,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,104,
          123,128,146]),("cache",[236,237,239,242,319,337,338]),
         ("combin",[7,8,11,12,15,16,19,21,35]),("fcp",[60,61,62,63]),
         ("marker",[6,9]),("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[7,10,16]),
         ("pair",[4,5,7,8,9,16,45,46]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",
         [1,111,150,203,205,206,321,608])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%86%68%88%44%92%46%91%25%88%80%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%183%40%149%190%107$3@%104$2@$11@@@@%149%131%256%137$15@$13@@@%137$3@$6@@@%149%222@%149%137$2@%203%201$10@@@@%149%145%165%124%155$11$6@@@%104$5@$11@@@@%201$10@@@%136%164%109$3@%114$2@%126$1@$11@@@@@%232%228%105$13@$7@@@@@@@@@|@%233%158%153%220$8@@@@@||@|@@%223%100$10@$9@@$5@@||@|@@%223%100$9@$8@@$2@@||@@%170%102$7@%112$6@%122$3@$2@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_KeepHitDC'Tag_thm x = x
    val op Fill_KeepHitDC'Tag_thm =
    DT(((("CacheLib",61),
        [("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),
         ("cache",[186,189,236,237,239,242,325,328,330,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10,11,14]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,203,206,608])]),["DISK_THM"]),
       [read"%86%67%88%43%86%68%88%44%92%46%91%25%88%80%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%149%131%137$5@$2@@%256%137$1@$9@@@@%149%256%171%101$15@%104$14@$10@@@$8@@@%149%171%101$13@%104$12@$10@@@$8@@%149%145%165%124%155$10$5@@@%104$4@$10@@@@%201$9@@@%172%156$7$5@@$1@@@@@@||@|@@%223%100$10@$9@@$5@@||@|@@%223%100$9@$8@@$2@@||@@%170%102$7@%112$6@%122$3@$2@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_EpEqtag_tagDc'Miss_thm x = x
    val op Fill_EpEqtag_tagDc'Miss_thm =
    DT(((("CacheLib",62),
        [("CacheLib",[61]),
         ("bool",
         [8,25,26,27,29,31,50,52,53,55,57,62,92,94,100,104,123,144]),
         ("cache",[331]),("combin",[8,11,15,16,19,35]),("marker",[6,9]),
         ("option",[10,14,22]),("pair",[7,8,9,16,45,46])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%88%80%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%149%137$5@$2@@%149%256%171%101$15@%104$14@$12@@@$8@@@%149%171%101$11@%104$10@$12@@@$8@@%149%256%171%101$11@%104$10@$7@@@$8@@@%149%145%165%124%155$12$5@@@%104$4@$12@@@@%201$9@@@%137$1@$9@@@@@@||@|@@%223%100$8@$7@@$5@@||@|@@%223%100$9@$8@@$2@@||@@%170%102$7@%112$6@%122$5@$4@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_ifInLineRange_HitDC'Pa_thm x = x
    val op Fill_ifInLineRange_HitDC'Pa_thm =
    DT(((("CacheLib",63),
        [("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,
          123,128,146]),
         ("cache",[186,189,236,237,239,242,325,328,329,330,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,14,22,28]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),("state_transformer",[9]),
         ("words",[1,111,150,203,206,608])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%183%40%149%222@%149%256%171%101$15@%104$14@$12@@@$9@@@%149%256%171%101$11@%104$10@$12@@@$9@@@%149%171%101$11@%104$10@$8@@@$9@@%131%137$6@$3@@%137$5@$2@@@@@@|@%233%158%153%220$8@@@@@||@|@@%223%100$7@$6@@$5@@||@|@@%223%100$8@$7@@$2@@||@@%170%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op linefill_slEq_diffInputDc_thm x = x
    val op linefill_slEq_diffInputDc_thm =
    DT(((("CacheLib",64),
        [("CacheLib",[15]),("arithmetic",[19,26,27,71,125]),("bit",[2]),
         ("bool",[8,14,25,52,55,57,62,63,104,123]),
         ("combin",[8,11,15,16,33,35]),("fcp",[60,61,62,63]),
         ("marker",[6]),("numeral",[0,3,5,7,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,16]),
         ("words",[1,111,203,206])]),["DISK_THM"]),
       [read"%93%28%88%29%88%61%92%46%91%25%94%38%94%78%91%26%85%59%181%54%183%41%183%40%177%43%149%134$6@$7@@%149%134$7@%221%231@@@%149%136%164%109$11@%114$10@%126$6@$8@@@@@%232%228%105$0@$9@@@@@%136%164%109$11@%114$10@%126$6@$8@@@@@%198%202$3$10@@@%225$6@@@@@@|@%252%250$9@%97%97$1@$0@@%195%151%218@@@@@%252%250$10@%97$0@%195%151%218@@@@@%250%225$5@@%195%151%218@@@@@@|@%233%158%153%220$2@@@@@|@%234%249%240%154%152%220$1@@@@%227%195%150%218@@@@@@@|@%169%191%125$8@%108$7@%113$6@%123$5@%119$1@$3@@@@@@$0@@@|@|@|@|@|@|@|@|@|@"])
  fun op linefill_slEq_diffInputDcAndalsoPM_thm x = x
    val op linefill_slEq_diffInputDcAndalsoPM_thm =
    DT(((("CacheLib",65),
        [("CacheLib",[15]),("arithmetic",[19,26,27,71,125]),("bit",[2]),
         ("bool",[8,14,25,52,55,57,62,63,104,123]),
         ("combin",[8,11,15,16,33,35]),("fcp",[60,61,62,63]),
         ("marker",[6]),("numeral",[0,3,5,7,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,16]),
         ("words",[1,111,203,206])]),["DISK_THM"]),
       [read"%88%29%88%61%88%62%94%78%93%28%92%46%91%25%91%26%88%43%85%59%94%38%94%35%179%47%181%54%181%55%183%41%183%40%149%256%137$15@$14@@@%149%134$13@$6@@%149%134$6@%221%231@@@%149%136%232%228%105$8@$11@@@@%232%228%105$8@$4@@@@@%149%137$8@%252%250$15@%97%97$1@$0@@%195%151%218@@@@@%252%250$16@%97$0@%195%151%218@@@@@%250%225$13@@%195%151%218@@@@@@@%136%198%202$3$15@@@%225$13@@@%198%202$2$15@@@%225$13@@@@@@@@|@%233%158%153%220$6@@@@@|@%234%249%240%154%152%220$5@@@@%227%195%150%218@@@@@@@|@%169%191%125$9@%108$13@%113$12@%123$1@%119$6@$3@@@@@@$4@@@|@%169%191%125$8@%108$12@%113$11@%123$7@%119$5@$2@@@@@@$3@@@|@%199%216%108$11@%113$9@%123$6@%119$5@$0@@@@@$2@@@|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op CacheRead_KeepMiss_if_PaMissDc_thm x = x
    val op CacheRead_KeepMiss_if_PaMissDc_thm =
    DT(((("CacheLib",66),
        [("bool",[25,26,27,29,31,52,53,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,236,327,331,339]),("combin",[7,19]),
         ("option",[14,22]),("pair",[7,8,16])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%188%209%26%48%185%206%29%204%61%78%185%206%30%204%62%79%149%171%101$14@%104$13@$11@@@$8@@%149%256%171%101$10@%104$9@$11@@@$8@@@%256%171%101$10@%104$9@$7@@@$8@@@@||@|@@%223%100$7@$6@@$5@@||@|@@%223%100$8@$7@@$2@@||@@%161%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_NotChgCache_ifEQSiAndalsoTag x = x
    val op Fill_NotChgCache_ifEQSiAndalsoTag =
    DT(((("CacheLib",67),
        [("bool",[25,26,27,31,55,57,104,123,128,146]),
         ("cache",[236,237,239,242,337]),("combin",[7,12,19,21]),
         ("marker",[6]),("option",[6,7]),("pair",[7,8,16])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%178%26%178%27%149%137$7@$4@@%149%137$6@$3@@%140$1@$0@@@|@%168%170%102$9@%112$8@%122$11@$10@@@@$7@@@|@%168%170%102$12@%112$11@%122$10@$9@@@@$6@@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op diffPa_imply_diffElement_thm x = x
    val op diffPa_imply_diffElement_thm =
    DT(((("CacheLib",69),
        [("CacheLib",[22]),("arithmetic",[26,27]),
         ("bool",[8,25,27,31,52,53,55,57,62,91,95,104,123]),
         ("combin",[19]),("marker",[6]),("pair",[7,16]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%86%67%88%43%86%68%88%44%85%59%185%206%29%204%61%78%185%206%30%204%62%79%149%222@%149%256%137$9@$7@@@%219%256%137$5@$2@@@%219%256%143$3@$0@@@%256%137$4@$1@@@@@@||@|@@%223%100$5@$4@@$3@@||@|@@%223%100$4@$3@@$0@@|@|@|@|@|@"])
  fun op Fill_causing_evict_EP_IsSome_thm x = x
    val op Fill_causing_evict_EP_IsSome_thm =
    DT(((("CacheLib",70),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[186,189,236,237,239,242,330,331,337]),
         ("combin",[7,12,19,21]),("list",[23,28]),("marker",[6]),
         ("num",[9]),("numeral",[3,5,7,8,16]),("option",[6,7,11,14,22]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("words",[206])]),["DISK_THM"]),
       [read"%86%67%88%43%86%68%88%44%92%46%91%25%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%149%131%137$5@$2@@%256%137$4@$1@@@@%149%256%171%101$14@%104$13@$9@@@$8@@@%149%171%101$12@%104$11@$9@@@$8@@%149%256%171%101$12@%104$11@$7@@@$8@@@%256%145%165%124%155$9$5@@@%104$4@$9@@@@%194@@@@@@||@|@@%223%100$9@$8@@$5@@||@|@@%223%100$8@$7@@$2@@||@@%170%102$6@%112$5@%122$2@$1@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_Keep_Miss_DiffTag_thm x = x
    val op Fill_Keep_Miss_DiffTag_thm =
    DT(((("CacheLib",71),
        [("CacheLib",[68]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),
         ("cache",[186,189,236,237,239,242,325,328,330,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10,14,22,28]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,203,206,608])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%149%137$5@$2@@%149%256%137$4@$1@@@%149%256%171%101$10@%104$9@$11@@@$8@@@%256%171%101$10@%104$9@$7@@@$8@@@@@||@|@@%223%100$7@$6@@$5@@||@|@@%223%100$8@$7@@$2@@||@@%170%102$6@%112$5@%122$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheWrite_DiffPa_EqReadMemPa'_thm x = x
    val op CacheWrite_DiffPa_EqReadMemPa'_thm =
    DT(((("CacheLib",72),
        [("CacheLib",[28]),
         ("bool",[8,25,26,27,29,31,52,53,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,242,327,340]),("combin",[7,19]),
         ("option",[14,16]),("pair",[7,8,9,16])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%96%23%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%149%256%137$14@$9@@@%149%222@%149%256%171%101$10@%104$9@$11@@@$8@@@%149%256%171%101$10@%104$9@$7@@@$8@@@%136%232%228%105$9@$12@@@@%232%228%105$9@$6@@@@@@@@||@|@@%223%100$7@$6@@$5@@||@|@@%223%100$9@$8@@$2@@||@@%162%103$7@%116$6@%129$5@%122$4@$3@@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op CacheWrite_DiffPa_EqReadMemPa'_thm3 x = x
    val op CacheWrite_DiffPa_EqReadMemPa'_thm3 =
    DT(((("CacheLib",73),
        [("CacheLib",[28]),
         ("bool",[8,25,26,27,29,31,52,53,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,242,327,340]),("combin",[7,19]),
         ("option",[14,16]),("pair",[7,8,9,16])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%96%23%92%46%91%25%86%68%88%44%85%59%187%208%26%47%185%206%29%204%61%78%185%206%30%204%62%79%149%256%137$14@$9@@@%149%222@%149%256%171%101$10@%104$9@$11@@@$8@@@%149%171%101$10@%104$9@$7@@@$8@@%136%232%228%105$9@$12@@@@%232%228%105$9@$6@@@@@@@@||@|@@%223%100$7@$6@@$5@@||@|@@%223%100$9@$8@@$2@@||@@%162%103$7@%116$6@%129$5@%122$4@$3@@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_dcEqPm_thm x = x
    val op Fill_dcEqPm_thm =
    DT(((("CacheLib",74),
        [("CacheLib",[0,15,17,22,27,68]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,204,
          254,274,282]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,
          104,123,128,146]),("cache",[236,237,239,242,331,337,338]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10]),
         ("pair",[4,5,7,8,9,16]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",
         [1,111,150,203,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%86%67%88%43%92%46%91%25%85%59%187%208%26%47%185%206%29%204%61%78%149%222@%149%256%171%101$9@%104$8@$6@@@$5@@@%136%164%109$2@%114$1@%126$0@$4@@@@@%232%228%105$8@$7@@@@@@||@|@@%223%100$6@$5@@$2@@||@@%170%102$4@%112$3@%122$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op Miss_After_Evict_th x = x
    val op Miss_After_Evict_th =
    DT(((("CacheLib",75),
        [("CacheLib",[0]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,128,
          146]),("cache",[186,189,236,237,239,242,328,329,330,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[7,10,11,14,22]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,203,205,206,608])]),["DISK_THM"]),
       [read"%86%67%88%43%92%46%91%25%88%62%85%59%185%206%29%204%61%78%187%208%26%47%149%145%165%124%155$7$4@@@%104$3@$7@@@@%201$6@@@%149%256%171%101$10@%104$9@$7@@@$5@@@%149%222@%144%156$1$4@@$6@@%193@@@@||@@%170%102$8@%112$7@%122$6@$5@@@@$3@@||@|@@%223%100$5@$4@@$0@@|@|@|@|@|@|@"])
  end
  val _ = DB.bindl "CacheLib"
  [("dirty_axiom",dirty_axiom,DB.Axm),
   ("eviction_policy_axiom",eviction_policy_axiom,DB.Axm),
   ("invariant_cache_def",invariant_cache_def,DB.Def),
   ("write_mem32_def",write_mem32_def,DB.Def),
   ("WriteBackLine_simp_def",WriteBackLine_simp_def,DB.Def),
   ("msb_extract_def",msb_extract_def,DB.Def),
   ("lt_mod_thm",lt_mod_thm,DB.Thm), ("adr_neq3_thm",adr_neq3_thm,DB.Thm),
   ("adr_neq2_thm",adr_neq2_thm,DB.Thm),
   ("adr_neq_thm",adr_neq_thm,DB.Thm),
   ("write_read_thm",write_read_thm,DB.Thm),
   ("write_read_unch_thm",write_read_unch_thm,DB.Thm),
   ("wrtBck_dirty_thm",wrtBck_dirty_thm,DB.Thm),
   ("wrtBck_memory_thm",wrtBck_memory_thm,DB.Thm),
   ("wrtBckLine_dcEQpm'_thm",wrtBckLine_dcEQpm'_thm,DB.Thm),
   ("wrtBckLine_pmEQpm'IfNotDirty_thm",
    wrtBckLine_pmEQpm'IfNotDirty_thm,
    DB.Thm), ("cellFill_memeq_thm",cellFill_memeq_thm,DB.Thm),
   ("linefill_memeq_t",linefill_memeq_t,DB.Thm),
   ("wIdx_extract_thm",wIdx_extract_thm,DB.Thm),
   ("wi_lt_line_size_thm",wi_lt_line_size_thm,DB.Thm),
   ("wIdx_lt_dimword48_thm",wIdx_lt_dimword48_thm,DB.Thm),
   ("si_extract_thm",si_extract_thm,DB.Thm),
   ("word_log2_lt_adrSize",word_log2_lt_adrSize,DB.Thm),
   ("tag_extract_thm",tag_extract_thm,DB.Thm),
   ("lineSpec_thm",lineSpec_thm,DB.Thm),
   ("fill_dcEQpm_thm",fill_dcEQpm_thm,DB.Thm),
   ("shift_add_thm",shift_add_thm,DB.Thm),
   ("writeback_mem_eq_thm",writeback_mem_eq_thm,DB.Thm),
   ("lineSpec_eq_thm",lineSpec_eq_thm,DB.Thm),
   ("writebackline_mem_eq_thm",writebackline_mem_eq_thm,DB.Thm),
   ("fill_pm'EQpm_diffIn_thm",fill_pm'EQpm_diffIn_thm,DB.Thm),
   ("CacheClean_dcEQpm'_thm",CacheClean_dcEQpm'_thm,DB.Thm),
   ("CacheClean_dcEQdc'_thm",CacheClean_dcEQdc'_thm,DB.Thm),
   ("CacheClean_dcEQdc'_diffMsb_thm",
    CacheClean_dcEQdc'_diffMsb_thm,
    DB.Thm),
   ("CacheClean_hitDc'_diffAddr_thm",
    CacheClean_hitDc'_diffAddr_thm,
    DB.Thm),
   ("CacheClean_keepMiss_diffMsb_thm",
    CacheClean_keepMiss_diffMsb_thm,
    DB.Thm),
   ("CacheClean_pmEqpm'_diffMsb_thm",
    CacheClean_pmEqpm'_diffMsb_thm,
    DB.Thm),
   ("CacheInvalidate_dcEQpm'_thm",CacheInvalidate_dcEQpm'_thm,DB.Thm),
   ("CacheInvalidate_missDc'_thm",CacheInvalidate_missDc'_thm,DB.Thm),
   ("CacheInvalidate_hitDc'_diffAddr_thm",
    CacheInvalidate_hitDc'_diffAddr_thm,
    DB.Thm),
   ("CacheInvalidate_dcEQdc'_diffAddr_thm",
    CacheInvalidate_dcEQdc'_diffAddr_thm,
    DB.Thm),
   ("CacheInvalidate_keepMiss_diffMsb_thm",
    CacheInvalidate_keepMiss_diffMsb_thm,
    DB.Thm),
   ("CacheInvalidate_pmEqpm'_diffMsb_thm",
    CacheInvalidate_pmEqpm'_diffMsb_thm,
    DB.Thm), ("msbEqAdrs_Hit_dc_thm",msbEqAdrs_Hit_dc_thm,DB.Thm),
   ("cacheRead_miss_thm",cacheRead_miss_thm,DB.Thm),
   ("cacheRead_hit_thm",cacheRead_hit_thm,DB.Thm),
   ("cacheWrite_setCell_thm",cacheWrite_setCell_thm,DB.Thm),
   ("linefill_hit_t",linefill_hit_t,DB.Thm),
   ("fill_hit_thm",fill_hit_thm,DB.Thm),
   ("cacheRead_paHitdc'_thm",cacheRead_paHitdc'_thm,DB.Thm),
   ("cacheWrite_paHitdc'_thm",cacheWrite_paHitdc'_thm,DB.Thm),
   ("cacheWrite_paNOTCHGpm_thm",cacheWrite_paNOTCHGpm_thm,DB.Thm),
   ("cacheWrite_read_thm",cacheWrite_read_thm,DB.Thm),
   ("CacheRead_vaEQva'_thm",CacheRead_vaEQva'_thm,DB.Thm),
   ("CacheRead_lfoldEQval_SameAddress_thm",
    CacheRead_lfoldEQval_SameAddress_thm,
    DB.Thm),
   ("CacheRead_KeepHit_if_PaHitDc_thm",
    CacheRead_KeepHit_if_PaHitDc_thm,
    DB.Thm),
   ("Fill_KeepHit_if_iNOTEQi'_thm",Fill_KeepHit_if_iNOTEQi'_thm,DB.Thm),
   ("EPNotEqNONE_impEvict_thm",EPNotEqNONE_impEvict_thm,DB.Thm),
   ("Fill_NotchgTag'_thm",Fill_NotchgTag'_thm,DB.Thm),
   ("Fill_NotchgHitDC'Tag_thm",Fill_NotchgHitDC'Tag_thm,DB.Thm),
   ("thm1",thm1,DB.Thm),
   ("Fill_someEPevict_dcEQpm'_thm",Fill_someEPevict_dcEQpm'_thm,DB.Thm),
   ("Fill_KeepHitDC'Tag_thm",Fill_KeepHitDC'Tag_thm,DB.Thm),
   ("Fill_EpEqtag_tagDc'Miss_thm",Fill_EpEqtag_tagDc'Miss_thm,DB.Thm),
   ("Fill_ifInLineRange_HitDC'Pa_thm",
    Fill_ifInLineRange_HitDC'Pa_thm,
    DB.Thm),
   ("linefill_slEq_diffInputDc_thm",linefill_slEq_diffInputDc_thm,DB.Thm),
   ("linefill_slEq_diffInputDcAndalsoPM_thm",
    linefill_slEq_diffInputDcAndalsoPM_thm,
    DB.Thm),
   ("CacheRead_KeepMiss_if_PaMissDc_thm",
    CacheRead_KeepMiss_if_PaMissDc_thm,
    DB.Thm),
   ("Fill_NotChgCache_ifEQSiAndalsoTag",
    Fill_NotChgCache_ifEQSiAndalsoTag,
    DB.Thm),
   ("diffPa_imply_diffElement_thm",diffPa_imply_diffElement_thm,DB.Thm),
   ("Fill_causing_evict_EP_IsSome_thm",
    Fill_causing_evict_EP_IsSome_thm,
    DB.Thm),
   ("Fill_Keep_Miss_DiffTag_thm",Fill_Keep_Miss_DiffTag_thm,DB.Thm),
   ("CacheWrite_DiffPa_EqReadMemPa'_thm",
    CacheWrite_DiffPa_EqReadMemPa'_thm,
    DB.Thm),
   ("CacheWrite_DiffPa_EqReadMemPa'_thm3",
    CacheWrite_DiffPa_EqReadMemPa'_thm3,
    DB.Thm), ("Fill_dcEqPm_thm",Fill_dcEqPm_thm,DB.Thm),
   ("Miss_After_Evict_th",Miss_After_Evict_th,DB.Thm)]

  local open GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("arm_stepTheory.arm_step_grammars",
                          arm_stepTheory.arm_step_grammars),
                         ("cacheTheory.cache_grammars",
                          cacheTheory.cache_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("invariant_cache", (Term.prim_mk_const { Name = "invariant_cache", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("invariant_cache", (Term.prim_mk_const { Name = "invariant_cache", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("write_mem32", (Term.prim_mk_const { Name = "write_mem32", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("write_mem32", (Term.prim_mk_const { Name = "write_mem32", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("WriteBackLine_simp", (Term.prim_mk_const { Name = "WriteBackLine_simp", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("WriteBackLine_simp", (Term.prim_mk_const { Name = "WriteBackLine_simp", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("msb_extract", (Term.prim_mk_const { Name = "msb_extract", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("msb_extract", (Term.prim_mk_const { Name = "msb_extract", Thy = "CacheLib"}))
  val CacheLib_grammars = Parse.current_lgrms()
  end
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "CacheLib",
    thydataty = "compute",
    data =
        "CacheLib.invariant_cache_def CacheLib.msb_extract_def CacheLib.write_mem32_def CacheLib.WriteBackLine_simp_def"
  }

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "CacheLib"
end
