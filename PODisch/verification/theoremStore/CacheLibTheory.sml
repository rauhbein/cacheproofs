structure CacheLibTheory :> CacheLibTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading CacheLibTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open arm_stepTheory cacheTheory
  in end;
  val _ = Theory.link_parents
          ("CacheLib",
          Arbnum.fromString "1521712343",
          Arbnum.fromString "484182")
          [("arm_step",
           Arbnum.fromString "1510753628",
           Arbnum.fromString "501602"),
           ("cache",
           Arbnum.fromString "1521643636",
           Arbnum.fromString "731319")];
  val _ = Theory.incorporate_types "CacheLib" [];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("fcp", "cart"), ID("fcp", "bit0"),
   ID("one", "one"), ID("min", "bool"), ID("fcp", "bit1"),
   ID("pair", "prod"), ID("cache", "cache_state"), ID("cache", "CSET"),
   ID("list", "list"), ID("num", "num"), ID("cache", "actions"),
   ID("cache", "wrTyp"), ID("option", "option"), ID("cache", "SLVAL"),
   ID("bool", "!"), ID("arithmetic", "+"), ID("pair", ","),
   ID("arithmetic", "-"), ID("bool", "/\\"), ID("num", "0"),
   ID("prim_rec", "<"), ID("arithmetic", "<="), ID("min", "="),
   ID("min", "==>"), ID("arithmetic", "BIT1"), ID("arithmetic", "BIT2"),
   ID("cache", "CACHE_CONFIG_ccsidr"), ID("cache", "CCSIDR"),
   ID("cache", "CACHE_CONFIG"), ID("cache", "CACHE_CONFIG_ctr"),
   ID("cache", "CTR"), ID("cache", "CCSIDR_NumSets"),
   ID("cache", "CSET_hist"), ID("cache", "CSET_sl"),
   ID("cache", "CSET_sl_fupd"), ID("cache", "CTR_DminLine"),
   ID("cache", "CacheCleanByAdr"), ID("cache", "CacheInvalidateByAdr"),
   ID("cache", "CacheRead"), ID("cache", "CacheWrite"),
   ID("cache", "CellFill"), ID("cache", "CellRead"), ID("cache", "EP"),
   ID("arithmetic", "EXP"), ID("bool", "F"), ID("pair", "FST"),
   ID("cache", "Fill"), ID("cache", "Hit"), ID("option", "IS_SOME"),
   ID("combin", "K"), ID("list", "LENGTH"), ID("bool", "LET"),
   ID("cache", "LineDirty"), ID("cache", "LineFill"),
   ID("arithmetic", "MOD"), ID("option", "NONE"),
   ID("arithmetic", "NUMERAL"), ID("cache", "SLVAL_dirty"),
   ID("cache", "SLVAL_dirty_fupd"), ID("cache", "SLVAL_value"),
   ID("pair", "SND"), ID("option", "SOME"), ID("option", "THE"),
   ID("pair", "UNCURRY"), ID("combin", "UPDATE"), ID("cache", "WriteBack"),
   ID("cache", "WriteBackLine"), ID("CacheLib", "WriteBackLine_simp"),
   ID("arithmetic", "ZERO"), ID("bool", "\\/"),
   ID("cache", "cache_state_DC"), ID("words", "dimword"),
   ID("bool", "itself"), ID("CacheLib", "invariant_cache"),
   ID("cache", "lineSpec"), ID("CacheLib", "msb_extract"),
   ID("words", "n2w"), ID("cache", "read_mem32"), ID("cache", "si"),
   ID("cache", "tag"), ID("bool", "the_value"), ID("bitstring", "v2w"),
   ID("words", "w2n"), ID("bitstring", "w2v"), ID("cache", "wIdx"),
   ID("words", "word_1comp"), ID("words", "word_add"),
   ID("words", "word_and"), ID("words", "word_extract"),
   ID("words", "word_ge"), ID("words", "word_hi"), ID("words", "word_hs"),
   ID("words", "word_lo"), ID("words", "word_log2"),
   ID("words", "word_lsl"), ID("words", "word_lsr"),
   ID("words", "word_msb"), ID("words", "word_or"),
   ID("cache", "wrTyp_flag"), ID("cache", "wrTyp_value"),
   ID("CacheLib", "write_mem32"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYOP [3], TYOP [2, 0], TYOP [2, 1], TYOP [2, 2], TYOP [4],
   TYOP [1, 4, 3], TYOP [5, 0], TYOP [2, 6], TYOP [2, 7], TYOP [2, 8],
   TYOP [2, 9], TYOP [1, 4, 10], TYOP [0, 11, 5], TYOP [2, 3],
   TYOP [2, 13], TYOP [1, 4, 14], TYOP [6, 12, 15], TYOP [6, 11, 16],
   TYOP [0, 17, 12], TYOP [7], TYOP [0, 19, 11], TYOP [0, 11, 20],
   TYOP [2, 14], TYOP [1, 4, 22], TYOP [0, 23, 21], TYV "'b", TYOP [8],
   TYV "'a", TYOP [0, 27, 26], TYOP [6, 28, 25], TYV "'c",
   TYOP [6, 28, 30], TYOP [6, 25, 31], TYOP [6, 11, 32], TYOP [6, 27, 33],
   TYOP [0, 34, 29], TYOP [0, 11, 26], TYOP [9, 4], TYOP [10],
   TYOP [6, 38, 11], TYOP [11], TYOP [6, 40, 39], TYOP [9, 41], TYOP [12],
   TYOP [14], TYOP [13, 44], TYOP [6, 12, 37], TYOP [0, 11, 45],
   TYOP [5, 6], TYOP [5, 48], TYOP [1, 4, 49], TYOP [1, 4, 27],
   TYOP [0, 27, 4], TYOP [0, 52, 4], TYOP [0, 25, 4], TYOP [0, 54, 4],
   TYOP [0, 30, 4], TYOP [0, 56, 4], TYOP [0, 44, 4], TYOP [0, 58, 4],
   TYOP [0, 19, 4], TYOP [0, 60, 4], TYOP [0, 51, 4], TYOP [0, 62, 4],
   TYOP [0, 23, 4], TYOP [0, 64, 4], TYOP [0, 15, 4], TYOP [0, 66, 4],
   TYOP [0, 11, 4], TYOP [0, 68, 4], TYOP [0, 50, 4], TYOP [0, 70, 4],
   TYOP [0, 28, 4], TYOP [0, 72, 4], TYOP [0, 36, 4], TYOP [0, 74, 4],
   TYOP [0, 12, 4], TYOP [0, 76, 4], TYOP [0, 42, 4], TYOP [0, 78, 4],
   TYOP [0, 38, 4], TYOP [0, 80, 4], TYOP [0, 45, 4], TYOP [0, 82, 4],
   TYOP [0, 43, 4], TYOP [0, 84, 4], TYOP [0, 38, 38], TYOP [0, 38, 86],
   TYOP [0, 33, 34], TYOP [0, 27, 88], TYOP [0, 31, 32], TYOP [0, 25, 90],
   TYOP [6, 23, 11], TYOP [0, 11, 92], TYOP [0, 23, 93], TYOP [6, 11, 36],
   TYOP [6, 23, 95], TYOP [0, 95, 96], TYOP [0, 23, 97], TYOP [6, 12, 36],
   TYOP [6, 11, 99], TYOP [6, 23, 100], TYOP [0, 100, 101],
   TYOP [0, 23, 102], TYOP [6, 43, 99], TYOP [6, 11, 104],
   TYOP [6, 23, 105], TYOP [0, 105, 106], TYOP [0, 23, 107],
   TYOP [0, 36, 95], TYOP [0, 11, 109], TYOP [6, 11, 12],
   TYOP [0, 12, 111], TYOP [0, 11, 112], TYOP [0, 32, 33],
   TYOP [0, 11, 114], TYOP [6, 11, 95], TYOP [0, 95, 116],
   TYOP [0, 11, 117], TYOP [6, 36, 38], TYOP [6, 12, 119],
   TYOP [6, 11, 120], TYOP [6, 11, 121], TYOP [0, 121, 122],
   TYOP [0, 11, 123], TYOP [6, 38, 36], TYOP [6, 11, 125],
   TYOP [6, 11, 126], TYOP [0, 126, 127], TYOP [0, 11, 128],
   TYOP [6, 12, 44], TYOP [6, 38, 130], TYOP [6, 11, 131],
   TYOP [6, 11, 132], TYOP [0, 132, 133], TYOP [0, 11, 134],
   TYOP [0, 16, 17], TYOP [0, 11, 136], TYOP [0, 99, 100],
   TYOP [0, 11, 138], TYOP [0, 120, 121], TYOP [0, 11, 140],
   TYOP [0, 125, 126], TYOP [0, 11, 142], TYOP [0, 131, 132],
   TYOP [0, 11, 144], TYOP [0, 104, 105], TYOP [0, 11, 146],
   TYOP [0, 25, 29], TYOP [0, 28, 148], TYOP [0, 30, 31],
   TYOP [0, 28, 150], TYOP [0, 38, 119], TYOP [0, 36, 152],
   TYOP [0, 44, 130], TYOP [0, 12, 154], TYOP [0, 15, 16],
   TYOP [0, 12, 156], TYOP [0, 36, 99], TYOP [0, 12, 158],
   TYOP [0, 119, 120], TYOP [0, 12, 160], TYOP [6, 42, 95],
   TYOP [0, 95, 162], TYOP [0, 42, 163], TYOP [6, 42, 122],
   TYOP [0, 122, 165], TYOP [0, 42, 166], TYOP [0, 36, 125],
   TYOP [0, 38, 168], TYOP [6, 38, 111], TYOP [0, 111, 170],
   TYOP [0, 38, 171], TYOP [0, 130, 131], TYOP [0, 38, 173],
   TYOP [0, 99, 104], TYOP [0, 43, 175], TYOP [0, 4, 4], TYOP [0, 4, 177],
   TYOP [0, 38, 80], TYOP [0, 15, 66], TYOP [0, 11, 68], TYOP [1, 4, 2],
   TYOP [0, 182, 4], TYOP [0, 182, 183], TYOP [0, 50, 70],
   TYOP [0, 36, 74], TYOP [0, 12, 76], TYOP [0, 37, 4], TYOP [0, 37, 188],
   TYOP [0, 45, 82], TYOP [13, 11], TYOP [0, 191, 4], TYOP [0, 191, 192],
   TYOP [6, 11, 38], TYOP [6, 11, 194], TYOP [0, 195, 4],
   TYOP [0, 195, 196], TYOP [0, 29, 4], TYOP [0, 29, 198],
   TYOP [6, 36, 46], TYOP [0, 200, 4], TYOP [0, 200, 201], TYOP [28],
   TYOP [29], TYOP [0, 204, 203], TYOP [31], TYOP [0, 204, 206],
   TYOP [0, 203, 50], TYOP [0, 26, 42], TYOP [0, 26, 47], TYOP [0, 26, 26],
   TYOP [0, 47, 47], TYOP [0, 212, 211], TYOP [0, 206, 182],
   TYOP [6, 36, 12], TYOP [0, 19, 215], TYOP [0, 101, 216],
   TYOP [0, 19, 200], TYOP [0, 101, 218], TYOP [0, 106, 216],
   TYOP [0, 11, 15], TYOP [0, 170, 221], TYOP [0, 127, 15],
   TYOP [0, 162, 191], TYOP [0, 215, 36], TYOP [6, 47, 42],
   TYOP [0, 226, 47], TYOP [0, 96, 60], TYOP [0, 47, 212],
   TYOP [0, 37, 38], TYOP [0, 66, 66], TYOP [0, 68, 68], TYOP [0, 74, 74],
   TYOP [0, 76, 76], TYOP [0, 12, 12], TYOP [0, 235, 235], TYOP [0, 47, 4],
   TYOP [0, 237, 237], TYOP [0, 47, 29], TYOP [0, 239, 239],
   TYOP [0, 80, 80], TYOP [0, 38, 11], TYOP [0, 242, 242],
   TYOP [0, 196, 196], TYOP [0, 195, 11], TYOP [0, 245, 245],
   TYOP [0, 215, 4], TYOP [0, 247, 247], TYOP [0, 201, 201],
   TYOP [0, 226, 4], TYOP [0, 250, 250], TYOP [0, 116, 4],
   TYOP [0, 19, 226], TYOP [0, 165, 253], TYOP [0, 44, 44],
   TYOP [0, 177, 255], TYOP [0, 44, 221], TYOP [0, 215, 12],
   TYOP [0, 44, 45], TYOP [0, 11, 191], TYOP [0, 45, 44],
   TYOP [0, 191, 11], TYOP [0, 194, 4], TYOP [0, 11, 80],
   TYOP [0, 264, 263], TYOP [0, 194, 11], TYOP [0, 11, 242],
   TYOP [0, 267, 266], TYOP [0, 11, 263], TYOP [0, 269, 196],
   TYOP [0, 11, 266], TYOP [0, 271, 245], TYOP [0, 36, 76],
   TYOP [0, 273, 247], TYOP [0, 46, 4], TYOP [0, 36, 275],
   TYOP [0, 276, 201], TYOP [0, 12, 188], TYOP [0, 278, 275],
   TYOP [0, 47, 78], TYOP [0, 280, 250], TYOP [0, 28, 28],
   TYOP [0, 26, 282], TYOP [0, 27, 283], TYOP [0, 5, 235],
   TYOP [0, 11, 285], TYOP [0, 45, 212], TYOP [0, 11, 287],
   TYOP [0, 19, 12], TYOP [0, 133, 289], TYOP [0, 122, 216],
   TYOP [0, 122, 215], TYOP [0, 19, 204], TYOP [73, 49], TYOP [0, 294, 38],
   TYOP [0, 19, 195], TYOP [0, 92, 296], TYOP [0, 38, 51],
   TYOP [0, 38, 182], TYOP [0, 38, 50], TYOP [0, 111, 37],
   TYOP [0, 92, 20], TYOP [0, 37, 15], TYOP [0, 182, 38], TYOP [0, 50, 38],
   TYOP [0, 15, 37], TYOP [0, 11, 37], TYOP [0, 11, 11], TYOP [0, 11, 308],
   TYOP [0, 50, 50], TYOP [0, 50, 310], TYOP [0, 15, 5], TYOP [0, 38, 312],
   TYOP [0, 38, 313], TYOP [0, 38, 308], TYOP [0, 38, 315],
   TYOP [0, 51, 62], TYOP [0, 43, 15]]
  end
  val _ = Theory.incorporate_consts "CacheLib" tyvector
     [("write_mem32", 18), ("msb_extract", 24), ("invariant_cache", 4),
      ("WriteBackLine_simp", 35)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("LSB", 11), TMV("LSB2", 11), TMV("MSB", 11), TMV("MSB2", 11),
   TMV("_", 36), TMV("_", 12), TMV("_", 37), TMV("_", 42), TMV("a", 11),
   TMV("a", 36), TMV("a", 38), TMV("a'", 11), TMV("add", 11), TMV("b", 11),
   TMV("b", 12), TMV("b", 38), TMV("bi", 38), TMV("bmL", 11),
   TMV("bmM", 11), TMV("c", 11), TMV("c", 38), TMV("d", 11), TMV("d", 38),
   TMV("data", 43), TMV("dc", 28), TMV("dc", 36), TMV("dc'", 36),
   TMV("dc''", 36), TMV("h", 42), TMV("i", 11), TMV("i'", 11),
   TMV("l", 45), TMV("li", 27), TMV("ln", 38), TMV("m", 12), TMV("m", 38),
   TMV("m'", 12), TMV("n", 30), TMV("n", 38), TMV("ni", 38), TMV("nl", 38),
   TMV("ns", 38), TMV("nt", 38), TMV("pa", 11), TMV("pa'", 11),
   TMV("pm", 25), TMV("pm", 12), TMV("pm'", 12), TMV("pm'", 46),
   TMV("pm''", 12), TMV("ps", 38), TMV("s", 19), TMV("s", 38),
   TMV("s'", 19), TMV("sid", 11), TMV("sl", 47), TMV("sl'", 47),
   TMV("slval", 44), TMV("sn", 38), TMV("st", 38), TMV("state", 19),
   TMV("sval", 15), TMV("t", 11), TMV("t'", 11), TMV("tg", 11),
   TMV("v", 15), TMV("v", 50), TMV("v", 47), TMV("va", 23), TMV("va'", 23),
   TMV("value", 15), TMV("vl", 37), TMV("vlc", 37), TMV("vlc'", 15),
   TMV("vlc'", 37), TMV("vlm", 15), TMV("w", 51), TMV("w", 15),
   TMV("w", 50), TMV("w1", 11), TMV("w2", 11), TMV("wi", 11),
   TMV("wi", 38), TMV("wi'", 38), TMV("x", 11), TMC(15, 53), TMC(15, 55),
   TMC(15, 57), TMC(15, 59), TMC(15, 61), TMC(15, 63), TMC(15, 65),
   TMC(15, 67), TMC(15, 69), TMC(15, 71), TMC(15, 73), TMC(15, 75),
   TMC(15, 77), TMC(15, 79), TMC(15, 81), TMC(15, 83), TMC(15, 85),
   TMC(16, 87), TMC(17, 89), TMC(17, 91), TMC(17, 94), TMC(17, 98),
   TMC(17, 103), TMC(17, 108), TMC(17, 110), TMC(17, 113), TMC(17, 115),
   TMC(17, 118), TMC(17, 124), TMC(17, 129), TMC(17, 135), TMC(17, 137),
   TMC(17, 139), TMC(17, 141), TMC(17, 143), TMC(17, 145), TMC(17, 147),
   TMC(17, 149), TMC(17, 151), TMC(17, 153), TMC(17, 155), TMC(17, 157),
   TMC(17, 159), TMC(17, 161), TMC(17, 164), TMC(17, 167), TMC(17, 169),
   TMC(17, 172), TMC(17, 174), TMC(17, 176), TMC(18, 87), TMC(19, 178),
   TMC(20, 38), TMC(21, 179), TMC(22, 179), TMC(23, 178), TMC(23, 180),
   TMC(23, 181), TMC(23, 184), TMC(23, 185), TMC(23, 186), TMC(23, 187),
   TMC(23, 189), TMC(23, 179), TMC(23, 190), TMC(23, 193), TMC(23, 197),
   TMC(23, 199), TMC(23, 202), TMC(24, 178), TMC(25, 86), TMC(26, 86),
   TMC(27, 205), TMC(30, 207), TMC(32, 208), TMC(33, 209), TMC(34, 210),
   TMC(35, 213), TMC(36, 214), TMC(37, 217), TMC(38, 217), TMC(39, 219),
   TMC(40, 220), TMC(41, 222), TMC(42, 223), TMC(43, 224), TMC(44, 87),
   TMC(45, 4), TMC(46, 225), TMC(46, 227), TMC(47, 217), TMC(48, 228),
   TMC(49, 82), TMC(50, 178), TMC(50, 229), TMC(51, 230), TMC(52, 231),
   TMC(52, 232), TMC(52, 233), TMC(52, 234), TMC(52, 236), TMC(52, 238),
   TMC(52, 240), TMC(52, 241), TMC(52, 243), TMC(52, 244), TMC(52, 246),
   TMC(52, 248), TMC(52, 249), TMC(52, 251), TMC(53, 252), TMC(54, 254),
   TMC(55, 87), TMC(56, 45), TMC(56, 191), TMC(57, 86), TMC(58, 58),
   TMC(59, 256), TMC(60, 257), TMC(61, 258), TMC(62, 259), TMC(62, 260),
   TMC(63, 261), TMC(63, 262), TMC(64, 265), TMC(64, 268), TMC(64, 270),
   TMC(64, 272), TMC(64, 274), TMC(64, 277), TMC(64, 279), TMC(64, 281),
   TMC(65, 284), TMC(65, 286), TMC(65, 288), TMC(66, 290), TMC(67, 291),
   TMC(68, 35), TMC(68, 292), TMC(69, 38), TMC(70, 178), TMC(71, 293),
   TMC(72, 295), TMC(74, 4), TMC(75, 297), TMC(76, 24), TMC(77, 298),
   TMC(77, 242), TMC(77, 299), TMC(77, 300), TMC(78, 301), TMC(79, 302),
   TMC(80, 302), TMC(81, 294), TMC(82, 303), TMC(83, 304), TMC(83, 305),
   TMC(84, 306), TMC(84, 307), TMC(85, 21), TMC(86, 308), TMC(87, 309),
   TMC(87, 311), TMC(88, 309), TMC(89, 314), TMC(89, 316), TMC(90, 317),
   TMC(90, 184), TMC(90, 185), TMC(91, 181), TMC(92, 181), TMC(93, 181),
   TMC(94, 310), TMC(95, 267), TMC(96, 267), TMC(97, 62), TMC(98, 309),
   TMC(99, 84), TMC(100, 318), TMC(101, 18), TMC(102, 177)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op dirty_axiom x = x
    val op dirty_axiom =
    DT(((("CacheLib",1),[]),[]),
       [read"%100%31%154%265%177$0@@@%265%201%207$0@@@@|@"])
  fun op eviction_policy_axiom x = x
    val op eviction_policy_axiom =
    DT(((("CacheLib",79),[]),[]),
       [read"%98%28%93%62%96%25%93%29%93%84%154%150%170%129$4@%109$3@$2@@@@%206$0@@@%177%161$2$1@@$0@@@|@|@|@|@|@"])
  fun op invariant_cache_def x = x
    val op invariant_cache_def =
    DT(((("CacheLib",0),[]),[]),
       [read"%140%228@%136%93%43%142%248$0@%232%200%156%155%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%156%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$0@|@@%136%93%29%93%62%99%82%99%39%99%42%89%60%182%2%182%0%182%3%182%1%136%252%163%158%226$4@@@@%233%200%155%224@@@@@%136%253%159%157%226$4@@@@%234%200%155%224@@@@@%136%138$6@%135%200%156%155%155%155%156%224@@@@@@@$5@@@%136%142%248$8@$1@@$8@@%136%142%248$9@$0@@$9@@%136%142%248%261%258$8@$5@@$9@@$3@@%261%258$8@$5@@$9@@@%142%248%258%232$7@@%200%156%224@@@@$2@@%258%232$7@@%200%156%224@@@@@@@@@@|@%259%258%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%135%200%156%155%155%155%156%224@@@@@@@%102$5@$4@@@@%135%200%156%155%155%155%156%224@@@@@@@$4@@@|@%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%102$4@$3@@@|@%245%258%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$3@@$3@@@|@%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$2@@|@|@|@|@|@|@@%136%89%51%89%53%136%143%163%158%226$1@@@@%163%158%226$0@@@@@%144%159%157%226$1@@@@%159%157%226$0@@@@@|@|@@%98%28%93%29%93%62%96%25%93%84%154%150%170%129$4@%109$2@$1@@@@%206$0@@@%177%161$1$3@@$0@@@|@|@|@|@|@@@@@"])
  fun op write_mem32_def x = x
    val op write_mem32_def =
    DT(((("CacheLib",8),[("pair",[16])]),["DISK_THM"]),
       [read"%93%12%97%46%92%70%146%264%116$2@%126$1@$0@@@@%185%46%185%46%185%46%185%46$0|@%218%246$5@%232%200%155%155%224@@@@@@%249%200%155%155%155%155%155%224@@@@@@@%200%156%155%155%156%224@@@@@@$3@@$0@@|@%218%246$4@%232%200%156%224@@@@@%249%200%155%155%155%156%224@@@@@@%200%156%155%155%155%224@@@@@@$2@@$0@@|@%218%246$3@%232%200%155%224@@@@@%249%200%155%155%155%155%224@@@@@@%200%156%155%155%224@@@@@$1@@$0@@|@%218$2@%249%200%155%155%155%224@@@@@%137@$0@@$1@@@|@|@|@"])
  fun op WriteBackLine_simp_def x = x
    val op WriteBackLine_simp_def =
    DT(((("CacheLib",13),[("pair",[16])]),["DISK_THM"]),
       [read"%85%32%93%62%86%45%95%24%87%37%152%222%103$4@%111$3@%104$2@%123$1@$0@@@@@@%187%67%122%217$5@%162%179%219$4@%205%202%178%172@@%207$0$4@@@@@$0@@@$2$5@@@$2@@$3@|@%161$1$4@@@@|@|@|@|@|@"])
  fun op msb_extract_def x = x
    val op msb_extract_def =
    DT(((("CacheLib",52),[]),[]),
       [read"%91%68%93%43%89%60%142%230$2@$1@$0@@%191%212%29%210%62%82%189%41%189%40%258%261%258$3@$1@@$4@@%102$0@%200%156%224@@@@|@%240%163%158%226$4@@@@@|@%241%257%247%159%157%226$3@@@@%234%200%155%224@@@@@@@||@|@@%229%105$2@$1@@$0@@@|@|@|@"])
  fun op lt_mod_thm x = x
    val op lt_mod_thm =
    DT(((("CacheLib",2),
        [("arithmetic",[24,25,27,41,46,59,73,95,178,185,222]),
         ("bool",[25,35,52,53,57,62,95,100,103,104,123]),
         ("numeral",[3,5,8])]),["DISK_THM"]),
       [read"%99%10%99%15%99%20%99%22%154%136%138$3@$2@@%136%139$2@$1@@%138$1@$0@@@@%138%197$3@$0@@%197$2@$0@@@|@|@|@|@"])
  fun op adr_segNeq_thm x = x
    val op adr_segNeq_thm =
    DT(((("CacheLib",3),
        [("bool",[25,26,35,53,55,62,94,100,144])]),["DISK_THM"]),
       [read"%93%8%93%13%93%19%99%38%99%35%154%265%142%261%258$3@%102$1@$0@@@%258$4@$0@@@%261%258$2@%102$1@$0@@@%258$4@$0@@@@@%265%142$3@$2@@@|@|@|@|@|@"])
  fun op adr_neq3_thm x = x
    val op adr_neq3_thm =
    DT(((("CacheLib",4),
        [("arithmetic",
         [18,19,24,27,28,41,46,71,73,84,95,125,178,181,185,215,220,273,
          317]),("bit",[2,5]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,103,104,123]),
         ("combin",[19]),("fcp",[13,15,38,39,60,61,62,63]),
         ("list",[29,291]),("numeral",[0,3,5,6,7,8,9,12,15,16,17,21,28]),
         ("numeral_bit",[1,2,5,21,22,23,24,25,26,27,28,29]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18,23]),
         ("words",
         [1,2,5,28,32,33,58,90,111,143,159,192,199,200,205,206,237,300,353,
          371,397,398,408,409,411,665,668])]),["DISK_THM"]),
       [read"%93%8%93%13%93%19%99%38%182%18%182%17%154%138$2@%200%156%155%155%155%156%224@@@@@@@@%154%136%142%248$5@$0@@$5@@%136%142%248$4@$1@@$4@@%142%248$3@$1@@$3@@@@%154%265%142%261%258$4@$2@@$5@@%261%258$3@$2@@$5@@@@%265%142$4@$3@@@@@|@%245%258%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$1@@$1@@@|@%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$0@@|@|@|@|@"])
  fun op adr_thm x = x
    val op adr_thm =
    DT(((("CacheLib",5),[]),["cheat"]),
       [read"%93%8%93%13%93%19%93%21%99%38%99%35%182%18%182%17%154%136%138$3@%200%156%155%155%155%156%224@@@@@@@@%138$2@%135%200%156%155%155%155%156%224@@@@@@@$3@@@@%154%136%142%248$7@$1@@$7@@%142%248$6@$0@@$6@@@%154%136%142%248$5@$1@@$5@@%142%248$4@$0@@$4@@@%136%154%265%142$7@$5@@@%265%142%261%258$7@%102$3@$2@@@%258$6@$2@@@%261%258$5@%102$3@$2@@@%258$4@$2@@@@@@%136%154%265%142$4@$6@@@%265%142%261%258$7@%102$3@$2@@@%258$6@$2@@@%261%258$5@%102$3@$2@@@%258$4@$2@@@@@@%154%142%261%258$7@%102$3@$2@@@%258$6@$2@@@%261%258$5@%102$3@$2@@@%258$4@$2@@@@%136%142$7@$5@@%142$6@$4@@@@@@@@|@%259%258%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%135%200%156%155%155%155%156%224@@@@@@@%102$2@$1@@@@%135%200%156%155%155%155%156%224@@@@@@@$2@@@|@%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%102$1@$0@@@|@|@|@|@|@|@"])
  fun op adr_neq2_thm x = x
    val op adr_neq2_thm =
    DT(((("CacheLib",6),
        [("arithmetic",
         [18,19,24,27,41,46,71,73,84,95,125,178,185,215,220,273,317]),
         ("bit",[2,5]),
         ("bool",
         [14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,103,104,123]),
         ("combin",[19]),("fcp",[13,15,38,39,60,61,62,63]),
         ("list",[29,291]),("num",[9]),
         ("numeral",[0,3,5,6,7,8,9,12,15,16,17,21,28]),
         ("numeral_bit",[1,2,5,21,22,23,24,25,26,27,28,29]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,15,17,18,23]),
         ("words",
         [1,2,5,28,32,33,58,90,111,143,159,192,199,205,206,237,300,408,409,
          411,665,668])]),["DISK_THM"]),
       [read"%93%8%93%13%93%19%99%38%182%18%182%17%154%138$2@%200%156%155%155%155%156%224@@@@@@@@%154%136%142%248$5@$1@@$5@@%136%142%248$4@$0@@$4@@%142%248$3@$0@@$3@@@@%154%265%142$4@$3@@@%265%142%261%258$5@$2@@$4@@%261%258$5@$2@@$3@@@@@@|@%245%258%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$1@@$1@@@|@%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$0@@|@|@|@|@"])
  fun op adr_neq_thm x = x
    val op adr_neq_thm =
    DT(((("CacheLib",7),
        [("arithmetic",
         [18,19,24,27,41,46,71,73,84,95,125,178,185,215,220,273,317]),
         ("bit",[2,5]),
         ("bool",
         [14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,103,104,123]),
         ("combin",[19]),("fcp",[13,15,38,39,60,61,62,63]),
         ("list",[29,291]),("num",[9]),
         ("numeral",[0,3,5,6,7,8,9,12,15,16,17,21,28]),
         ("numeral_bit",[1,2,5,21,22,23,24,25,26,27,28,29]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18,23]),
         ("words",
         [1,2,5,28,32,33,58,90,111,143,159,192,199,200,205,206,237,300,408,
          409,411,665,668])]),["DISK_THM"]),
       [read"%93%8%93%13%93%19%93%21%99%38%182%18%182%17%154%138$2@%200%156%155%155%155%156%224@@@@@@@@%154%136%142%248$6@$1@@$6@@%142%248$5@$1@@$5@@@%154%136%142%248$4@$0@@$4@@%142%248$3@$0@@$3@@@%154%265%142%258$6@$2@@%258$5@$2@@@@%265%142%261%258$6@$2@@$4@@%261%258$5@$2@@$3@@@@@@@|@%245%258%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$1@@$1@@@|@%259%232%200%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@$0@@|@|@|@|@|@"])
  fun op write_read_thm x = x
    val op write_read_thm =
    DT(((("CacheLib",9),
        [("CacheLib",[8]),("arithmetic",[19,63,125,134,215,220,222]),
         ("bitstring",[19]),
         ("bool",
         [8,14,25,26,27,29,31,35,47,50,51,52,53,55,57,62,63,70,91,98,104,
          123,128,146]),("cache",[319]),("combin",[7,8,19]),
         ("fcp",[13,15,19,38,39,60,61,62,63]),("list",[48,280,282,298]),
         ("numeral",[0,3,5,6,7,8,12,15,16,17,21,24,28]),
         ("numeral_bit",[5]),("pred_set",[18,88]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18]),
         ("words",
         [5,33,49,51,58,69,90,101,102,114,143,144,156,228,300,321,322,324,
          326,328,339,340,353,377,384,621,641,649,661,665,
          668])]),["DISK_THM"]),
       [read"%93%8%92%65%97%34%184%36%147%235%110$3@$0@@@%242$2@@|@%264%116$2@%126$0@$1@@@@|@|@|@"])
  fun op write_read_unch_thm x = x
    val op write_read_unch_thm =
    DT(((("CacheLib",10),
        [("CacheLib",[8]),("arithmetic",[19,215,220,273]),
         ("blast",[0,1,3,4,9,11]),
         ("bool",
         [8,14,25,26,27,29,50,51,52,53,55,57,62,63,70,91,98,104,123,128,
          146]),("cache",[319]),("combin",[7,8,19]),("fcp",[13,15]),
         ("list",[29,291]),
         ("numeral",[0,3,4,5,6,7,8,9,15,16,17,21,28,32,34,35,39,40]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18,19,20]),
         ("words",
         [5,58,69,143,156,160,300,321,322,324,326,328,340,353,377,384,480,
          481,482,498,665,668])]),["DISK_THM"]),
       [read"%93%8%93%11%92%65%97%34%97%36%154%225%136%256%246$3@%232%200%155%155%224@@@@@@$4@@%136%255%246$3@%232%200%155%155%224@@@@@@%232%200%155%155%224@@@@@@%255%246$4@%232%200%155%155%224@@@@@@%232%200%155%155%224@@@@@@@@%136%254$3@%246$4@%232%200%155%155%224@@@@@@@%136%255%246$3@%232%200%155%155%224@@@@@@%232%200%155%155%224@@@@@@%255%246$4@%232%200%155%155%224@@@@@@%232%200%155%155%224@@@@@@@@@%154%146$0@%264%116$4@%126$1@$2@@@@@%147%235%110$3@$0@@@%235%110$3@$1@@@@@|@|@|@|@|@"])
  fun op wrtBck_dirty_thm x = x
    val op wrtBck_dirty_thm =
    DT(((("CacheLib",11),
        [("arithmetic",[19,22,26,27,46,63,71,73,95,125,178,181,185]),
         ("arm_step",[30]),("bit",[2]),
         ("bool",[14,25,27,31,35,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[183,236,325,332]),("combin",[7,12,19]),
         ("fcp",[60,61,62,63]),("numeral",[0,3,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[16]),
         ("pair",[8,9,16]),("rich_list",[345]),
         ("words",[1,111,143,203,206,409,665,668])]),["DISK_THM"]),
       [read"%93%29%93%62%97%46%96%25%99%38%89%60%192%213%26%47%154%139$3@%227%238@@@%99%82%154%139$0@$4@@%265%195%112$8@%109$7@$2@@@@@|@@||@@%221%113$5@%118$4@%128$3@%124$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op wrtBck_memory_thm x = x
    val op wrtBck_memory_thm =
    DT(((("CacheLib",12),
        [("CacheLib",[0,2,6]),
         ("arithmetic",
         [19,22,24,25,26,27,41,46,59,62,63,71,73,75,77,78,84,95,99,125,130,
          177,178,181,182,185,188,204,205,215,220,222,273]),
         ("arm_step",[30]),("bit",[2]),("bitstring",[71]),
         ("blast",[0,1,3,4,9]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,70,91,95,98,
          100,103,104,123,128,146]),("cache",[183,236,319,325,332,338]),
         ("combin",[7,8,11,12,15,16,19,33,35]),
         ("fcp",[13,15,19,38,39,60,61,62,63]),("list",[23,28,29,291]),
         ("marker",[6,9]),("num",[9]),
         ("numeral",
         [0,3,4,5,6,7,8,9,12,15,16,17,18,21,24,28,32,33,34,35,39,40]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[16]),
         ("pair",[4,8,9,45,46]),("pred_set",[18,88]),
         ("rich_list",[18,19,58,282,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18]),
         ("words",
         [1,5,33,49,51,58,69,90,101,102,111,114,140,143,144,150,156,192,
          200,203,205,206,228,247,300,321,322,324,326,328,339,340,353,377,
          384,394,407,409,426,456,608,621,641,644,649,661,665,
          668])]),["DISK_THM"]),
       [read"%93%29%93%62%97%46%96%25%89%60%99%38%192%213%26%47%188%58%188%33%154%139$4@%227%238@@@%99%82%154%139$0@$5@@%182%43%154%228@%154%195%112$11@%109$10@$8@@@@%141%169%114$11@%119$10@%131$1@$5@@@@@%239%235%110$0@$4@@@@@@|@%261%258$9@%102%102$2@$1@@%200%156%224@@@@@%261%258$10@%102$1@%200%156%224@@@@@%258%232$0@@%200%156%224@@@@@@@|@@|@%240%163%158%226$4@@@@@|@%241%257%247%159%157%226$3@@@@%234%200%155%224@@@@@@@||@@%221%113$5@%118$4@%128$3@%124$2@$0@@@@@$1@@|@|@|@|@|@|@"])
  fun op WriteBackLine_Dont_change_cache_value x = x
    val op WriteBackLine_Dont_change_cache_value =
    DT(((("CacheLib",14),
        [("CacheLib",[13]),
         ("arithmetic",
         [19,22,25,26,27,46,63,71,73,95,125,178,181,182,185]),
         ("arm_step",[30]),("bit",[2]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,128,
          146]),("cache",[236,325]),("combin",[7,8,11,12,15,16,19,33,35]),
         ("fcp",[60,61,62,63]),("list",[23,28]),("marker",[6,9]),
         ("num",[9]),("numeral",[0,3,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[10]),
         ("pair",[4,8,9,45,46]),("rich_list",[18,19,58,288,345]),
         ("words",[1,111,203,206])]),["DISK_THM"]),
       [read"%93%29%93%62%97%46%96%25%89%60%99%38%192%213%26%5%192%213%27%5%188%58%188%33%154%139$6@%227%238@@@%149%161$5$11@@$10@@%161$3$11@@$10@@@|@%240%163%158%226$6@@@@@|@%241%257%247%159%157%226$5@@@@%234%200%155%224@@@@@@@||@@%223%113$7@%118$6@%128$5@%124$4@$2@@@@@@||@@%221%113$5@%118$4@%128$3@%124$2@$0@@@@@$1@@|@|@|@|@|@|@"])
  fun op WriteBackLine_CellRead_dcEQdc'_thm x = x
    val op WriteBackLine_CellRead_dcEQdc'_thm =
    DT(((("CacheLib",15),
        [("CacheLib",[13,14]),("arithmetic",[19,71,125]),("bit",[2]),
         ("bool",[8,14,25,31,52,55,57,62,63,104,123,128,146]),
         ("cache",[183,236,338]),("combin",[7,8,11,12,15,16,19,35]),
         ("fcp",[60,61,62,63]),("marker",[6,9]),
         ("numeral",[0,3,5,7,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[16]),
         ("pair",[7,8,16,45,46]),("words",[1,111])]),["DISK_THM"]),
       [read"%93%29%93%62%97%46%96%25%89%60%99%38%192%213%26%5%154%139$2@%227%238@@@%99%82%154%139$0@$3@@%141%169%114$8@%119$7@%131$0@$5@@@@@%169%114$8@%119$7@%131$0@$2@@@@@@|@@||@@%221%113$5@%118$4@%128$3@%124$2@$0@@@@@$1@@|@|@|@|@|@|@"])
  fun op wrtBckLine_dcEQpm'_thm x = x
    val op wrtBckLine_dcEQpm'_thm =
    DT(((("CacheLib",16),
        [("CacheLib",[12,15]),("arithmetic",[19,71,125]),("bit",[2]),
         ("bool",[8,14,57,62,63,104,123]),("combin",[8,11,15,16,33,35]),
         ("fcp",[60,61,62,63]),("marker",[6,9]),
         ("numeral",[0,3,5,7,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16,45,46]),
         ("words",[1,111,203,206])]),["DISK_THM"]),
       [read"%93%29%93%62%97%46%96%25%99%38%89%60%192%213%26%47%188%58%188%33%154%139$5@%227%238@@@%99%82%154%139$0@$6@@%182%43%154%228@%154%195%112$11@%109$10@$8@@@@%141%169%114$11@%119$10@%131$1@$8@@@@@%239%235%110$0@$4@@@@@@|@%261%258$9@%102%102$2@$1@@%200%156%224@@@@@%261%258$10@%102$1@%200%156%224@@@@@%258%232$0@@%200%156%224@@@@@@@|@@|@%240%163%158%226$3@@@@@|@%241%257%247%159%157%226$2@@@@%234%200%155%224@@@@@@@||@@%221%113$5@%118$4@%128$3@%124$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op WriteBackLine_Dont_change_Mem_IfNotDirty_thm x = x
    val op WriteBackLine_Dont_change_Mem_IfNotDirty_thm =
    DT(((("CacheLib",17),
        [("CacheLib",[13]),("arithmetic",[26,27]),
         ("bool",[25,26,27,31,55,57,104,123,128,146]),("cache",[325,332]),
         ("combin",[7,8,11,15,16,19,33,35]),("marker",[6,9]),
         ("pair",[4,8,9,45,46]),("words",[203,206])]),["DISK_THM"]),
       [read"%93%29%93%62%97%46%96%25%89%60%99%38%192%213%26%47%192%213%27%49%188%58%188%33%154%265%195%112$11@%109$10@$8@@@@@%93%44%141%239%235%110$0@$5@@@@%239%235%110$0@$3@@@@|@@|@%240%163%158%226$6@@@@@|@%241%257%247%159%157%226$5@@@@%234%200%155%224@@@@@@@||@@%223%113$7@%118$6@%128$5@%124$4@$2@@@@@@||@@%221%113$5@%118$4@%128$3@%124$2@$0@@@@@$1@@|@|@|@|@|@|@"])
  fun op wrtBckLine_pmEQpm'IfNotDirty_thm x = x
    val op wrtBckLine_pmEQpm'IfNotDirty_thm =
    DT(((("CacheLib",18),
        [("CacheLib",[13,17]),("bool",[8,25,26,27,31,52,53,55,57,104,123]),
         ("combin",[8,11,15,16,19,35]),("marker",[6,9]),
         ("pair",[7,9,16,45,46])]),["DISK_THM"]),
       [read"%93%29%93%62%97%46%96%25%99%38%89%60%192%213%4%47%154%265%195%112$7@%109$6@$4@@@@@%93%44%141%239%235%110$0@$6@@@@%239%235%110$0@$1@@@@|@@||@@%221%113$5@%118$4@%128$3@%124$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op writBckLine_NotchgTag'_thm x = x
    val op writBckLine_NotchgTag'_thm =
    DT(((("CacheLib",19),
        [("arithmetic",
         [19,22,25,26,27,46,63,71,73,95,125,178,181,182,185]),
         ("arm_step",[30]),("bit",[2]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,128,
          146]),("cache",[236,325]),("combin",[7,12,19]),
         ("fcp",[60,61,62,63]),("list",[23,28]),("num",[9]),
         ("numeral",[0,3,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),
         ("words",[1,111,203,206])]),["DISK_THM"]),
       [read"%93%29%93%62%97%46%96%25%99%38%93%63%89%60%192%213%26%47%154%265%142$7@$3@@@%154%139$4@%227%238@@@%149%161$5$8@@$3@@%161$1$8@@$3@@@@||@@%221%113$6@%118$5@%128$4@%124$3@$2@@@@@$0@@|@|@|@|@|@|@|@"])
  fun op writBckLine_NotchgSidx'_thm x = x
    val op writBckLine_NotchgSidx'_thm =
    DT(((("CacheLib",20),
        [("arithmetic",
         [19,22,25,26,27,46,63,71,73,95,125,178,181,182,185]),
         ("arm_step",[30]),("bit",[2]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,128,
          146]),("cache",[325]),("combin",[7,19]),("fcp",[60,61,62,63]),
         ("list",[23,28]),("num",[9]),("numeral",[0,3,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),
         ("words",[1,111,203,206])]),["DISK_THM"]),
       [read"%93%29%93%30%93%62%93%63%97%46%96%25%89%60%99%38%192%213%26%47%154%139$2@%227%238@@@%154%265%142$9@$8@@@%149%161$4$8@@$6@@%161$1$8@@$6@@@@||@@%221%113$7@%118$5@%128$3@%124$2@$0@@@@@$1@@|@|@|@|@|@|@|@|@"])
  fun op cellFill_memeq_thm x = x
    val op cellFill_memeq_thm =
    DT(((("CacheLib",21),
        [("bool",[25,31,35,55,57,104,128,146]),("cache",[329]),
         ("combin",[7,19]),("words",[144])]),["DISK_THM"]),
       [read"%99%82%93%43%97%46%181%61%141$0@%239%235%110%261$2@%258%232$3@@%200%156%224@@@@@$1@@@@|@%168%132$2@%110$1@$0@@@%232$2@@@|@|@|@"])
  fun op linefill_memeq_thm x = x
    val op linefill_memeq_thm =
    DT(((("CacheLib",22),
        [("arithmetic",
         [19,22,24,25,26,27,41,46,59,62,63,71,73,81,93,95,99,125,177,178,
          181,182,185,222]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),("cache",[183,186,189,329,330]),
         ("combin",[7,8,11,12,15,16,19,33,35]),("fcp",[60,61,62,63]),
         ("list",[20,23,28,48,56,105]),("marker",[6,9]),("num",[9]),
         ("numeral",[0,3,5,6,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[16]),
         ("pair",[4,8,9,45,46]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,144,192,200,203,206,407,668])]),["DISK_THM"]),
       [read"%98%28%93%29%93%62%97%46%96%25%99%38%89%60%194%216%55%7%188%58%188%33%154%139$5@%227%238@@@%99%82%154%139$0@$6@@%182%43%141%203%207$5$10@@@%232$1@@@%239%235%110$0@$9@@@@|@%261%258$9@%102%102$2@$1@@%200%156%224@@@@@%261%258$10@%102$1@%200%156%224@@@@@%258%232$0@@%200%156%224@@@@@@@|@@|@%240%163%158%226$3@@@@@|@%241%257%247%159%157%226$2@@@@%234%200%155%224@@@@@@@||@@%196%130$6@%113$5@%118$4@%128$3@%124$2@$1@@@@@@$0@@|@|@|@|@|@|@|@"])
  fun op w2vWordsEq_impl_wordsEq x = x
    val op w2vWordsEq_impl_wordsEq =
    DT(((("CacheLib",23),
        [("arithmetic",[63,134,273]),("bitstring",[19]),
         ("bool",[14,25,26,50,52,53,55,57,62,63,104,123]),("combin",[19]),
         ("fcp",[13]),("list",[29,48,282,291,298]),
         ("numeral",[3,7,15,16,17]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,12,15,17,18]),("words",[661])]),["DISK_THM"]),
       [read"%92%77%92%65%154%147%242$1@@%242$0@@@%141$1@$0@@|@|@"])
  fun op neg_word_msb x = x
    val op neg_word_msb =
    DT(((("CacheLib",24),
        [("bool",[13,25,26,27,50,51,53,57,62,104,123]),
         ("sat",[11,12,13,15,17,18,23]),
         ("words",[29,47,450,482,516,517,521,526])]),["DISK_THM"]),
       [read"%90%76%154%251$0@%231%137@@@%265%260$0@@@|@"])
  fun op si_ge_1_thm x = x
    val op si_ge_1_thm =
    DT(((("CacheLib",25),
        [("arithmetic",
         [19,25,27,41,46,59,71,73,95,125,148,178,181,185,215,222,273,280]),
         ("bit",[0,2,5,7,21,42,55,123]),("blast",[0,1,3,4,9]),
         ("bool",
         [14,25,26,27,29,35,50,51,52,53,55,57,62,63,95,100,103,104,123]),
         ("combin",[19]),("fcp",[13,15,60,61,62,63]),("list",[29,291]),
         ("numeral",[0,3,4,5,6,7,8,12,15,16,17,21,28]),
         ("numeral_bit",[5,21,22,23,24,25,26,27,28,29,32,33]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18]),
         ("words",
         [1,5,47,58,67,111,114,140,144,152,164,165,300,313,455,
          542])]),["DISK_THM"]),
       [read"%94%78%154%253$0@%234%200%155%224@@@@@%253%257%247$0@%234%200%155%224@@@@@@%234%200%155%224@@@@@|@"])
  fun op wIdx_extract_thm x = x
    val op wIdx_extract_thm =
    DT(((("CacheLib",26),
        [("arithmetic",[273]),("bitstring",[20,39,53,71,101,102]),
         ("bool",[14,25,26,31,35,50,52,53,55,57,62,63,104,123]),
         ("cache",[322]),("combin",[19]),("fcp",[13,15]),("list",[29,291]),
         ("numeral",[3,7,15,16,17]),("rich_list",[18,282,345]),
         ("words",[228,665])]),["DISK_THM"]),
       [read"%93%43%89%60%182%81%142$0@%250%102%240%163%158%226$1@@@@@%200%155%224@@@@%200%156%224@@@$2@@|@%244$1@$0@@|@|@"])
  fun op wi_lt_line_size_thm x = x
    val op wi_lt_line_size_thm =
    DT(((("CacheLib",27),
        [("CacheLib",[26]),
         ("arithmetic",[24,25,27,41,46,62,73,95,132,178,181,182,185,202]),
         ("bool",[8,25,31,35,51,53,55,57,62,95,100,103,104]),
         ("cache",[323]),("combin",[19]),("numeral",[3,5,8]),("pair",[16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),("words",[268])]),["DISK_THM"]),
       [read"%91%68%93%43%89%60%190%211%29%209%62%82%188%40%139$1@%135%171%200%156%224@@@$0@@%200%155%224@@@@|@%240%163%158%226$3@@@@@||@|@@%229%105$2@$1@@$0@@|@|@|@"])
  fun op wIdx_lt_dimword48_thm x = x
    val op wIdx_lt_dimword48_thm =
    DT(((("CacheLib",28),
        [("CacheLib",[26]),
         ("arithmetic",
         [18,24,25,27,41,46,59,73,95,132,177,178,181,182,185,186,252,254,
          274,282]),
         ("bool",[8,25,31,35,42,51,52,53,55,57,62,95,100,103,104,123]),
         ("cache",[323]),("combin",[19]),("numeral",[0,3,5,7,8,9,32,33]),
         ("pair",[16]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[150,268,608])]),["DISK_THM"]),
       [read"%91%68%93%43%89%60%190%211%29%209%62%82%148$0@%197$0@%200%156%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%155%224@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@||@|@@%229%105$2@$1@@$0@@|@|@|@"])
  fun op si_extract_thm x = x
    val op si_extract_thm =
    DT(((("CacheLib",29),
        [("arithmetic",[19,26,215,273]),
         ("bitstring",[20,39,53,71,101,102]),("blast",[9]),
         ("bool",[14,25,26,27,31,35,50,51,52,53,55,57,62,63,104,123]),
         ("cache",[320]),("combin",[8,11,15,16,19,33,35]),("fcp",[13,15]),
         ("list",[29,291]),("marker",[6]),
         ("numeral",[3,6,7,15,16,17,21,28]),("pred_set",[18,88]),
         ("rich_list",[18,282,345]),
         ("words",[5,58,228,300,665])]),["DISK_THM"]),
       [read"%91%68%93%43%89%60%182%54%188%15%188%52%142$2@%250%102$0@$1@@%102$1@%200%155%224@@@@$4@@|@%241%257%247%159%157%226$2@@@@%234%200%155%224@@@@@@@|@%102%240%163%158%226$1@@@@@%200%155%224@@@@|@%236%105$2@$1@@$0@@|@|@|@"])
  fun op word_log2_lt_adrSize x = x
    val op word_log2_lt_adrSize =
    DT(((("CacheLib",30),
        [("arithmetic",[19,41,46,59,71,73,95,125,178,185,222]),("bit",[2]),
         ("bool",[14,25,35,53,57,62,63,95,100,103,104]),
         ("fcp",[60,61,62,63]),("numeral",[0,3,4,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),
         ("words",[1,67,111,140,313])]),["DISK_THM"]),
       [read"%94%66%154%265%144$0@%234%137@@@@%138%241%257$0@@@%200%156%155%155%155%156%224@@@@@@@@|@"])
  fun op tag_extract_thm x = x
    val op tag_extract_thm =
    DT(((("CacheLib",31),
        [("arithmetic",[19,27,215,273]),
         ("bitstring",[20,39,53,71,101,102]),("blast",[9]),
         ("bool",[14,25,26,27,35,50,51,52,53,55,57,62,63,104,123]),
         ("cache",[321]),("combin",[8,11,15,16,19,33,35]),("fcp",[13,15]),
         ("list",[29,291]),("marker",[6]),
         ("numeral",[3,6,7,15,16,17,21,28]),("pred_set",[18,88]),
         ("rich_list",[18,282,345]),
         ("words",[5,58,228,300,665])]),["DISK_THM"]),
       [read"%91%68%93%43%89%60%182%64%188%50%188%16%188%59%142$3@%250%135$2@%200%155%224@@@@%102%102$1@$0@@%200%155%224@@@@$5@@|@%241%257%247%159%157%226$3@@@@%234%200%155%224@@@@@@@|@%102%240%163%158%226$2@@@@@%200%155%224@@@@|@%180%243$2@@@|@%237%105$2@$1@@$0@@|@|@|@"])
  fun op lineSpec_thm x = x
    val op lineSpec_thm =
    DT(((("CacheLib",32),
        [("CacheLib",[0,25,26,29,31]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,73,93,95,125,132,148,177,178,181,182,185,
          204,215,273,274,280,300,309,317]),("bit",[0,5,7,21,42,55]),
         ("bitstring",[53]),
         ("bool",
         [14,25,26,27,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,104,
          123,128,146]),("cache",[323]),("combin",[8,19]),
         ("fcp",[13,15,60,61,62,63]),("list",[29,291]),("marker",[6]),
         ("numeral",[0,3,5,6,7,8,12,15,16,17,21,24,28]),
         ("numeral_bit",[5,22,23,24,26,27,29]),("pair",[7,8,9,16]),
         ("pred_set",[18,88]),("prim_rec",[4]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18]),
         ("words",
         [5,32,33,49,51,58,90,141,150,152,164,203,205,206,228,300,435,455,
          605,608,665])]),["DISK_THM"]),
       [read"%91%68%93%43%89%60%190%211%29%209%62%82%188%41%188%40%154%228@%142$6@%261%261%258$3@%102%102$1@$0@@%200%156%224@@@@@%258$4@%102$0@%200%156%224@@@@@@%258%232$2@@%200%156%224@@@@@@|@%240%163%158%226$4@@@@@|@%241%257%247%159%157%226$3@@@@%234%200%155%224@@@@@@@||@|@@%229%105$2@$1@@$0@@|@|@|@"])
  fun op lineSpecEq_thm x = x
    val op lineSpecEq_thm =
    DT(((("CacheLib",33),
        [("arithmetic",[26,27]),("bitstring",[53]),
         ("bool",[14,25,31,35,50,53,55,57,63]),("cache",[320,321,322,323]),
         ("combin",[19]),("numeral",[3,5,7,15,16]),("pair",[4]),
         ("words",[149,665])]),["DISK_THM"]),
       [read"%91%68%93%43%91%69%89%60%151%229%105$3@$2@@$0@@%229%105$1@$2@@$0@@|@|@|@|@"])
  fun op fill_dcEQpm_thm x = x
    val op fill_dcEQpm_thm =
    DT(((("CacheLib",34),
        [("CacheLib",[0,22,32]),("arithmetic",[19,26,27,71,125,203]),
         ("bit",[2]),
         ("bool",[8,14,25,26,27,31,52,55,57,62,63,104,123,128,146,168]),
         ("cache",[236,237,239,242,337,338]),("combin",[7,12,19,21]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7]),
         ("pair",[7,8,9,16]),("words",[1,111,203,205,206])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%89%60%192%213%26%47%190%211%29%209%62%82%154%139%135%171%200%156%224@@@%240%163%158%226$5@@@@@@%200%155%224@@@@%227%238@@@%154%228@%154%139$0@%135%171%200%156%224@@@%240%163%158%226$5@@@@@@%200%155%224@@@@@%141%169%114$2@%119$1@%131$0@$4@@@@@%239%235%110$8@$3@@@@@@@||@|@@%229%105$6@$5@@$2@@||@@%175%107$4@%117$3@%127$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op shift_add_thm x = x
    val op shift_add_thm =
    DT(((("CacheLib",35),
        [("arithmetic",[26]),("bool",[25,35,55,57]),
         ("words",[206,394,426])]),["DISK_THM"]),
       [read"%93%79%93%80%99%38%99%35%142%261%258$3@%102$1@$0@@@%258$2@$0@@@%258%261%258$3@$1@@$2@@$0@@|@|@|@|@"])
  fun op writeback_mem_eq_thm x = x
    val op writeback_mem_eq_thm =
    DT(((("CacheLib",36),
        [("CacheLib",[0,7,32]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,73,95,177,178,182,185,204,215,220,273,
          274]),("bitstring",[71]),("blast",[0,1,3,4,9]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,
          104,123,128,146]),("cache",[319,324]),("combin",[7,19]),
         ("fcp",[13,15]),("list",[29,291]),("marker",[6]),
         ("numeral",[0,3,5,6,7,8,15,16,17,21,28]),("pair",[7,16]),
         ("pred_set",[18,88]),("rich_list",[18,282,345]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18,23]),
         ("words",
         [5,32,58,69,143,203,205,206,228,300,321,322,324,326,340,353,384,
          394,426,665,668])]),["DISK_THM"]),
       [read"%93%43%91%68%97%46%88%57%89%60%93%30%93%63%99%83%190%211%29%209%62%82%184%47%188%41%188%40%154%265%142%258%261%258$7@$1@@$8@@%102$0@%200%156%224@@@@@%258%261%258$4@$1@@$5@@%102$0@%200%156%224@@@@@@@%154%228@%141%239%235%110$13@$11@@@@%239%235%110$13@$2@@@@@@|@%240%163%158%226$8@@@@@|@%241%257%247%159%157%226$7@@@@%234%200%155%224@@@@@@@|@%220%115$5@%120$4@%133$3@%125$8@$7@@@@@$6@@||@|@@%229%105$6@$7@@$3@@|@|@|@|@|@|@|@|@"])
  fun op lineSpec_eq_thm x = x
    val op lineSpec_eq_thm =
    DT(((("CacheLib",37),
        [("CacheLib",[0]),("arithmetic",[26,27]),("bitstring",[53]),
         ("bool",[14,25,31,50,53,55,57,63]),("cache",[320,321,322,323]),
         ("combin",[19]),("numeral",[3,5,7,15,16]),("pair",[4]),
         ("words",[149,205,206,665])]),["DISK_THM"]),
       [read"%89%51%89%53%93%43%91%68%154%228@%151%229%105$0@$1@@$3@@%229%105$0@$1@@$2@@@|@|@|@|@"])
  fun op writebackline_mem_eq_thm x = x
    val op writebackline_mem_eq_thm =
    DT(((("CacheLib",38),
        [("CacheLib",[0,36,37]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185]),
         ("arm_step",[30]),("bit",[2]),
         ("bool",
         [2,8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,98,99,100,
          103,104,123,128,146]),("cache",[324,325]),
         ("combin",[1,3,5,7,19,20]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),("numeral",[0,3,5,7,8,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",[1,111,192,200,203,205,206,394,407,426])]),["DISK_THM"]),
       [read"%93%30%93%63%97%46%96%25%99%38%91%68%93%43%89%60%190%211%29%209%62%82%192%213%26%47%188%41%188%40%154%265%142%258%261%258$13@$1@@$14@@%102$0@%200%156%224@@@@@%258%261%258$5@$1@@$6@@%102$0@%200%156%224@@@@@@@%154%139$10@%227%238@@@%154%228@%141%239%235%110$8@$12@@@@%239%235%110$8@$2@@@@@@@|@%240%163%158%226$6@@@@@|@%241%257%247%159%157%226$5@@@@%234%200%155%224@@@@@@@||@@%221%113$10@%118$9@%128$8@%124$7@$6@@@@@$3@@||@|@@%229%105$2@$1@@$0@@|@|@|@|@|@|@|@|@"])
  fun op fill_pm'EQpm_diffIn_thm x = x
    val op fill_pm'EQpm_diffIn_thm =
    DT(((("CacheLib",39),
        [("CacheLib",[0,5,38]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,204,
          254,274,282]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,
          104,123]),("cache",[331,337]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10]),
         ("pair",[7,8,9,16]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",
         [1,111,150,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%192%213%26%47%154%228@%154%265%176%106$4@%109$3@$5@@@$2@@@%141%239%235%110$3@$0@@@@%239%235%110$3@$6@@@@@@||@@%175%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_dcEQpm'_thm x = x
    val op CacheClean_dcEQpm'_thm =
    DT(((("CacheLib",40),
        [("CacheLib",[0,5,16,27,32]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,204,
          254,274,282]),("bit",[2]),
         ("bool",
         [8,14,25,31,35,42,50,51,52,53,54,55,57,62,63,92,95,99,100,103,104,
          123,128,146]),("cache",[336]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [1,111,150,203,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%30%209%63%83%190%211%29%209%62%82%188%41%188%40%154%176%106$16@%109$15@$13@@@$10@@%154%228@%154%195%112$7@%109$6@$13@@@@%154%142%258%261%258$6@$1@@$7@@%102$0@%200%156%224@@@@@%258%261%258$3@$1@@$4@@%102$0@%200%156%224@@@@@@%141%169%114$7@%119$6@%131$5@$13@@@@@%239%235%110$11@$8@@@@@@@@|@%240%163%158%226$9@@@@@|@%241%257%247%159%157%226$8@@@@%234%200%155%224@@@@@@@||@|@@%229%105$11@$10@@$5@@||@|@@%229%105$4@$3@@$2@@||@@%164%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_dcEQdc'_thm x = x
    val op CacheClean_dcEQdc'_thm =
    DT(((("CacheLib",41),
        [("CacheLib",[0,5,15,27]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,204,
          254,274,282]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,54,55,57,62,63,92,95,99,
          100,103,104,123,128]),("cache",[336]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [1,111,150,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%30%209%63%83%190%211%29%209%62%82%188%41%188%40%154%228@%154%142%258%261%258$6@$1@@$7@@%102$0@%200%156%224@@@@@%258%261%258$3@$1@@$4@@%102$0@%200%156%224@@@@@@%141%169%114$7@%119$6@%131$5@$13@@@@@%169%114$7@%119$6@%131$5@$9@@@@@@@|@%240%163%158%226$9@@@@@|@%241%257%247%159%157%226$8@@@@%234%200%155%224@@@@@@@||@|@@%229%105$11@$10@@$5@@||@|@@%229%105$4@$3@@$2@@||@@%164%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_dcEQdc'_diffMsb_thm x = x
    val op CacheClean_dcEQdc'_diffMsb_thm =
    DT(((("CacheLib",42),
        [("CacheLib",[19,20]),
         ("arithmetic",
         [19,26,27,41,46,59,71,73,95,125,178,181,185,203,254,282]),
         ("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,
          123,128]),("cache",[331,336,338]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,206,394,426,608])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%30%209%63%83%190%211%29%209%62%82%188%41%188%40%154%228@%154%265%142%258%261%258$6@$1@@$7@@%102$0@%200%156%224@@@@@%258%261%258$3@$1@@$4@@%102$0@%200%156%224@@@@@@@%141%169%114$7@%119$6@%131$5@$13@@@@@%169%114$7@%119$6@%131$5@$9@@@@@@@|@%240%163%158%226$9@@@@@|@%241%257%247%159%157%226$8@@@@%234%200%155%224@@@@@@@||@|@@%229%105$11@$10@@$5@@||@|@@%229%105$4@$3@@$2@@||@@%164%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_hitDc'_diffAddr_thm x = x
    val op CacheClean_hitDc'_diffAddr_thm =
    DT(((("CacheLib",43),
        [("CacheLib",[19,20]),
         ("arithmetic",
         [19,26,27,41,46,59,71,73,95,125,178,181,185,203,254,282]),
         ("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,
          123,128,146]),("cache",[331,336]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,206,394,426,608])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%188%41%188%40%192%213%26%47%154%265%142%258%261%258$5@$3@@$6@@%102$2@%200%156%224@@@@@%258%261%258$8@$3@@$9@@%102$2@%200%156%224@@@@@@@%154%176%106$16@%109$15@$13@@@$10@@%154%176%106$12@%109$11@$13@@@$10@@%176%106$12@%109$11@$1@@@$10@@@@||@@%164%107$14@%117$13@%127$12@$11@@@@$8@@|@%240%163%158%226$7@@@@@|@%241%257%247%159%157%226$6@@@@%234%200%155%224@@@@@@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_keepMiss_diffMsb_thm x = x
    val op CacheClean_keepMiss_diffMsb_thm =
    DT(((("CacheLib",44),
        [("CacheLib",[19,20]),
         ("arithmetic",
         [19,26,27,41,46,59,71,73,95,125,178,181,185,203,254,282]),
         ("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,
          123,128,146]),("cache",[331,336]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[14,22]),
         ("pair",[7,8,16]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,206,394,426,608])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%188%41%188%40%192%213%26%47%154%265%142%258%261%258$5@$3@@$6@@%102$2@%200%156%224@@@@@%258%261%258$8@$3@@$9@@%102$2@%200%156%224@@@@@@@%154%176%106$16@%109$15@$13@@@$10@@%154%265%176%106$12@%109$11@$13@@@$10@@@%265%176%106$12@%109$11@$1@@@$10@@@@@||@@%164%107$14@%117$13@%127$12@$11@@@@$8@@|@%240%163%158%226$7@@@@@|@%241%257%247%159%157%226$6@@@@%234%200%155%224@@@@@@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheClean_pmEqpm'_diffMsb_thm x = x
    val op CacheClean_pmEqpm'_diffMsb_thm =
    DT(((("CacheLib",45),
        [("CacheLib",[38]),
         ("arithmetic",
         [19,26,27,41,46,59,71,73,95,125,178,181,185,203,254,282]),
         ("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128]),("cache",[331,336]),("combin",[19]),("fcp",[60,61,62,63]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,206,394,426,608])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%188%41%188%40%192%213%26%47%154%265%142%258%261%258$5@$3@@$6@@%102$2@%200%156%224@@@@@%258%261%258$8@$3@@$9@@%102$2@%200%156%224@@@@@@@%154%228@%141%239%235%110$11@$14@@@@%239%235%110$11@$0@@@@@@||@@%164%107$14@%117$13@%127$12@$11@@@@$8@@|@%240%163%158%226$7@@@@@|@%241%257%247%159%157%226$6@@@@%234%200%155%224@@@@@@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_dcEQpm'_thm x = x
    val op CacheInvalidate_dcEQpm'_thm =
    DT(((("CacheLib",46),
        [("CacheLib",[0,5,16,27,32]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,204,
          254,274,282]),("bit",[2]),
         ("bool",
         [8,14,25,31,35,42,50,51,52,53,54,55,57,62,63,92,95,99,100,103,104,
          123,128,146]),("cache",[335]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [1,111,150,203,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%188%41%188%40%154%176%106$16@%109$15@$13@@@$10@@%154%228@%154%195%112$4@%109$3@$13@@@@%154%142%258%261%258$3@$1@@$4@@%102$0@%200%156%224@@@@@%258%261%258$6@$1@@$7@@%102$0@%200%156%224@@@@@@%141%169%114$4@%119$3@%131$2@$13@@@@@%239%235%110$11@$8@@@@@@@@|@%240%163%158%226$9@@@@@|@%241%257%247%159%157%226$8@@@@%234%200%155%224@@@@@@@||@|@@%229%105$7@$6@@$5@@||@|@@%229%105$8@$7@@$2@@||@@%165%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_missDc'_thm x = x
    val op CacheInvalidate_missDc'_thm =
    DT(((("CacheLib",47),
        [("bool",[25,26,27,31,52,55,57,62,104,123,128,146]),
         ("cache",[236,242,328,331,335]),("combin",[7,12,19]),
         ("option",[22]),("pair",[7,8,16])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%89%60%192%213%26%47%154%176%106$6@%109$5@$3@@@$2@@%265%176%106$6@%109$5@$1@@@$2@@@||@@%165%107$4@%117$3@%127$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op CacheInvalidate_hitDc'_diffAddr_thm x = x
    val op CacheInvalidate_hitDc'_diffAddr_thm =
    DT(((("CacheLib",48),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[236,242,325,328,331,335]),("combin",[7,12,19]),
         ("list",[23,28]),("marker",[6]),("num",[9]),
         ("numeral",[3,5,7,8,16]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),("state_transformer",[9]),
         ("words",[203,206,394,426])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%188%41%188%40%192%213%26%47%154%265%142%258%261%258$5@$3@@$6@@%102$2@%200%156%224@@@@@%258%261%258$8@$3@@$9@@%102$2@%200%156%224@@@@@@@%154%176%106$16@%109$15@$13@@@$10@@%154%176%106$12@%109$11@$13@@@$10@@%176%106$12@%109$11@$1@@@$10@@@@||@@%165%107$14@%117$13@%127$12@$11@@@@$8@@|@%240%163%158%226$7@@@@@|@%241%257%247%159%157%226$6@@@@%234%200%155%224@@@@@@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_dcEQdc'_diffAddr_thm x = x
    val op CacheInvalidate_dcEQdc'_diffAddr_thm =
    DT(((("CacheLib",49),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[236,242,325,328,331,335,338]),("combin",[7,12,19]),
         ("list",[23,28]),("marker",[6]),("num",[9]),
         ("numeral",[3,5,7,8,16]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),("state_transformer",[9]),
         ("words",[203,206,394,426])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%188%41%188%40%192%213%26%47%154%265%142%258%261%258$5@$3@@$6@@%102$2@%200%156%224@@@@@%258%261%258$8@$3@@$9@@%102$2@%200%156%224@@@@@@@%154%176%106$16@%109$15@$13@@@$10@@%154%176%106$12@%109$11@$13@@@$10@@%141%169%114$6@%119$5@%131$4@$13@@@@@%169%114$6@%119$5@%131$4@$1@@@@@@@@||@@%165%107$14@%117$13@%127$12@$11@@@@$8@@|@%240%163%158%226$7@@@@@|@%241%257%247%159%157%226$6@@@@%234%200%155%224@@@@@@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_keepMiss_diffMsb_thm x = x
    val op CacheInvalidate_keepMiss_diffMsb_thm =
    DT(((("CacheLib",50),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[236,242,325,328,331,335]),("combin",[7,12,19]),
         ("list",[23,28]),("marker",[6]),("num",[9]),
         ("numeral",[3,5,7,8,16]),("option",[22,28]),("pair",[7,8,9,16]),
         ("rich_list",[18,19,58,288,345]),("state_transformer",[9]),
         ("words",[203,206,394,426])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%188%41%188%40%192%213%26%47%154%265%142%258%261%258$5@$3@@$6@@%102$2@%200%156%224@@@@@%258%261%258$8@$3@@$9@@%102$2@%200%156%224@@@@@@@%154%176%106$16@%109$15@$13@@@$10@@%154%265%176%106$12@%109$11@$13@@@$10@@@%265%176%106$12@%109$11@$1@@@$10@@@@@||@@%165%107$14@%117$13@%127$12@$11@@@@$8@@|@%240%163%158%226$7@@@@@|@%241%257%247%159%157%226$6@@@@%234%200%155%224@@@@@@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheInvalidate_pmEqpm'_diffMsb_thm x = x
    val op CacheInvalidate_pmEqpm'_diffMsb_thm =
    DT(((("CacheLib",51),
        [("CacheLib",[38]),
         ("arithmetic",
         [19,26,27,41,46,59,71,73,95,125,178,181,185,203,254,282]),
         ("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),("cache",[242,328,331,335]),("combin",[7,19]),
         ("fcp",[60,61,62,63]),("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,8,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,206,394,426,608])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%188%41%188%40%192%213%26%47%154%265%142%258%261%258$5@$3@@$6@@%102$2@%200%156%224@@@@@%258%261%258$8@$3@@$9@@%102$2@%200%156%224@@@@@@@%154%228@%141%239%235%110$11@$14@@@@%239%235%110$11@$0@@@@@@||@@%165%107$14@%117$13@%127$12@$11@@@@$8@@|@%240%163%158%226$7@@@@@|@%241%257%247%159%157%226$6@@@@%234%200%155%224@@@@@@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op msbEqAdrs_Hit_dc_thm x = x
    val op msbEqAdrs_Hit_dc_thm =
    DT(((("CacheLib",53),
        [("CacheLib",[0,5,52]),
         ("arithmetic",
         [24,25,26,27,41,46,59,73,95,177,178,182,185,204,274]),
         ("bool",
         [8,25,31,35,42,50,51,52,53,55,57,62,92,95,100,103,104,123]),
         ("cache",[331]),("combin",[19]),("marker",[6]),
         ("numeral",[0,3,5,8]),("pair",[7,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[205,206,394,426])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%96%25%91%69%93%44%89%60%154%228@%154%176%106$5@%109$4@$3@@@$0@@%154%142%230$5@$4@$0@@%230$2@$1@$0@@@%176%106$2@%109$1@$3@@@$0@@@@|@|@|@|@|@|@"])
  fun op cacheRead_miss_thm x = x
    val op cacheRead_miss_thm =
    DT(((("CacheLib",54),
        [("CacheLib",[0,27,34,39]),
         ("arithmetic",
         [19,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,254,
          274,282]),("bit",[2]),("bitstring",[71]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,
          104,123]),("cache",[338,339]),("combin",[19]),
         ("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,9,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,205,206,608])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%97%46%96%25%89%60%193%214%26%215%47%72%190%211%29%209%62%82%181%75%154%228@%154%265%176%106$11@%109$10@$8@@@$7@@@%141$0@%239$4@@@@|@%239%235%110$9@$8@@@@||@|@@%229%105$7@$6@@$3@@||@|@@%166%107$4@%117$3@%127$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op cacheRead_hit_thm x = x
    val op cacheRead_hit_thm =
    DT(((("CacheLib",55),
        [("bitstring",[71]),
         ("bool",[25,26,27,29,31,52,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,327,338,339]),("combin",[7,19]),("option",[14]),
         ("pair",[7,8,9,16])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%89%60%193%214%26%215%47%72%190%211%29%209%62%82%181%73%154%176%106$11@%109$10@$8@@@$7@@%141$0@%239$4@@@|@%169%114$2@%119$1@%131$0@$7@@@@@||@|@@%229%105$7@$6@@$3@@||@|@@%166%107$4@%117$3@%127$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op cacheWrite_setCell_thm x = x
    val op cacheWrite_setCell_thm =
    DT(((("CacheLib",56),
        [("bool",[25,26,27,29,31,55,57,62,63,104,128,146]),
         ("cache",[183,186,189,236,242,327,340]),("combin",[7,12,19]),
         ("option",[14,16]),("pair",[7,8,9,16]),
         ("words",[144])]),["DISK_THM"]),
       [read"%91%68%93%43%101%23%97%46%96%25%89%60%192%213%26%47%190%211%29%209%62%82%136%140%201%207%161$4$2@@$1@@@@%262$8@@@%141%203%207%161$4$2@@$1@@@%232$0@@@%263$8@@@||@|@@%229%105$7@$6@@$2@@||@@%167%108$5@%121$4@%134$3@%127$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op linefill_hit_t x = x
    val op linefill_hit_t =
    DT(((("CacheLib",57),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,185]),
         ("arm_step",[30]),
         ("bool",[14,25,27,31,35,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[186,189,330]),("combin",[7,8,11,15,16,19,33,35]),
         ("list",[28]),("marker",[6,9]),("num",[9]),("numeral",[3,7,8,16]),
         ("option",[14]),("pair",[4,8,9,45,46]),("rich_list",[18,19,345]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%98%28%93%29%93%62%97%46%96%25%89%60%99%38%194%216%55%7%188%58%188%33%99%82%182%43%177$5$10@@|@%261%258$9@%102%102$2@$1@@%200%156%224@@@@@%261%258$10@%102$1@%200%156%224@@@@@%258%232$0@@%200%156%224@@@@@@|@|@%240%163%158%226$4@@@@@|@%241%257%247%159%157%226$3@@@@%234%200%155%224@@@@@@@||@@%196%130$6@%113$5@%118$4@%128$3@%124$2@$0@@@@@@$1@@|@|@|@|@|@|@|@"])
  fun op fill_hit_thm x = x
    val op fill_hit_thm =
    DT(((("CacheLib",58),
        [("CacheLib",[57]),
         ("bool",[8,25,26,27,31,35,55,57,104,128,146,168]),
         ("cache",[236,237,239,242,331,337]),("combin",[7,12,19,21]),
         ("marker",[6]),("option",[6,7]),("pair",[7,8,16]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%89%60%192%213%26%47%190%211%29%209%62%82%176%106$9@%109$8@$4@@@$5@||@|@@%229%105$6@$5@@$2@@||@@%175%107$4@%117$3@%127$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op cacheRead_paHitdc'_thm x = x
    val op cacheRead_paHitdc'_thm =
    DT(((("CacheLib",59),
        [("CacheLib",[58]),
         ("bool",[8,25,26,27,29,31,52,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,236,327,331,339]),("combin",[7,19]),
         ("marker",[6]),("option",[14,22]),
         ("pair",[7,8,9,16])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%89%60%193%214%26%215%47%6%176%106$7@%109$6@$2@@@$3@||@|@@%166%107$4@%117$3@%127$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op cacheWrite_paHitdc'_thm x = x
    val op cacheWrite_paHitdc'_thm =
    DT(((("CacheLib",60),
        [("bool",[25,26,27,29,31,50,55,57,62,63,104,128,146]),
         ("cache",[186,189,236,242,327,331,340]),("combin",[7,12,19]),
         ("option",[14,16]),("pair",[4,5,7,8,9,16])]),["DISK_THM"]),
       [read"%91%68%93%43%101%23%97%46%96%25%89%60%192%213%26%47%176%106$7@%109$6@$1@@@$2@||@@%167%108$5@%121$4@%134$3@%127$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op cacheWrite_paNOTCHGpm_thm x = x
    val op cacheWrite_paNOTCHGpm_thm =
    DT(((("CacheLib",61),
        [("CacheLib",[39]),
         ("bool",[8,25,26,27,29,31,52,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,242,327,340]),("combin",[7,19]),
         ("option",[14,16]),("pair",[7,8,9,16])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%101%23%97%46%96%25%89%60%192%213%26%47%154%228@%141%239%235%110$6@$4@@@@%239%235%110$6@$0@@@@@||@@%167%108$5@%121$4@%134$3@%127$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op cacheWrite_read_thm x = x
    val op cacheWrite_read_thm =
    DT(((("CacheLib",62),
        [("CacheLib",[56,60]),("bitstring",[71]),
         ("bool",[8,25,26,27,29,31,53,55,57,62,63,104,128,146]),
         ("cache",[186,189,327,339]),("combin",[7,19]),("option",[14]),
         ("pair",[7,8,9,16])]),["DISK_THM"]),
       [read"%91%68%93%43%101%23%97%46%96%25%89%60%192%213%26%47%193%214%9%215%14%71%141%239$0@@%263$8@@||@|@@%166%107$7@%117$6@%127$0@$1@@@@$2@@||@@%167%108$5@%121$4@%134$3@%127$2@$1@@@@@$0@@|@|@|@|@|@|@"])
  fun op CacheRead_vaEQva'_thm x = x
    val op CacheRead_vaEQva'_thm =
    DT(((("CacheLib",63),
        [("CacheLib",[33]),
         ("bool",[25,26,27,29,31,50,55,57,62,63,104,128,146]),
         ("cache",[186,189,236,237,239,242,327,331,337,339]),
         ("combin",[7,12,19,21]),("option",[14,22]),
         ("pair",[4,7,16])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%89%60%153%166%107$5@%117$4@%127$3@$2@@@@$0@@%166%107$1@%117$4@%127$3@$2@@@@$0@@|@|@|@|@|@|@"])
  fun op CacheRead_lfoldEQval_SameAddress_thm x = x
    val op CacheRead_lfoldEQval_SameAddress_thm =
    DT(((("CacheLib",64),
        [("CacheLib",[59]),
         ("bool",[8,25,26,27,29,31,53,55,57,62,63,104,128,146]),
         ("cache",[186,189,236,327,339]),("combin",[7,19]),("list",[20]),
         ("option",[14]),("pair",[7,8,9,16])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%89%60%193%214%26%215%47%72%193%214%4%215%5%74%147$3@$0@||@|@@%166%107$7@%117$6@%127$1@$2@@@@$3@@||@|@@%166%107$4@%117$3@%127$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op CacheRead_KeepHit_if_PaHitDc_thm x = x
    val op CacheRead_KeepHit_if_PaHitDc_thm =
    DT(((("CacheLib",65),
        [("bool",[25,26,27,29,31,52,53,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,236,327,331,339]),("combin",[7,19]),
         ("option",[14]),("pair",[7,8,16])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%193%214%26%48%190%211%29%209%62%82%190%211%30%209%63%83%154%176%106$14@%109$13@$11@@@$8@@%154%176%106$10@%109$9@$11@@@$8@@%176%106$10@%109$9@$7@@@$8@@@||@|@@%229%105$7@$6@@$5@@||@|@@%229%105$8@$7@@$2@@||@@%166%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_KeepHit_if_iNOTEQi'_thm x = x
    val op Fill_KeepHit_if_iNOTEQi'_thm =
    DT(((("CacheLib",66),
        [("CacheLib",[20]),
         ("arithmetic",[19,41,46,59,71,73,95,125,178,181,185,203,254,282]),
         ("bit",[2]),
         ("bool",
         [8,14,25,26,27,31,35,51,52,53,55,57,62,63,95,100,103,104,123,128,
          146]),("cache",[236,237,239,242,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,22]),
         ("pair",[7,8,16]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,608])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%154%265%142$5@$2@@@%154%265%176%106$14@%109$13@$11@@@$8@@@%154%176%106$10@%109$9@$11@@@$8@@%176%106$10@%109$9@$7@@@$8@@@@||@|@@%229%105$7@$6@@$5@@||@|@@%229%105$8@$7@@$2@@||@@%175%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op EPNotEqNONE_impEvict_thm x = x
    val op EPNotEqNONE_impEvict_thm =
    DT(((("CacheLib",67),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[186,189,236,237,239,242,329,330,331,337]),
         ("combin",[7,12,19,21]),("list",[23,28]),("marker",[6]),
         ("num",[9]),("numeral",[3,5,7,8,16]),("option",[7,11,14,22]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%154%142$5@$2@@%154%265%176%106$14@%109$13@$11@@@$8@@@%154%176%106$10@%109$9@$11@@@$8@@%154%265%176%106$10@%109$9@$7@@@$8@@@%265%150%170%129%160$11$5@@@%109$4@$11@@@@%199@@@@@@||@|@@%229%105$7@$6@@$5@@||@|@@%229%105$8@$7@@$2@@||@@%175%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_NotchgTag'_thm x = x
    val op Fill_NotchgTag'_thm =
    DT(((("CacheLib",68),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[186,189,329,330]),("combin",[7,19]),("list",[23,28]),
         ("marker",[6]),("num",[9]),("numeral",[3,5,7,8,16]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%99%38%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%194%216%55%7%154%142$7@$4@@%154%265%142$6@$3@@@%154%228@%154%177$1$3@@@%154%177%161$12$4@@$3@@@%141%203%207$1$3@@@%232$2@@@%203%207%161$12$4@@$3@@@%232$2@@@@@@@@||@@%196%130%160$10$5@@@%113$5@%118$4@%128$11@%124$10@$9@@@@@@$6@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$7@$6@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_NotchgHitDC'Tag_thm x = x
    val op Fill_NotchgHitDC'Tag_thm =
    DT(((("CacheLib",69),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,103,104,123,128,
          146]),("cache",[186,189,236,237,239,242,328,330,331,337]),
         ("combin",[7,12,19,21]),("list",[23,28]),("marker",[6]),
         ("num",[9]),("numeral",[3,5,7,8,16]),("option",[6,7,10,11,14,22]),
         ("pair",[4,5,7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("words",[206])]),["DISK_THM"]),
       [read"%91%68%93%43%91%69%93%44%97%46%96%25%93%84%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%154%142$5@$2@@%154%265%176%106$15@%109$14@$10@@@$8@@@%154%177%161$10$5@@$1@@@%154%177%161$7$5@@$1@@@%154%150%170%129%160$10$5@@@%109$4@$10@@@@%206$9@@@%265%142$1@$9@@@@@@@||@|@@%229%105$10@$9@@$5@@||@|@@%229%105$9@$8@@$2@@||@@%175%107$7@%117$6@%127$3@$2@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op thm1 x = x
    val op thm1 =
    DT(((("CacheLib",70),
        [("CacheLib",[3,19,20,68,69]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,
          123,128,146]),
         ("cache",[186,189,236,237,239,242,328,330,331,337,338]),
         ("combin",[7,8,11,12,15,16,19,21,33,35]),("fcp",[60,61,62,63]),
         ("list",[23,28]),("marker",[6,9]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10,22]),
         ("pair",[4,5,7,8,9,16,45,46]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),("state_transformer",[9]),
         ("words",[1,111,150,206,394,426,608])]),["DISK_THM"]),
       [read"%91%68%93%43%91%69%93%44%97%46%96%25%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%188%41%188%40%154%228@%154%265%176%106$16@%109$15@$11@@@$10@@@%154%176%106$14@%109$13@$11@@@$10@@%154%176%106$14@%109$13@$9@@@$10@@%154%265%142%258%261%258$3@$1@@$4@@%102$0@%200%156%224@@@@@%258%261%258$6@$1@@$7@@%102$0@%200%156%224@@@@@@@%141%169%114$4@%119$3@%131$2@$11@@@@@%169%114$4@%119$3@%131$2@$9@@@@@@@@@@|@%240%163%158%226$9@@@@@|@%241%257%247%159%157%226$8@@@@%234%200%155%224@@@@@@@||@|@@%229%105$9@$8@@$5@@||@|@@%229%105$8@$7@@$2@@||@@%175%107$6@%117$5@%127$2@$1@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_someEPevict_dcEQpm'_thm x = x
    val op Fill_someEPevict_dcEQpm'_thm =
    DT(((("CacheLib",71),
        [("CacheLib",[0,16,27,32]),
         ("arithmetic",
         [19,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,254,
          274,282]),("bit",[2]),("bitstring",[71]),
         ("bool",
         [8,14,25,26,27,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,104,
          123,128,146]),("cache",[236,237,239,242,319,337,338]),
         ("combin",[7,8,11,12,15,16,19,21,35]),("fcp",[60,61,62,63]),
         ("marker",[6,9]),("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[7,10,16]),
         ("pair",[4,5,7,8,9,16,45,46]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,203,205,206,321,608])]),["DISK_THM"]),
       [read"%91%68%93%43%91%69%93%44%97%46%96%25%93%84%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%188%40%154%195%112$3@%109$2@$11@@@@%154%136%265%142$15@$13@@@%142$3@$6@@@%154%228@%154%142$2@%208%206$10@@@@%154%150%170%129%160$11$6@@@%109$5@$11@@@@%206$10@@@%141%169%114$3@%119$2@%131$1@$11@@@@@%239%235%110$13@$7@@@@@@@@@|@%240%163%158%226$8@@@@@||@|@@%229%105$10@$9@@$5@@||@|@@%229%105$9@$8@@$2@@||@@%175%107$7@%117$6@%127$3@$2@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_KeepHitDC'Tag_thm x = x
    val op Fill_KeepHitDC'Tag_thm =
    DT(((("CacheLib",72),
        [("CacheLib",[19]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),("cache",[186,189,236,237,239,242,328,330,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10,11,14]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,206,608])]),["DISK_THM"]),
       [read"%91%68%93%43%91%69%93%44%97%46%96%25%93%84%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%154%136%142$5@$2@@%265%142$1@$9@@@@%154%265%176%106$15@%109$14@$10@@@$8@@@%154%176%106$13@%109$12@$10@@@$8@@%154%150%170%129%160$10$5@@@%109$4@$10@@@@%206$9@@@%177%161$7$5@@$1@@@@@@||@|@@%229%105$10@$9@@$5@@||@|@@%229%105$9@$8@@$2@@||@@%175%107$7@%117$6@%127$3@$2@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_EpEqtag_tagDc'Miss_thm x = x
    val op Fill_EpEqtag_tagDc'Miss_thm =
    DT(((("CacheLib",73),
        [("CacheLib",[72]),
         ("bool",
         [8,25,26,27,29,31,50,52,53,55,57,62,92,94,100,104,123,144]),
         ("cache",[331]),("combin",[8,11,15,16,19,35]),("marker",[6,9]),
         ("option",[10,14,22]),("pair",[7,8,9,16,45,46])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%93%84%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%154%142$5@$2@@%154%265%176%106$15@%109$14@$12@@@$8@@@%154%176%106$11@%109$10@$12@@@$8@@%154%265%176%106$11@%109$10@$7@@@$8@@@%154%150%170%129%160$12$5@@@%109$4@$12@@@@%206$9@@@%142$1@$9@@@@@@||@|@@%229%105$8@$7@@$5@@||@|@@%229%105$9@$8@@$2@@||@@%175%107$7@%117$6@%127$5@$4@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_ifInLineRange_HitDC'Pa_thm x = x
    val op Fill_ifInLineRange_HitDC'Pa_thm =
    DT(((("CacheLib",74),
        [("CacheLib",[19,20]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,50,51,52,53,55,57,62,63,95,100,103,104,
          123,128,146]),
         ("cache",[186,189,236,237,239,242,328,329,330,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,14,22,28]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),("state_transformer",[9]),
         ("words",[1,111,150,203,206,608])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%188%40%154%228@%154%265%176%106$15@%109$14@$12@@@$9@@@%154%265%176%106$11@%109$10@$12@@@$9@@@%154%176%106$11@%109$10@$8@@@$9@@%136%142$6@$3@@%142$5@$2@@@@@@|@%240%163%158%226$8@@@@@||@|@@%229%105$7@$6@@$5@@||@|@@%229%105$8@$7@@$2@@||@@%175%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op linefill_slEq_diffInputDc_thm x = x
    val op linefill_slEq_diffInputDc_thm =
    DT(((("CacheLib",75),
        [("CacheLib",[22]),("arithmetic",[19,26,27,71,125]),("bit",[2]),
         ("bool",[8,14,25,52,55,57,62,63,104,123]),
         ("combin",[8,11,15,16,33,35]),("fcp",[60,61,62,63]),
         ("marker",[6]),("numeral",[0,3,5,7,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,16]),
         ("words",[1,111,203,206])]),["DISK_THM"]),
       [read"%98%28%93%29%93%62%97%46%96%25%99%38%99%82%96%26%89%60%186%55%188%41%188%40%182%43%154%139$6@$7@@%154%139$7@%227%238@@@%154%141%169%114$11@%119$10@%131$6@$8@@@@@%239%235%110$0@$9@@@@@%141%169%114$11@%119$10@%131$6@$8@@@@@%203%207$3$10@@@%232$6@@@@@@|@%261%258$9@%102%102$1@$0@@%200%156%224@@@@@%261%258$10@%102$0@%200%156%224@@@@@%258%232$5@@%200%156%224@@@@@@|@%240%163%158%226$2@@@@@|@%241%257%247%159%157%226$1@@@@%234%200%155%224@@@@@@@|@%174%196%130$8@%113$7@%118$6@%128$5@%124$1@$3@@@@@@$0@@@|@|@|@|@|@|@|@|@|@"])
  fun op linefill_slEq_diffInputDcAndalsoPM_thm x = x
    val op linefill_slEq_diffInputDcAndalsoPM_thm =
    DT(((("CacheLib",76),
        [("CacheLib",[22]),("arithmetic",[19,26,27,71,125]),("bit",[2]),
         ("bool",[8,14,25,52,55,57,62,63,104,123]),
         ("combin",[8,11,15,16,33,35]),("fcp",[60,61,62,63]),
         ("marker",[6]),("numeral",[0,3,5,7,12,15,16,17]),
         ("numeral_bit",[5,21,25,26,28,29]),("pair",[7,16]),
         ("words",[1,111,203,206])]),["DISK_THM"]),
       [read"%93%29%93%62%93%63%99%82%98%28%97%46%96%25%96%26%93%43%89%60%99%38%99%35%184%47%186%55%186%56%188%41%188%40%154%265%142$15@$14@@@%154%139$13@$6@@%154%139$6@%227%238@@@%154%141%239%235%110$8@$11@@@@%239%235%110$8@$4@@@@@%154%142$8@%261%258$15@%102%102$1@$0@@%200%156%224@@@@@%261%258$16@%102$0@%200%156%224@@@@@%258%232$13@@%200%156%224@@@@@@@%141%203%207$3$15@@@%232$13@@@%203%207$2$15@@@%232$13@@@@@@@@|@%240%163%158%226$6@@@@@|@%241%257%247%159%157%226$5@@@@%234%200%155%224@@@@@@@|@%174%196%130$9@%113$13@%118$12@%128$1@%124$6@$3@@@@@@$4@@@|@%174%196%130$8@%113$12@%118$11@%128$7@%124$5@$2@@@@@@$3@@@|@%204%221%113$11@%118$9@%128$6@%124$5@$0@@@@@$2@@@|@|@|@|@|@|@|@|@|@|@|@|@"])
  fun op CacheRead_KeepMiss_if_PaMissDc_thm x = x
    val op CacheRead_KeepMiss_if_PaMissDc_thm =
    DT(((("CacheLib",77),
        [("bool",[25,26,27,29,31,52,53,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,236,327,331,339]),("combin",[7,19]),
         ("option",[14,22]),("pair",[7,8,16])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%193%214%26%48%190%211%29%209%62%82%190%211%30%209%63%83%154%176%106$14@%109$13@$11@@@$8@@%154%265%176%106$10@%109$9@$11@@@$8@@@%265%176%106$10@%109$9@$7@@@$8@@@@||@|@@%229%105$7@$6@@$5@@||@|@@%229%105$8@$7@@$2@@||@@%166%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_NotChgCache_ifEQSiAndalsoTag x = x
    val op Fill_NotChgCache_ifEQSiAndalsoTag =
    DT(((("CacheLib",78),
        [("bool",[25,26,27,31,55,57,104,123,128,146]),
         ("cache",[236,237,239,242,337]),("combin",[7,12,19,21]),
         ("marker",[6]),("option",[6,7]),("pair",[7,8,16])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%183%26%183%27%154%142$7@$4@@%154%142$6@$3@@%145$1@$0@@@|@%173%175%107$9@%117$8@%127$11@$10@@@@$7@@@|@%173%175%107$12@%117$11@%127$10@$9@@@@$6@@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$6@$5@@$0@@|@|@|@|@|@|@|@"])
  fun op diffPa_imply_diffElement_thm x = x
    val op diffPa_imply_diffElement_thm =
    DT(((("CacheLib",80),
        [("CacheLib",[32]),("arithmetic",[26,27]),
         ("bool",[8,25,27,31,52,53,55,57,62,91,95,104,123]),
         ("combin",[19]),("marker",[6]),("pair",[7,16]),
         ("words",[203,206])]),["DISK_THM"]),
       [read"%91%68%93%43%91%69%93%44%89%60%190%211%29%209%62%82%190%211%30%209%63%83%154%228@%154%265%142$9@$7@@@%225%265%142$5@$2@@@%225%265%148$3@$0@@@%265%142$4@$1@@@@@@||@|@@%229%105$5@$4@@$3@@||@|@@%229%105$4@$3@@$0@@|@|@|@|@|@"])
  fun op Fill_causing_evict_EP_IsSome_thm x = x
    val op Fill_causing_evict_EP_IsSome_thm =
    DT(((("CacheLib",81),
        [("arithmetic",[22,25,26,27,46,63,73,95,178,181,182,185]),
         ("arm_step",[30]),
         ("bool",
         [14,25,26,27,31,35,51,52,53,55,57,62,63,103,104,123,128,146]),
         ("cache",[186,189,236,237,239,242,330,331,337]),
         ("combin",[7,12,19,21]),("list",[23,28]),("marker",[6]),
         ("num",[9]),("numeral",[3,5,7,8,16]),("option",[6,7,11,14,22]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("words",[206])]),["DISK_THM"]),
       [read"%91%68%93%43%91%69%93%44%97%46%96%25%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%154%136%142$5@$2@@%265%142$4@$1@@@@%154%265%176%106$14@%109$13@$9@@@$8@@@%154%176%106$12@%109$11@$9@@@$8@@%154%265%176%106$12@%109$11@$7@@@$8@@@%265%150%170%129%160$9$5@@@%109$4@$9@@@@%199@@@@@@||@|@@%229%105$9@$8@@$5@@||@|@@%229%105$8@$7@@$2@@||@@%175%107$6@%117$5@%127$2@$1@@@@$0@@|@|@|@|@|@|@|@"])
  fun op Fill_Keep_Miss_DiffTag_thm x = x
    val op Fill_Keep_Miss_DiffTag_thm =
    DT(((("CacheLib",82),
        [("CacheLib",[19,79]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,
          128,146]),("cache",[186,189,236,237,239,242,328,330,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10,14,22,28]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,206,608])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%154%142$5@$2@@%154%265%142$4@$1@@@%154%265%176%106$10@%109$9@$11@@@$8@@@%265%176%106$10@%109$9@$7@@@$8@@@@@||@|@@%229%105$7@$6@@$5@@||@|@@%229%105$8@$7@@$2@@||@@%175%107$6@%117$5@%127$4@$3@@@@$0@@|@|@|@|@|@|@|@"])
  fun op CacheWrite_DiffPa_EqReadMemPa'_thm x = x
    val op CacheWrite_DiffPa_EqReadMemPa'_thm =
    DT(((("CacheLib",83),
        [("CacheLib",[39]),
         ("bool",[8,25,26,27,29,31,52,53,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,242,327,340]),("combin",[7,19]),
         ("option",[14,16]),("pair",[7,8,9,16])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%101%23%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%154%265%142$14@$9@@@%154%228@%154%265%176%106$10@%109$9@$11@@@$8@@@%154%265%176%106$10@%109$9@$7@@@$8@@@%141%239%235%110$9@$12@@@@%239%235%110$9@$6@@@@@@@@||@|@@%229%105$7@$6@@$5@@||@|@@%229%105$9@$8@@$2@@||@@%167%108$7@%121$6@%134$5@%127$4@$3@@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op CacheWrite_DiffPa_EqReadMemPa'_thm3 x = x
    val op CacheWrite_DiffPa_EqReadMemPa'_thm3 =
    DT(((("CacheLib",84),
        [("CacheLib",[39]),
         ("bool",[8,25,26,27,29,31,52,53,55,57,62,63,104,123,128,146]),
         ("cache",[186,189,242,327,340]),("combin",[7,19]),
         ("option",[14,16]),("pair",[7,8,9,16])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%101%23%97%46%96%25%91%69%93%44%89%60%192%213%26%47%190%211%29%209%62%82%190%211%30%209%63%83%154%265%142$14@$9@@@%154%228@%154%265%176%106$10@%109$9@$11@@@$8@@@%154%176%106$10@%109$9@$7@@@$8@@%141%239%235%110$9@$12@@@@%239%235%110$9@$6@@@@@@@@||@|@@%229%105$7@$6@@$5@@||@|@@%229%105$9@$8@@$2@@||@@%167%108$7@%121$6@%134$5@%127$4@$3@@@@@$0@@|@|@|@|@|@|@|@|@"])
  fun op Fill_dcEqPm_thm x = x
    val op Fill_dcEqPm_thm =
    DT(((("CacheLib",85),
        [("CacheLib",[0,5,22,27,32,38,79]),
         ("arithmetic",
         [19,24,25,26,27,41,46,59,71,73,95,125,177,178,181,182,185,203,204,
          254,274,282]),("bit",[2]),
         ("bool",
         [8,14,25,26,27,29,31,35,42,50,51,52,53,55,57,62,63,92,95,100,103,
          104,123,128,146]),("cache",[236,237,239,242,331,337,338]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("marker",[6]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[6,7,10]),
         ("pair",[4,5,7,8,9,16]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",
         [1,111,150,203,205,206,394,426,608])]),["DISK_THM", "cheat"]),
       [read"%91%68%93%43%97%46%96%25%89%60%192%213%26%47%190%211%29%209%62%82%154%228@%154%265%176%106$9@%109$8@$6@@@$5@@@%141%169%114$2@%119$1@%131$0@$4@@@@@%239%235%110$8@$7@@@@@@||@|@@%229%105$6@$5@@$2@@||@@%175%107$4@%117$3@%127$2@$1@@@@$0@@|@|@|@|@|@"])
  fun op Miss_After_Evict_thm x = x
    val op Miss_After_Evict_thm =
    DT(((("CacheLib",86),
        [("CacheLib",[0]),
         ("arithmetic",
         [19,22,25,26,27,41,46,59,63,71,73,95,125,178,181,182,185,203,254,
          282]),("arm_step",[30]),("bit",[2]),
         ("bool",
         [14,25,26,27,29,31,35,51,52,53,55,57,62,63,95,100,103,104,123,128,
          146]),("cache",[186,189,236,237,239,242,328,329,330,331,337]),
         ("combin",[7,12,19,21]),("fcp",[60,61,62,63]),("list",[23,28]),
         ("marker",[6]),("num",[9]),
         ("numeral",[0,3,5,7,8,9,12,15,16,17,32,33]),
         ("numeral_bit",[5,21,25,26,28,29]),("option",[7,10,11,14,22]),
         ("pair",[7,8,9,16]),("rich_list",[18,19,58,288,345]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,111,150,203,205,206,608])]),["DISK_THM"]),
       [read"%91%68%93%43%97%46%96%25%93%63%89%60%190%211%29%209%62%82%192%213%26%47%154%150%170%129%160$7$4@@@%109$3@$7@@@@%206$6@@@%154%265%176%106$10@%109$9@$7@@@$5@@@%154%228@%149%161$1$4@@$6@@%198@@@@||@@%175%107$8@%117$7@%127$6@$5@@@@$3@@||@|@@%229%105$5@$4@@$0@@|@|@|@|@|@|@"])
  end
  val _ = DB.bindl "CacheLib"
  [("dirty_axiom",dirty_axiom,DB.Axm),
   ("eviction_policy_axiom",eviction_policy_axiom,DB.Axm),
   ("invariant_cache_def",invariant_cache_def,DB.Def),
   ("write_mem32_def",write_mem32_def,DB.Def),
   ("WriteBackLine_simp_def",WriteBackLine_simp_def,DB.Def),
   ("msb_extract_def",msb_extract_def,DB.Def),
   ("lt_mod_thm",lt_mod_thm,DB.Thm),
   ("adr_segNeq_thm",adr_segNeq_thm,DB.Thm),
   ("adr_neq3_thm",adr_neq3_thm,DB.Thm), ("adr_thm",adr_thm,DB.Thm),
   ("adr_neq2_thm",adr_neq2_thm,DB.Thm),
   ("adr_neq_thm",adr_neq_thm,DB.Thm),
   ("write_read_thm",write_read_thm,DB.Thm),
   ("write_read_unch_thm",write_read_unch_thm,DB.Thm),
   ("wrtBck_dirty_thm",wrtBck_dirty_thm,DB.Thm),
   ("wrtBck_memory_thm",wrtBck_memory_thm,DB.Thm),
   ("WriteBackLine_Dont_change_cache_value",
    WriteBackLine_Dont_change_cache_value,
    DB.Thm),
   ("WriteBackLine_CellRead_dcEQdc'_thm",
    WriteBackLine_CellRead_dcEQdc'_thm,
    DB.Thm), ("wrtBckLine_dcEQpm'_thm",wrtBckLine_dcEQpm'_thm,DB.Thm),
   ("WriteBackLine_Dont_change_Mem_IfNotDirty_thm",
    WriteBackLine_Dont_change_Mem_IfNotDirty_thm,
    DB.Thm),
   ("wrtBckLine_pmEQpm'IfNotDirty_thm",
    wrtBckLine_pmEQpm'IfNotDirty_thm,
    DB.Thm),
   ("writBckLine_NotchgTag'_thm",writBckLine_NotchgTag'_thm,DB.Thm),
   ("writBckLine_NotchgSidx'_thm",writBckLine_NotchgSidx'_thm,DB.Thm),
   ("cellFill_memeq_thm",cellFill_memeq_thm,DB.Thm),
   ("linefill_memeq_thm",linefill_memeq_thm,DB.Thm),
   ("w2vWordsEq_impl_wordsEq",w2vWordsEq_impl_wordsEq,DB.Thm),
   ("neg_word_msb",neg_word_msb,DB.Thm),
   ("si_ge_1_thm",si_ge_1_thm,DB.Thm),
   ("wIdx_extract_thm",wIdx_extract_thm,DB.Thm),
   ("wi_lt_line_size_thm",wi_lt_line_size_thm,DB.Thm),
   ("wIdx_lt_dimword48_thm",wIdx_lt_dimword48_thm,DB.Thm),
   ("si_extract_thm",si_extract_thm,DB.Thm),
   ("word_log2_lt_adrSize",word_log2_lt_adrSize,DB.Thm),
   ("tag_extract_thm",tag_extract_thm,DB.Thm),
   ("lineSpec_thm",lineSpec_thm,DB.Thm),
   ("lineSpecEq_thm",lineSpecEq_thm,DB.Thm),
   ("fill_dcEQpm_thm",fill_dcEQpm_thm,DB.Thm),
   ("shift_add_thm",shift_add_thm,DB.Thm),
   ("writeback_mem_eq_thm",writeback_mem_eq_thm,DB.Thm),
   ("lineSpec_eq_thm",lineSpec_eq_thm,DB.Thm),
   ("writebackline_mem_eq_thm",writebackline_mem_eq_thm,DB.Thm),
   ("fill_pm'EQpm_diffIn_thm",fill_pm'EQpm_diffIn_thm,DB.Thm),
   ("CacheClean_dcEQpm'_thm",CacheClean_dcEQpm'_thm,DB.Thm),
   ("CacheClean_dcEQdc'_thm",CacheClean_dcEQdc'_thm,DB.Thm),
   ("CacheClean_dcEQdc'_diffMsb_thm",
    CacheClean_dcEQdc'_diffMsb_thm,
    DB.Thm),
   ("CacheClean_hitDc'_diffAddr_thm",
    CacheClean_hitDc'_diffAddr_thm,
    DB.Thm),
   ("CacheClean_keepMiss_diffMsb_thm",
    CacheClean_keepMiss_diffMsb_thm,
    DB.Thm),
   ("CacheClean_pmEqpm'_diffMsb_thm",
    CacheClean_pmEqpm'_diffMsb_thm,
    DB.Thm),
   ("CacheInvalidate_dcEQpm'_thm",CacheInvalidate_dcEQpm'_thm,DB.Thm),
   ("CacheInvalidate_missDc'_thm",CacheInvalidate_missDc'_thm,DB.Thm),
   ("CacheInvalidate_hitDc'_diffAddr_thm",
    CacheInvalidate_hitDc'_diffAddr_thm,
    DB.Thm),
   ("CacheInvalidate_dcEQdc'_diffAddr_thm",
    CacheInvalidate_dcEQdc'_diffAddr_thm,
    DB.Thm),
   ("CacheInvalidate_keepMiss_diffMsb_thm",
    CacheInvalidate_keepMiss_diffMsb_thm,
    DB.Thm),
   ("CacheInvalidate_pmEqpm'_diffMsb_thm",
    CacheInvalidate_pmEqpm'_diffMsb_thm,
    DB.Thm), ("msbEqAdrs_Hit_dc_thm",msbEqAdrs_Hit_dc_thm,DB.Thm),
   ("cacheRead_miss_thm",cacheRead_miss_thm,DB.Thm),
   ("cacheRead_hit_thm",cacheRead_hit_thm,DB.Thm),
   ("cacheWrite_setCell_thm",cacheWrite_setCell_thm,DB.Thm),
   ("linefill_hit_t",linefill_hit_t,DB.Thm),
   ("fill_hit_thm",fill_hit_thm,DB.Thm),
   ("cacheRead_paHitdc'_thm",cacheRead_paHitdc'_thm,DB.Thm),
   ("cacheWrite_paHitdc'_thm",cacheWrite_paHitdc'_thm,DB.Thm),
   ("cacheWrite_paNOTCHGpm_thm",cacheWrite_paNOTCHGpm_thm,DB.Thm),
   ("cacheWrite_read_thm",cacheWrite_read_thm,DB.Thm),
   ("CacheRead_vaEQva'_thm",CacheRead_vaEQva'_thm,DB.Thm),
   ("CacheRead_lfoldEQval_SameAddress_thm",
    CacheRead_lfoldEQval_SameAddress_thm,
    DB.Thm),
   ("CacheRead_KeepHit_if_PaHitDc_thm",
    CacheRead_KeepHit_if_PaHitDc_thm,
    DB.Thm),
   ("Fill_KeepHit_if_iNOTEQi'_thm",Fill_KeepHit_if_iNOTEQi'_thm,DB.Thm),
   ("EPNotEqNONE_impEvict_thm",EPNotEqNONE_impEvict_thm,DB.Thm),
   ("Fill_NotchgTag'_thm",Fill_NotchgTag'_thm,DB.Thm),
   ("Fill_NotchgHitDC'Tag_thm",Fill_NotchgHitDC'Tag_thm,DB.Thm),
   ("thm1",thm1,DB.Thm),
   ("Fill_someEPevict_dcEQpm'_thm",Fill_someEPevict_dcEQpm'_thm,DB.Thm),
   ("Fill_KeepHitDC'Tag_thm",Fill_KeepHitDC'Tag_thm,DB.Thm),
   ("Fill_EpEqtag_tagDc'Miss_thm",Fill_EpEqtag_tagDc'Miss_thm,DB.Thm),
   ("Fill_ifInLineRange_HitDC'Pa_thm",
    Fill_ifInLineRange_HitDC'Pa_thm,
    DB.Thm),
   ("linefill_slEq_diffInputDc_thm",linefill_slEq_diffInputDc_thm,DB.Thm),
   ("linefill_slEq_diffInputDcAndalsoPM_thm",
    linefill_slEq_diffInputDcAndalsoPM_thm,
    DB.Thm),
   ("CacheRead_KeepMiss_if_PaMissDc_thm",
    CacheRead_KeepMiss_if_PaMissDc_thm,
    DB.Thm),
   ("Fill_NotChgCache_ifEQSiAndalsoTag",
    Fill_NotChgCache_ifEQSiAndalsoTag,
    DB.Thm),
   ("diffPa_imply_diffElement_thm",diffPa_imply_diffElement_thm,DB.Thm),
   ("Fill_causing_evict_EP_IsSome_thm",
    Fill_causing_evict_EP_IsSome_thm,
    DB.Thm),
   ("Fill_Keep_Miss_DiffTag_thm",Fill_Keep_Miss_DiffTag_thm,DB.Thm),
   ("CacheWrite_DiffPa_EqReadMemPa'_thm",
    CacheWrite_DiffPa_EqReadMemPa'_thm,
    DB.Thm),
   ("CacheWrite_DiffPa_EqReadMemPa'_thm3",
    CacheWrite_DiffPa_EqReadMemPa'_thm3,
    DB.Thm), ("Fill_dcEqPm_thm",Fill_dcEqPm_thm,DB.Thm),
   ("Miss_After_Evict_thm",Miss_After_Evict_thm,DB.Thm)]

  local open GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("arm_stepTheory.arm_step_grammars",
                          arm_stepTheory.arm_step_grammars),
                         ("cacheTheory.cache_grammars",
                          cacheTheory.cache_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("invariant_cache", (Term.prim_mk_const { Name = "invariant_cache", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("invariant_cache", (Term.prim_mk_const { Name = "invariant_cache", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("write_mem32", (Term.prim_mk_const { Name = "write_mem32", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("write_mem32", (Term.prim_mk_const { Name = "write_mem32", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("WriteBackLine_simp", (Term.prim_mk_const { Name = "WriteBackLine_simp", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("WriteBackLine_simp", (Term.prim_mk_const { Name = "WriteBackLine_simp", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("msb_extract", (Term.prim_mk_const { Name = "msb_extract", Thy = "CacheLib"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("msb_extract", (Term.prim_mk_const { Name = "msb_extract", Thy = "CacheLib"}))
  val CacheLib_grammars = Parse.current_lgrms()
  end
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "CacheLib",
    thydataty = "compute",
    data =
        "CacheLib.invariant_cache_def CacheLib.msb_extract_def CacheLib.write_mem32_def CacheLib.WriteBackLine_simp_def"
  }

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "CacheLib"
end
